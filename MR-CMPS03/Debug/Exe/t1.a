;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 1/14/2017
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega16A
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*******************************************************/
;
;#include <mega16a.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;// I2C Bus functions
;#include <i2c.h>
;
;// Graphic Display functions
;#include <glcd.h>
;
;// Font used for displaying text
;// on the graphic display
;#include <font5x7.h>
;
;// Declare your global variables here
;
;int cnt0,a,b,c;
;
;
;void main(void)
; 0000 002B {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 002C // Declare your local variables here
; 0000 002D // Variable used to store graphic display
; 0000 002E // controller initialization data
; 0000 002F GLCDINIT_t glcd_init_data;
; 0000 0030 
; 0000 0031 // Input/Output Ports initialization
; 0000 0032 // Port A initialization
; 0000 0033 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0034 DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
;PCODE: $0000000E VOL: 0
;	glcd_init_data -> Y+0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0035 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0036 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0037 
; 0000 0038 // Port B initialization
; 0000 0039 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 003A DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 003B // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 003C PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 003D 
; 0000 003E // Port C initialization
; 0000 003F // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0040 DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0041 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0042 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0043 
; 0000 0044 // Port D initialization
; 0000 0045 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0046 DDRD=(1<<DDD7) | (1<<DDD6) | (1<<DDD5) | (1<<DDD4) | (1<<DDD3) | (1<<DDD2) | (1<<DDD1) | (1<<DDD0);
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0047 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 0048 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0049 
; 0000 004A // Timer/Counter 0 initialization
; 0000 004B // Clock source: System Clock
; 0000 004C // Clock value: Timer 0 Stopped
; 0000 004D // Mode: Normal top=0xFF
; 0000 004E // OC0 output: Disconnected
; 0000 004F TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0050 TCNT0=0x00;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0051 OCR0=0x00;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0052 
; 0000 0053 // Timer/Counter 1 initialization
; 0000 0054 // Clock source: System Clock
; 0000 0055 // Clock value: Timer1 Stopped
; 0000 0056 // Mode: Normal top=0xFFFF
; 0000 0057 // OC1A output: Disconnected
; 0000 0058 // OC1B output: Disconnected
; 0000 0059 // Noise Canceler: Off
; 0000 005A // Input Capture on Falling Edge
; 0000 005B // Timer1 Overflow Interrupt: Off
; 0000 005C // Input Capture Interrupt: Off
; 0000 005D // Compare A Match Interrupt: Off
; 0000 005E // Compare B Match Interrupt: Off
; 0000 005F TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0060 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0061 TCNT1H=0x00;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0062 TCNT1L=0x00;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0063 ICR1H=0x00;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0064 ICR1L=0x00;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0065 OCR1AH=0x00;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0066 OCR1AL=0x00;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0067 OCR1BH=0x00;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0068 OCR1BL=0x00;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0069 
; 0000 006A // Timer/Counter 2 initialization
; 0000 006B // Clock source: System Clock
; 0000 006C // Clock value: Timer2 Stopped
; 0000 006D // Mode: Normal top=0xFF
; 0000 006E // OC2 output: Disconnected
; 0000 006F ASSR=0<<AS2;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0070 TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0071 TCNT2=0x00;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0072 OCR2=0x00;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0073 
; 0000 0074 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0075 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0076 
; 0000 0077 // External Interrupt(s) initialization
; 0000 0078 // INT0: Off
; 0000 0079 // INT1: Off
; 0000 007A // INT2: Off
; 0000 007B MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 007C MCUCSR=(0<<ISC2);
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 007D 
; 0000 007E // USART initialization
; 0000 007F // USART disabled
; 0000 0080 UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0081 
; 0000 0082 // Analog Comparator initialization
; 0000 0083 // Analog Comparator: Off
; 0000 0084 // The Analog Comparator's positive input is
; 0000 0085 // connected to the AIN0 pin
; 0000 0086 // The Analog Comparator's negative input is
; 0000 0087 // connected to the AIN1 pin
; 0000 0088 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0089 SFIOR=(0<<ACME);
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 008A 
; 0000 008B // ADC initialization
; 0000 008C // ADC disabled
; 0000 008D ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 008E 
; 0000 008F // SPI initialization
; 0000 0090 // SPI disabled
; 0000 0091 SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0092 
; 0000 0093 // TWI initialization
; 0000 0094 // TWI disabled
; 0000 0095 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0096 
; 0000 0097 // Bit-Banged I2C Bus initialization
; 0000 0098 // I2C Port: PORTB
; 0000 0099 // I2C SDA bit: 7
; 0000 009A // I2C SCL bit: 6
; 0000 009B // Bit Rate: 100 kHz
; 0000 009C // Note: I2C settings are specified in the
; 0000 009D // Project|Configure|C Compiler|Libraries|I2C menu.
; 0000 009E i2c_init();
;PCODE: $00000053 VOL: 0
; 0000 009F 
; 0000 00A0 // Graphic Display Controller initialization
; 0000 00A1 // The PCD8544 connections are specified in the
; 0000 00A2 // Project|Configure|C Compiler|Libraries|Graphic Display menu:
; 0000 00A3 // SDIN - PORTC Bit 0
; 0000 00A4 // SCLK - PORTC Bit 1
; 0000 00A5 // D /C - PORTC Bit 2
; 0000 00A6 // /SCE - PORTC Bit 3
; 0000 00A7 // /RES - PORTC Bit 4
; 0000 00A8 
; 0000 00A9 // Specify the current font for displaying text
; 0000 00AA glcd_init_data.font=font5x7;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 00AB // No function is used for reading
; 0000 00AC // image data from external memory
; 0000 00AD glcd_init_data.readxmem=NULL;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 00AE // No function is used for writing
; 0000 00AF // image data to external memory
; 0000 00B0 glcd_init_data.writexmem=NULL;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 00B1 // Set the LCD temperature coefficient
; 0000 00B2 glcd_init_data.temp_coef=PCD8544_DEFAULT_TEMP_COEF;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 00B3 // Set the LCD bias
; 0000 00B4 glcd_init_data.bias=PCD8544_DEFAULT_BIAS;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 00B5 // Set the LCD contrast control voltage VLCD
; 0000 00B6 glcd_init_data.vlcd=PCD8544_DEFAULT_VLCD;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 00B7 
; 0000 00B8 glcd_init(&glcd_init_data);
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 00B9 
; 0000 00BA while (1)
;PCODE: $00000068 VOL: 0
; 0000 00BB       {
; 0000 00BC       // Place your code here
; 0000 00BD       /*cnt0=0;
; 0000 00BE       while(PINA.2 == 0);
; 0000 00BF       while(PINA.2 == 1)
; 0000 00C0         {
; 0000 00C1         cnt0++;
; 0000 00C2         delay_us(100);
; 0000 00C3         }*/
; 0000 00C4       i2c_start();
;PCODE: $00000069 VOL: 0
; 0000 00C5       i2c_write(0xc0);
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 00C6       i2c_write(1);
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 00C7       i2c_start();
;PCODE: $0000006E VOL: 0
; 0000 00C8       i2c_write(0xc1);
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 00C9       cnt0=i2c_read(0);
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 00CA       i2c_stop();
;PCODE: $00000075 VOL: 0
; 0000 00CB 
; 0000 00CC       glcd_putcharxy(6,20,((cnt0/1000)%10+'0'));
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 00CD       glcd_putcharxy(13,20,((cnt0/100)%10+'0'));
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 00CE       glcd_putcharxy(20,20,((cnt0/10)%10+'0'));
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 00CF       glcd_putcharxy(27,20,((cnt0/1)%10+'0'));
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 00D0 
; 0000 00D1 
; 0000 00D2 
; 0000 00D3 
; 0000 00D4 
; 0000 00D5       }
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 00D6 }
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
