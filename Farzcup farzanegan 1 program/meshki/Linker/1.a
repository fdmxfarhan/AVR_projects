;
;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.03.4 Standard
;Automatic Program Generator
;© Copyright 1998-2008 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 10/31/2015
;Author  :
;Company :
;Comments:
;
;
;Chip type           : ATmega64
;Program type        : Application
;Clock frequency     : 11.059200 MHz
;Memory model        : Small
;External RAM size   : 0
;Data Stack size     : 1024
;*****************************************************/
;
;#include <mega64.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <stdio.h>
;
;// I2C Bus functions
;#asm
;PCODE: $0000000D VOL: 0
   .equ __i2c_port=0x12 ;PORTD
;PCODE: $0000000E VOL: 0
   .equ __sda_bit=1
;PCODE: $0000000F VOL: 0
   .equ __scl_bit=0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0022 #endasm
;#include <i2c.h>
;eeprom int c;
;//////////////////////////////////////////cmp
; #define EEPROM_BUS_ADDRESS 0xc0
;int cmp;
;/* read a byte from the EEPROM */
;unsigned char compass_read(unsigned char address) {
; 0000 0029 unsigned char compass_read(unsigned char address) {

	.CSEG
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 002A unsigned char data;
; 0000 002B i2c_start();
;PCODE: $00000014 VOL: 0
;	address -> Y+1
;	data -> R17
;PCODE: $00000015 VOL: 0
; 0000 002C i2c_write(EEPROM_BUS_ADDRESS);
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 002D i2c_write(address);
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 002E i2c_start();
;PCODE: $0000001C VOL: 0
; 0000 002F i2c_write(EEPROM_BUS_ADDRESS | 1);
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0030 data=i2c_read(0);
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0031 i2c_stop();
;PCODE: $00000024 VOL: 0
; 0000 0032 return data;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0033 }
;PCODE: $0000002A VOL: 0
;#define KAF 400
;
;// Alphanumeric LCD Module functions
;#asm
;PCODE: $0000002B VOL: 0
   .equ __lcd_port=0x15 ;PORTC
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0039 #endasm
;#include <lcd.h>
;
;#define RXB8 1
;#define TXB8 0
;#define UPE 2
;#define OVR 3
;#define FE 4
;#define UDRE 5
;#define RXC 7
;
;#define FRAMING_ERROR (1<<FE)
;#define PARITY_ERROR (1<<UPE)
;#define DATA_OVERRUN (1<<OVR)
;#define DATA_REGISTER_EMPTY (1<<UDRE)
;#define RX_COMPLETE (1<<RXC)
;
;// USART1 Receiver buffer
;#define RX_BUFFER_SIZE1 8
;char rx_buffer1[RX_BUFFER_SIZE1];
;
;#if RX_BUFFER_SIZE1<256
;unsigned char rx_wr_index1,rx_rd_index1,rx_counter1;
;#else
;unsigned int rx_wr_index1,rx_rd_index1,rx_counter1;
;#endif
;
;// This flag is set on USART1 Receiver buffer overflow
;bit rx_buffer_overflow1;
;   int t=0;
;// USART1 Receiver interrupt service routine
;interrupt [USART1_RXC] void usart1_rx_isr(void)
; 0000 0059 {
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 005A char status,data;
; 0000 005B status=UCSR1A;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;	status -> R17
;	data -> R16
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 005C data=UDR1;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 005D if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 005E    {
; 0000 005F    rx_buffer1[rx_wr_index1]=data;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0060    if (++rx_wr_index1 == RX_BUFFER_SIZE1) rx_wr_index1=0;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0061    if (++rx_counter1 == RX_BUFFER_SIZE1)
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0062       {
; 0000 0063       rx_counter1=0;
;PCODE: $0000004A VOL: 0
; 0000 0064       rx_buffer_overflow1=1;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0065       };
;PCODE: $0000004E VOL: 0
; 0000 0066    };
;PCODE: $0000004F VOL: 0
; 0000 0067   if (data=='1'){
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0068    lcd_gotoxy(12,1);
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0069    lcd_putchar('1');
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 006A    t=1;
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 006B    }
; 0000 006C    else    if (data=='2'){
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 006D    lcd_gotoxy(12,1);
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 006E    lcd_putchar('2');
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 006F    t=2;
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0070    }
; 0000 0071      else    if (data=='3'){
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0072    lcd_gotoxy(12,1);
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 0073    lcd_putchar('3');
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 0074    t=3;
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 0075    }
; 0000 0076    else    if (data=='4'){
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 0077    lcd_gotoxy(12,1);
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 0078    lcd_putchar('4');
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 0079    t=4;
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 007A    }
; 0000 007B    else if (data=='5'){
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 007C       lcd_gotoxy(12,1);
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 007D    lcd_putchar('5');
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 007E    t=5;
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 007F    }
; 0000 0080       else if (data=='6'){
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 0081       lcd_gotoxy(12,1);
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 0082    lcd_putchar('6');
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0000 0083    t=6;
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 0084    }
; 0000 0085       else if (data=='7'){
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 0086       lcd_gotoxy(12,1);
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 0087    lcd_putchar('7');
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 0088    t=7;
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 0089    }
; 0000 008A       else if (data=='8'){
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 008B       lcd_gotoxy(12,1);
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 008C    lcd_putchar('8');
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 008D    t=8;
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 008E    }
; 0000 008F       else if (data=='9'){
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0000 0090       lcd_gotoxy(12,1);
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0000 0091    lcd_putchar('9');
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
; 0000 0092    t=9;
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 0093    }
; 0000 0094       else if (data=='o'){
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0000 0095       lcd_gotoxy(12,1);
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 0096    lcd_putchar('o');
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
; 0000 0097    t=10;
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
; 0000 0098    }
; 0000 0099     else {
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0000 009A    lcd_gotoxy(12,1);
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
; 0000 009B    lcd_putchar('n');
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0000 009C    t=0;}
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0000 009D  }
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;
;// Get a character from the USART1 Receiver buffer
;#pragma used+
;char getchar1(void)
; 0000 00A2 {
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0000 00A3 char data;
; 0000 00A4 while (rx_counter1==0);
;PCODE: $000000FF VOL: 0
;	data -> R17
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
; 0000 00A5 data=rx_buffer1[rx_rd_index1];
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0000 00A6 if (++rx_rd_index1 == RX_BUFFER_SIZE1) rx_rd_index1=0;
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
; 0000 00A7 #asm("cli")
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
	cli
;PCODE: $00000110 VOL: 0
; 0000 00A8 --rx_counter1;
;PCODE: $00000111 VOL: 0
; 0000 00A9 #asm("sei")
;PCODE: $00000112 VOL: 0
	sei
;PCODE: $00000113 VOL: 0
; 0000 00AA return data;
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
; 0000 00AB }
;PCODE: $00000117 VOL: 0
;#pragma used-
;// Write a character to the USART1 Transmitter
;#pragma used+
;void putchar1(char c)
; 0000 00B0 {
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 00B1 while ((UCSR1A & DATA_REGISTER_EMPTY)==0);
;	c -> Y+0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0000 00B2 UDR1=c;
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
; 0000 00B3 }
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;#pragma used-
;
;#include <delay.h>
;
;#define ADC_VREF_TYPE 0x40
;
;// Read the AD conversion result
;unsigned int read_adc(unsigned char adc_input)
; 0000 00BC {
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
; 0000 00BD ADMUX=adc_input | (ADC_VREF_TYPE & 0xff);
;	adc_input -> Y+0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
; 0000 00BE // Delay needed for the stabilization of the ADC input voltage
; 0000 00BF delay_us(10);
;PCODE: $0000012C VOL: 0
; 0000 00C0 // Start the AD conversion
; 0000 00C1 ADCSRA|=0x40;
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
; 0000 00C2 // Wait for the AD conversion to complete
; 0000 00C3 while ((ADCSRA & 0x10)==0);
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0000 00C4 ADCSRA|=0x10;
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0000 00C5 return ADCW;
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
; 0000 00C6 }
;PCODE: $0000013F VOL: 0
;
;// Declare your global variables here
;void motor(int ML1,int ML2,int MR2,int MR1){
; 0000 00C9 void motor(int ML1,int ML2,int MR2,int MR1){
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
; 0000 00CA #asm("cli") ;
;	ML1 -> Y+6
;	ML2 -> Y+4
;	MR2 -> Y+2
;	MR1 -> Y+0
;PCODE: $00000142 VOL: 0
	cli
;PCODE: $00000143 VOL: 0
; 0000 00CB #asm("wdr");
;PCODE: $00000144 VOL: 0
	wdr
;PCODE: $00000145 VOL: 0
; 0000 00CC 
; 0000 00CD if(ML1<-255) ML1=-255;
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0000 00CE if(ML2<-255) ML2=-255;
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
; 0000 00CF if(MR1<-255) MR1=-255;
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
; 0000 00D0 if(MR2<-255) MR2=-255;
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
; 0000 00D1 
; 0000 00D2 if(ML1>255) ML1=255;
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
; 0000 00D3 if(ML2>255) ML2=255;
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
; 0000 00D4 if(MR1>255) MR1=255;
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
; 0000 00D5 if(MR2>255) MR2=255;
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
; 0000 00D6 /////////////////////////////////
; 0000 00D7 if(ML1>=0){
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
; 0000 00D8 PORTD.7=0;
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
; 0000 00D9 OCR2=ML1;
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
; 0000 00DA #asm("wdr");
;PCODE: $0000017D VOL: 0
	wdr
;PCODE: $0000017E VOL: 0
; 0000 00DB }
; 0000 00DC else if(ML1<0){
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
; 0000 00DD PORTD.7=1;
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
; 0000 00DE OCR2=ML1;
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
; 0000 00DF #asm("wdr");
;PCODE: $00000188 VOL: 0
	wdr
;PCODE: $00000189 VOL: 0
; 0000 00E0 }
; 0000 00E1 
; 0000 00E2 
; 0000 00E3 
; 0000 00E4      /////////////////////////
; 0000 00E5 if(ML2>=0){
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
; 0000 00E6 PORTD.6=0;
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
; 0000 00E7 OCR1B=ML2;
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
; 0000 00E8 #asm("wdr");
;PCODE: $00000193 VOL: 0
	wdr
;PCODE: $00000194 VOL: 0
; 0000 00E9 }
; 0000 00EA else if(ML2<0){
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
; 0000 00EB PORTD.6=1;
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
; 0000 00EC OCR1B=ML2;
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
; 0000 00ED #asm("wdr");
;PCODE: $0000019E VOL: 0
	wdr
;PCODE: $0000019F VOL: 0
; 0000 00EE }
; 0000 00EF 
; 0000 00F0    /////////////////////////
; 0000 00F1 if(MR1>=0){
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
; 0000 00F2 PORTD.4=0;
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
; 0000 00F3 OCR0=MR1;
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
; 0000 00F4 #asm("wdr");
;PCODE: $000001A9 VOL: 0
	wdr
;PCODE: $000001AA VOL: 0
; 0000 00F5 }
; 0000 00F6 else if(MR1<0){
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
; 0000 00F7 PORTD.4=1;
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
; 0000 00F8 OCR0=MR1;
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
; 0000 00F9 #asm("wdr")
;PCODE: $000001B4 VOL: 0
	wdr
;PCODE: $000001B5 VOL: 0
; 0000 00FA }
; 0000 00FB 
; 0000 00FC  ////////////////////////
; 0000 00FD  if(MR2>=0){
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
; 0000 00FE PORTD.5=0;
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
; 0000 00FF OCR1A=MR2;
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
; 0000 0100 #asm("wdr");
;PCODE: $000001BF VOL: 0
	wdr
;PCODE: $000001C0 VOL: 0
; 0000 0101 }
; 0000 0102 else if(MR2<0){
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
; 0000 0103 PORTD.5=1;
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
; 0000 0104 OCR1A=MR2;
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
; 0000 0105 #asm("wdr");
;PCODE: $000001CA VOL: 0
	wdr
;PCODE: $000001CB VOL: 0
; 0000 0106 }
; 0000 0107 #asm("sei") ;
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
	sei
;PCODE: $000001CF VOL: 0
; 0000 0108 }
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;
;
;
;
;int SL,SR,SB,RL=0,sum=0;
;      void sharp(){
; 0000 010E void sharp(){
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
; 0000 010F       #asm("cli") ;
;PCODE: $000001D5 VOL: 0
	cli
;PCODE: $000001D6 VOL: 0
; 0000 0110       #asm("wdr") ;
;PCODE: $000001D7 VOL: 0
	wdr
;PCODE: $000001D8 VOL: 0
; 0000 0111       SB=read_adc(5);
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
; 0000 0112       SR=read_adc(4);
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
; 0000 0113       SL=read_adc(3);
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
; 0000 0114 
; 0000 0115        lcd_gotoxy(13,1);
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
; 0000 0116       lcd_putchar((SR/100)%10+'0');
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
; 0000 0117       lcd_putchar((SR/10)%10+'0');
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
; 0000 0118       lcd_putchar((SR/1)%10+'0');
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
; 0000 0119 //        lcd_gotoxy(8,0);
; 0000 011A //      lcd_putchar((SB/100)%10+'0');
; 0000 011B //      lcd_putchar((SB/10)%10+'0');
; 0000 011C //      lcd_putchar((SB/1)%10+'0');
; 0000 011D 
; 0000 011E        lcd_gotoxy(8,1);
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
; 0000 011F       lcd_putchar((SL/100)%10+'0');
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
; 0000 0120       lcd_putchar((SL/10)%10+'0');
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
; 0000 0121       lcd_putchar((SL/1)%10+'0');
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
; 0000 0122 
; 0000 0123         sum= SR+SL;
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
; 0000 0124        RL=SR-SL;
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
; 0000 0125 
; 0000 0126 
; 0000 0127 
; 0000 0128        //       if(RL>0)
; 0000 0129 //       {
; 0000 012A //       lcd_gotoxy(0,1);
; 0000 012B //       lcd_putchar('+');
; 0000 012C //       lcd_putchar((RL/100)%10+'0');
; 0000 012D //       lcd_putchar((RL/10)%10+'0');
; 0000 012E //       lcd_putchar((RL/1)%10+'0');
; 0000 012F //                }
; 0000 0130 //               else  if(RL<0)
; 0000 0131 //               {
; 0000 0132 //       lcd_gotoxy(0,1);
; 0000 0133 //       lcd_putchar('-');
; 0000 0134 //       lcd_putchar((-RL/100)%10+'0');
; 0000 0135 //       lcd_putchar((-RL/10)%10+'0');
; 0000 0136 //       lcd_putchar((-RL/1)%10+'0');
; 0000 0137 //                }
; 0000 0138 
; 0000 0139        if(RL>-60 && RL<80) RL=0;
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
; 0000 013A 
; 0000 013B           else if(RL>80) RL=RL*1.25;
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
; 0000 013C           else if(RL<-60) RL=RL;
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
; 0000 013D 
; 0000 013E 
; 0000 013F 
; 0000 0140       #asm("sei")  ;
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
	sei
;PCODE: $0000024A VOL: 0
; 0000 0141      }
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
;
;
;   int adc[16],min=0,i,kaf[16],mini=0,r=0,l=0,f=0,b=0,h=0,p=0,m=0;
;      void sensor() {
; 0000 0145 void sensor() {
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
; 0000 0146        #asm("cli") ;
;PCODE: $0000024F VOL: 0
	cli
;PCODE: $00000250 VOL: 0
; 0000 0147        #asm("wdr");
;PCODE: $00000251 VOL: 0
	wdr
;PCODE: $00000252 VOL: 0
; 0000 0148     for(i=0;i<16;i++)
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
; 0000 0149      {
; 0000 014A      #asm("wdr");
;PCODE: $0000025E VOL: 0
	wdr
;PCODE: $0000025F VOL: 0
; 0000 014B  PORTA.3=(i/8)%2;
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
; 0000 014C  PORTA.2=(i/4)%2;
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
; 0000 014D  PORTA.1=(i/2)%2;
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
; 0000 014E  PORTA.0=(i/1)%2;
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
; 0000 014F   adc[i]=read_adc(7);
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
; 0000 0150   kaf[i]=read_adc(6);
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
; 0000 0151 ////////////////////////////////////////////////////////////moghayese
; 0000 0152   if (adc[i]<adc[min])
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
; 0000 0153   {
; 0000 0154     min=i;
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
; 0000 0155      }
; 0000 0156 
; 0000 0157    if (kaf[i]<kaf[mini])
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
; 0000 0158    {
; 0000 0159 
; 0000 015A    mini=i;  }
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
; 0000 015B 
; 0000 015C }
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
; 0000 015D 
; 0000 015E 
; 0000 015F 
; 0000 0160 
; 0000 0161 if (adc[min]<900 && min!=0) {
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
; 0000 0162 h=(adc[min]+adc[min+1]+adc[min-1])/3;
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
;PCODE: $000002E8 VOL: 0
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
;PCODE: $000002F4 VOL: 0
;PCODE: $000002F5 VOL: 0
;PCODE: $000002F6 VOL: 0
; 0000 0163 if (h<100) m=9;
;PCODE: $000002F7 VOL: 0
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
;PCODE: $000002FA VOL: 0
;PCODE: $000002FB VOL: 0
; 0000 0164 else  m=(h/100)%10 ;
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
;PCODE: $00000304 VOL: 0
; 0000 0165 }
;PCODE: $00000305 VOL: 0
; 0000 0166 else if (adc[min]>900 )
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
; 0000 0167 {
; 0000 0168 h=1023;
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
; 0000 0169 m=11;
;PCODE: $00000311 VOL: 0
;PCODE: $00000312 VOL: 0
; 0000 016A }
; 0000 016B else if (min==0 ){
;PCODE: $00000313 VOL: 0
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
;PCODE: $00000317 VOL: 0
; 0000 016C h=(adc[0]+adc[1]+adc[15])/3;
;PCODE: $00000318 VOL: 0
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
;PCODE: $0000031B VOL: 0
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
; 0000 016D if (h<100) m=9;
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
;PCODE: $00000324 VOL: 0
;PCODE: $00000325 VOL: 0
;PCODE: $00000326 VOL: 0
; 0000 016E else  m=(h/100)%10 ;
;PCODE: $00000327 VOL: 0
;PCODE: $00000328 VOL: 0
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
;PCODE: $0000032B VOL: 0
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 0
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
; 0000 016F }
;PCODE: $00000330 VOL: 0
; 0000 0170  ///////////////////////////////////////////////////////////chap
; 0000 0171   lcd_gotoxy(0,0);
;PCODE: $00000331 VOL: 0
;PCODE: $00000332 VOL: 0
;PCODE: $00000333 VOL: 0
;PCODE: $00000334 VOL: 0
;PCODE: $00000335 VOL: 0
;PCODE: $00000336 VOL: 0
;PCODE: $00000337 VOL: 0
;PCODE: $00000338 VOL: 0
; 0000 0172   lcd_putchar((min/10)%10+'0');
;PCODE: $00000339 VOL: 0
;PCODE: $0000033A VOL: 0
;PCODE: $0000033B VOL: 0
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
;PCODE: $0000033E VOL: 0
;PCODE: $0000033F VOL: 0
;PCODE: $00000340 VOL: 0
;PCODE: $00000341 VOL: 0
; 0000 0173   lcd_putchar((min/1)%10+'0');
;PCODE: $00000342 VOL: 0
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
;PCODE: $00000345 VOL: 0
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
; 0000 0174   lcd_putchar('=');
;PCODE: $00000348 VOL: 0
;PCODE: $00000349 VOL: 0
;PCODE: $0000034A VOL: 0
; 0000 0175   lcd_putchar((h/1000)%10+'0');
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
;PCODE: $0000034D VOL: 0
;PCODE: $0000034E VOL: 0
;PCODE: $0000034F VOL: 0
;PCODE: $00000350 VOL: 0
;PCODE: $00000351 VOL: 0
;PCODE: $00000352 VOL: 0
;PCODE: $00000353 VOL: 0
; 0000 0176   lcd_putchar((h/100)%10+'0');
;PCODE: $00000354 VOL: 0
;PCODE: $00000355 VOL: 0
;PCODE: $00000356 VOL: 0
;PCODE: $00000357 VOL: 0
;PCODE: $00000358 VOL: 0
;PCODE: $00000359 VOL: 0
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
;PCODE: $0000035C VOL: 0
; 0000 0177   lcd_putchar((h/10)%10+'0');
;PCODE: $0000035D VOL: 0
;PCODE: $0000035E VOL: 0
;PCODE: $0000035F VOL: 0
;PCODE: $00000360 VOL: 0
;PCODE: $00000361 VOL: 0
;PCODE: $00000362 VOL: 0
;PCODE: $00000363 VOL: 0
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
; 0000 0178   lcd_putchar((h/1)%10+'0');
;PCODE: $00000366 VOL: 0
;PCODE: $00000367 VOL: 0
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
;PCODE: $0000036A VOL: 0
;PCODE: $0000036B VOL: 0
; 0000 0179   lcd_gotoxy(11,1);
;PCODE: $0000036C VOL: 0
;PCODE: $0000036D VOL: 0
;PCODE: $0000036E VOL: 0
;PCODE: $0000036F VOL: 0
;PCODE: $00000370 VOL: 0
; 0000 017A   lcd_putchar(m +'0');
;PCODE: $00000371 VOL: 0
;PCODE: $00000372 VOL: 0
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0
; 0000 017B   lcd_putchar((t/1)%10 +'0');
;PCODE: $00000375 VOL: 0
;PCODE: $00000376 VOL: 0
;PCODE: $00000377 VOL: 0
;PCODE: $00000378 VOL: 0
;PCODE: $00000379 VOL: 0
;PCODE: $0000037A VOL: 0
; 0000 017C 
; 0000 017D  lcd_gotoxy(8,0);
;PCODE: $0000037B VOL: 0
;PCODE: $0000037C VOL: 0
;PCODE: $0000037D VOL: 0
;PCODE: $0000037E VOL: 0
;PCODE: $0000037F VOL: 0
; 0000 017E  lcd_putchar((l/1)%10 +'0');
;PCODE: $00000380 VOL: 0
;PCODE: $00000381 VOL: 0
;PCODE: $00000382 VOL: 0
;PCODE: $00000383 VOL: 0
;PCODE: $00000384 VOL: 0
;PCODE: $00000385 VOL: 0
; 0000 017F  lcd_putchar((r/1)%10 +'0');
;PCODE: $00000386 VOL: 0
;PCODE: $00000387 VOL: 0
;PCODE: $00000388 VOL: 0
;PCODE: $00000389 VOL: 0
;PCODE: $0000038A VOL: 0
;PCODE: $0000038B VOL: 0
; 0000 0180  lcd_putchar((f/1)%10 +'0');
;PCODE: $0000038C VOL: 0
;PCODE: $0000038D VOL: 0
;PCODE: $0000038E VOL: 0
;PCODE: $0000038F VOL: 0
;PCODE: $00000390 VOL: 0
;PCODE: $00000391 VOL: 0
; 0000 0181 
; 0000 0182 
; 0000 0183  lcd_gotoxy(0,1);
;PCODE: $00000392 VOL: 0
;PCODE: $00000393 VOL: 0
;PCODE: $00000394 VOL: 0
;PCODE: $00000395 VOL: 0
;PCODE: $00000396 VOL: 0
; 0000 0184   lcd_putchar((mini/10)%10+'0');
;PCODE: $00000397 VOL: 0
;PCODE: $00000398 VOL: 0
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
;PCODE: $0000039B VOL: 0
;PCODE: $0000039C VOL: 0
;PCODE: $0000039D VOL: 0
;PCODE: $0000039E VOL: 0
;PCODE: $0000039F VOL: 0
; 0000 0185   lcd_putchar((mini/1)%10+'0');
;PCODE: $000003A0 VOL: 0
;PCODE: $000003A1 VOL: 0
;PCODE: $000003A2 VOL: 0
;PCODE: $000003A3 VOL: 0
;PCODE: $000003A4 VOL: 0
;PCODE: $000003A5 VOL: 0
; 0000 0186   lcd_putchar('=');
;PCODE: $000003A6 VOL: 0
;PCODE: $000003A7 VOL: 0
;PCODE: $000003A8 VOL: 0
; 0000 0187   lcd_putchar((kaf[mini]/1000)%10+'0');
;PCODE: $000003A9 VOL: 0
;PCODE: $000003AA VOL: 0
;PCODE: $000003AB VOL: 0
;PCODE: $000003AC VOL: 0
;PCODE: $000003AD VOL: 0
;PCODE: $000003AE VOL: 0
;PCODE: $000003AF VOL: 0
;PCODE: $000003B0 VOL: 0
;PCODE: $000003B1 VOL: 0
;PCODE: $000003B2 VOL: 0
;PCODE: $000003B3 VOL: 0
;PCODE: $000003B4 VOL: 0
;PCODE: $000003B5 VOL: 0
;PCODE: $000003B6 VOL: 0
; 0000 0188   lcd_putchar((kaf[mini]/100)%10+'0');
;PCODE: $000003B7 VOL: 0
;PCODE: $000003B8 VOL: 0
;PCODE: $000003B9 VOL: 0
;PCODE: $000003BA VOL: 0
;PCODE: $000003BB VOL: 0
;PCODE: $000003BC VOL: 0
;PCODE: $000003BD VOL: 0
;PCODE: $000003BE VOL: 0
;PCODE: $000003BF VOL: 0
;PCODE: $000003C0 VOL: 0
;PCODE: $000003C1 VOL: 0
;PCODE: $000003C2 VOL: 0
;PCODE: $000003C3 VOL: 0
;PCODE: $000003C4 VOL: 0
; 0000 0189   lcd_putchar((kaf[mini]/10)%10+'0');
;PCODE: $000003C5 VOL: 0
;PCODE: $000003C6 VOL: 0
;PCODE: $000003C7 VOL: 0
;PCODE: $000003C8 VOL: 0
;PCODE: $000003C9 VOL: 0
;PCODE: $000003CA VOL: 0
;PCODE: $000003CB VOL: 0
;PCODE: $000003CC VOL: 0
;PCODE: $000003CD VOL: 0
;PCODE: $000003CE VOL: 0
;PCODE: $000003CF VOL: 0
;PCODE: $000003D0 VOL: 0
;PCODE: $000003D1 VOL: 0
;PCODE: $000003D2 VOL: 0
; 0000 018A   lcd_putchar((kaf[mini]/1)%10+'0');
;PCODE: $000003D3 VOL: 0
;PCODE: $000003D4 VOL: 0
;PCODE: $000003D5 VOL: 0
;PCODE: $000003D6 VOL: 0
;PCODE: $000003D7 VOL: 0
;PCODE: $000003D8 VOL: 0
;PCODE: $000003D9 VOL: 0
;PCODE: $000003DA VOL: 0
;PCODE: $000003DB VOL: 0
;PCODE: $000003DC VOL: 0
;PCODE: $000003DD VOL: 0
; 0000 018B 
; 0000 018C       if ( (kaf[13]<KAF || kaf[12]<KAF || kaf[15]<KAF || kaf[14]<KAF)  && b==0  && l == 0 && r == 0  && f == 0)  l=1;
;PCODE: $000003DE VOL: 0
;PCODE: $000003DF VOL: 0
;PCODE: $000003E0 VOL: 0
;PCODE: $000003E1 VOL: 0
;PCODE: $000003E2 VOL: 0
;PCODE: $000003E3 VOL: 0
;PCODE: $000003E4 VOL: 0
;PCODE: $000003E5 VOL: 0
;PCODE: $000003E6 VOL: 0
;PCODE: $000003E7 VOL: 0
;PCODE: $000003E8 VOL: 0
;PCODE: $000003E9 VOL: 0
;PCODE: $000003EA VOL: 0
;PCODE: $000003EB VOL: 0
;PCODE: $000003EC VOL: 0
;PCODE: $000003ED VOL: 0
;PCODE: $000003EE VOL: 0
;PCODE: $000003EF VOL: 0
;PCODE: $000003F0 VOL: 0
;PCODE: $000003F1 VOL: 0
;PCODE: $000003F2 VOL: 0
;PCODE: $000003F3 VOL: 0
;PCODE: $000003F4 VOL: 0
;PCODE: $000003F5 VOL: 0
;PCODE: $000003F6 VOL: 0
;PCODE: $000003F7 VOL: 0
;PCODE: $000003F8 VOL: 0
;PCODE: $000003F9 VOL: 0
;PCODE: $000003FA VOL: 0
;PCODE: $000003FB VOL: 0
;PCODE: $000003FC VOL: 0
;PCODE: $000003FD VOL: 0
;PCODE: $000003FE VOL: 0
;PCODE: $000003FF VOL: 0
;PCODE: $00000400 VOL: 0
;PCODE: $00000401 VOL: 0
; 0000 018D       else  if ((kaf[0]<KAF || kaf[1]<KAF || kaf[2]<KAF || kaf[3]<KAF) && b==0  && l == 0 && r == 0 && f == 0) r=1;
;PCODE: $00000402 VOL: 0
;PCODE: $00000403 VOL: 0
;PCODE: $00000404 VOL: 0
;PCODE: $00000405 VOL: 0
;PCODE: $00000406 VOL: 0
;PCODE: $00000407 VOL: 0
;PCODE: $00000408 VOL: 0
;PCODE: $00000409 VOL: 0
;PCODE: $0000040A VOL: 0
;PCODE: $0000040B VOL: 0
;PCODE: $0000040C VOL: 0
;PCODE: $0000040D VOL: 0
;PCODE: $0000040E VOL: 0
;PCODE: $0000040F VOL: 0
;PCODE: $00000410 VOL: 0
;PCODE: $00000411 VOL: 0
;PCODE: $00000412 VOL: 0
;PCODE: $00000413 VOL: 0
;PCODE: $00000414 VOL: 0
;PCODE: $00000415 VOL: 0
;PCODE: $00000416 VOL: 0
;PCODE: $00000417 VOL: 0
;PCODE: $00000418 VOL: 0
;PCODE: $00000419 VOL: 0
;PCODE: $0000041A VOL: 0
;PCODE: $0000041B VOL: 0
;PCODE: $0000041C VOL: 0
;PCODE: $0000041D VOL: 0
;PCODE: $0000041E VOL: 0
;PCODE: $0000041F VOL: 0
;PCODE: $00000420 VOL: 0
;PCODE: $00000421 VOL: 0
;PCODE: $00000422 VOL: 0
;PCODE: $00000423 VOL: 0
;PCODE: $00000424 VOL: 0
;PCODE: $00000425 VOL: 0
;PCODE: $00000426 VOL: 0
; 0000 018E       else if((kaf[10]<KAF || kaf[9]<KAF || kaf[8]<KAF) && f==0 && b==0 && r==0 && l==0) f=1;
;PCODE: $00000427 VOL: 0
;PCODE: $00000428 VOL: 0
;PCODE: $00000429 VOL: 0
;PCODE: $0000042A VOL: 0
;PCODE: $0000042B VOL: 0
;PCODE: $0000042C VOL: 0
;PCODE: $0000042D VOL: 0
;PCODE: $0000042E VOL: 0
;PCODE: $0000042F VOL: 0
;PCODE: $00000430 VOL: 0
;PCODE: $00000431 VOL: 0
;PCODE: $00000432 VOL: 0
;PCODE: $00000433 VOL: 0
;PCODE: $00000434 VOL: 0
;PCODE: $00000435 VOL: 0
;PCODE: $00000436 VOL: 0
;PCODE: $00000437 VOL: 0
;PCODE: $00000438 VOL: 0
;PCODE: $00000439 VOL: 0
;PCODE: $0000043A VOL: 0
;PCODE: $0000043B VOL: 0
;PCODE: $0000043C VOL: 0
;PCODE: $0000043D VOL: 0
;PCODE: $0000043E VOL: 0
;PCODE: $0000043F VOL: 0
;PCODE: $00000440 VOL: 0
;PCODE: $00000441 VOL: 0
;PCODE: $00000442 VOL: 0
;PCODE: $00000443 VOL: 0
;PCODE: $00000444 VOL: 0
;PCODE: $00000445 VOL: 0
;PCODE: $00000446 VOL: 0
;PCODE: $00000447 VOL: 0
;PCODE: $00000448 VOL: 0
; 0000 018F       else if ((kaf[4]<KAF || kaf[5]<KAF || kaf[6]<KAF ) && f==0 && b==0 && r==0 && l==0) b=1;
;PCODE: $00000449 VOL: 0
;PCODE: $0000044A VOL: 0
;PCODE: $0000044B VOL: 0
;PCODE: $0000044C VOL: 0
;PCODE: $0000044D VOL: 0
;PCODE: $0000044E VOL: 0
;PCODE: $0000044F VOL: 0
;PCODE: $00000450 VOL: 0
;PCODE: $00000451 VOL: 0
;PCODE: $00000452 VOL: 0
;PCODE: $00000453 VOL: 0
;PCODE: $00000454 VOL: 0
;PCODE: $00000455 VOL: 0
;PCODE: $00000456 VOL: 0
;PCODE: $00000457 VOL: 0
;PCODE: $00000458 VOL: 0
;PCODE: $00000459 VOL: 0
;PCODE: $0000045A VOL: 0
;PCODE: $0000045B VOL: 0
;PCODE: $0000045C VOL: 0
;PCODE: $0000045D VOL: 0
;PCODE: $0000045E VOL: 0
;PCODE: $0000045F VOL: 0
;PCODE: $00000460 VOL: 0
;PCODE: $00000461 VOL: 0
;PCODE: $00000462 VOL: 0
;PCODE: $00000463 VOL: 0
;PCODE: $00000464 VOL: 0
;PCODE: $00000465 VOL: 0
;PCODE: $00000466 VOL: 0
;PCODE: $00000467 VOL: 0
;PCODE: $00000468 VOL: 0
;PCODE: $00000469 VOL: 0
;PCODE: $0000046A VOL: 0
; 0000 0190    }
;PCODE: $0000046B VOL: 0
;PCODE: $0000046C VOL: 0
;PCODE: $0000046D VOL: 0
;PCODE: $0000046E VOL: 0
;PCODE: $0000046F VOL: 0
;PCODE: $00000470 VOL: 0
;
;
;
;      void follow ()
; 0000 0195     {
;PCODE: $00000471 VOL: 0
;PCODE: $00000472 VOL: 0
; 0000 0196           #asm("wdr");
;PCODE: $00000473 VOL: 0
	wdr
;PCODE: $00000474 VOL: 0
; 0000 0197         if(min==0 )
;PCODE: $00000475 VOL: 0
;PCODE: $00000476 VOL: 0
;PCODE: $00000477 VOL: 0
; 0000 0198         {
; 0000 0199             motor(255+cmp,255+cmp,-255+cmp,-255+cmp);
;PCODE: $00000478 VOL: 0
;PCODE: $00000479 VOL: 0
;PCODE: $0000047A VOL: 0
;PCODE: $0000047B VOL: 0
;PCODE: $0000047C VOL: 0
;PCODE: $0000047D VOL: 0
;PCODE: $0000047E VOL: 0
;PCODE: $0000047F VOL: 0
;PCODE: $00000480 VOL: 0
;PCODE: $00000481 VOL: 0
;PCODE: $00000482 VOL: 0
; 0000 019A           }
; 0000 019B 
; 0000 019C          else if(min==1)
;PCODE: $00000483 VOL: 0
;PCODE: $00000484 VOL: 0
;PCODE: $00000485 VOL: 0
;PCODE: $00000486 VOL: 0
;PCODE: $00000487 VOL: 0
; 0000 019D          {
; 0000 019E              motor(255+cmp,0+cmp,-255+cmp,0+cmp);
;PCODE: $00000488 VOL: 0
;PCODE: $00000489 VOL: 0
;PCODE: $0000048A VOL: 0
;PCODE: $0000048B VOL: 0
;PCODE: $0000048C VOL: 0
;PCODE: $0000048D VOL: 0
;PCODE: $0000048E VOL: 0
;PCODE: $0000048F VOL: 0
;PCODE: $00000490 VOL: 0
;PCODE: $00000491 VOL: 0
;PCODE: $00000492 VOL: 0
;PCODE: $00000493 VOL: 0
;PCODE: $00000494 VOL: 0
; 0000 019F           }
; 0000 01A0            //motor(255,128,-255,-128);
; 0000 01A1          else if(min==2)     motor(255+cmp,-255+cmp,-255+cmp,255+cmp);     //motor(255,0,-255,0);
;PCODE: $00000495 VOL: 0
;PCODE: $00000496 VOL: 0
;PCODE: $00000497 VOL: 0
;PCODE: $00000498 VOL: 0
;PCODE: $00000499 VOL: 0
;PCODE: $0000049A VOL: 0
;PCODE: $0000049B VOL: 0
;PCODE: $0000049C VOL: 0
;PCODE: $0000049D VOL: 0
;PCODE: $0000049E VOL: 0
;PCODE: $0000049F VOL: 0
;PCODE: $000004A0 VOL: 0
;PCODE: $000004A1 VOL: 0
;PCODE: $000004A2 VOL: 0
;PCODE: $000004A3 VOL: 0
;PCODE: $000004A4 VOL: 0
;PCODE: $000004A5 VOL: 0
;PCODE: $000004A6 VOL: 0
; 0000 01A2          else if(min==3)     motor(128+cmp,-255+cmp,-128+cmp,255+cmp);    //motor(255,-128,-255,128);
;PCODE: $000004A7 VOL: 0
;PCODE: $000004A8 VOL: 0
;PCODE: $000004A9 VOL: 0
;PCODE: $000004AA VOL: 0
;PCODE: $000004AB VOL: 0
;PCODE: $000004AC VOL: 0
;PCODE: $000004AD VOL: 0
;PCODE: $000004AE VOL: 0
;PCODE: $000004AF VOL: 0
;PCODE: $000004B0 VOL: 0
;PCODE: $000004B1 VOL: 0
;PCODE: $000004B2 VOL: 0
;PCODE: $000004B3 VOL: 0
;PCODE: $000004B4 VOL: 0
;PCODE: $000004B5 VOL: 0
;PCODE: $000004B6 VOL: 0
;PCODE: $000004B7 VOL: 0
;PCODE: $000004B8 VOL: 0
; 0000 01A3          else if(min==4)     motor(0+cmp,-255+cmp,0+cmp,255+cmp);        //motor(255,-255,-255,255);
;PCODE: $000004B9 VOL: 0
;PCODE: $000004BA VOL: 0
;PCODE: $000004BB VOL: 0
;PCODE: $000004BC VOL: 0
;PCODE: $000004BD VOL: 0
;PCODE: $000004BE VOL: 0
;PCODE: $000004BF VOL: 0
;PCODE: $000004C0 VOL: 0
;PCODE: $000004C1 VOL: 0
;PCODE: $000004C2 VOL: 0
;PCODE: $000004C3 VOL: 0
;PCODE: $000004C4 VOL: 0
;PCODE: $000004C5 VOL: 0
;PCODE: $000004C6 VOL: 0
;PCODE: $000004C7 VOL: 0
;PCODE: $000004C8 VOL: 0
;PCODE: $000004C9 VOL: 0
;PCODE: $000004CA VOL: 0
; 0000 01A4          else if(min==5)     motor(-128+cmp,-255+cmp,128+cmp,255+cmp);   //motor(128,-255,-128,255);
;PCODE: $000004CB VOL: 0
;PCODE: $000004CC VOL: 0
;PCODE: $000004CD VOL: 0
;PCODE: $000004CE VOL: 0
;PCODE: $000004CF VOL: 0
;PCODE: $000004D0 VOL: 0
;PCODE: $000004D1 VOL: 0
;PCODE: $000004D2 VOL: 0
;PCODE: $000004D3 VOL: 0
;PCODE: $000004D4 VOL: 0
;PCODE: $000004D5 VOL: 0
;PCODE: $000004D6 VOL: 0
;PCODE: $000004D7 VOL: 0
;PCODE: $000004D8 VOL: 0
;PCODE: $000004D9 VOL: 0
;PCODE: $000004DA VOL: 0
;PCODE: $000004DB VOL: 0
;PCODE: $000004DC VOL: 0
; 0000 01A5          else if(min==6)     motor(-255+cmp,-255+cmp,255+cmp,255+cmp);    //motor(0,-255,0,255);
;PCODE: $000004DD VOL: 0
;PCODE: $000004DE VOL: 0
;PCODE: $000004DF VOL: 0
;PCODE: $000004E0 VOL: 0
;PCODE: $000004E1 VOL: 0
;PCODE: $000004E2 VOL: 0
;PCODE: $000004E3 VOL: 0
;PCODE: $000004E4 VOL: 0
;PCODE: $000004E5 VOL: 0
;PCODE: $000004E6 VOL: 0
;PCODE: $000004E7 VOL: 0
;PCODE: $000004E8 VOL: 0
;PCODE: $000004E9 VOL: 0
;PCODE: $000004EA VOL: 0
;PCODE: $000004EB VOL: 0
;PCODE: $000004EC VOL: 0
; 0000 01A6          else if(min==7)     motor(-255+cmp,-128+cmp,255+cmp,128+cmp);    //motor(-128,-255,128,255);
;PCODE: $000004ED VOL: 0
;PCODE: $000004EE VOL: 0
;PCODE: $000004EF VOL: 0
;PCODE: $000004F0 VOL: 0
;PCODE: $000004F1 VOL: 0
;PCODE: $000004F2 VOL: 0
;PCODE: $000004F3 VOL: 0
;PCODE: $000004F4 VOL: 0
;PCODE: $000004F5 VOL: 0
;PCODE: $000004F6 VOL: 0
;PCODE: $000004F7 VOL: 0
;PCODE: $000004F8 VOL: 0
;PCODE: $000004F9 VOL: 0
;PCODE: $000004FA VOL: 0
;PCODE: $000004FB VOL: 0
;PCODE: $000004FC VOL: 0
;PCODE: $000004FD VOL: 0
;PCODE: $000004FE VOL: 0
; 0000 01A7          else if(min==8)     motor(-255+cmp,0+cmp,255+cmp,0+cmp);    //motor(-255,-255,255,255);
;PCODE: $000004FF VOL: 0
;PCODE: $00000500 VOL: 0
;PCODE: $00000501 VOL: 0
;PCODE: $00000502 VOL: 0
;PCODE: $00000503 VOL: 0
;PCODE: $00000504 VOL: 0
;PCODE: $00000505 VOL: 0
;PCODE: $00000506 VOL: 0
;PCODE: $00000507 VOL: 0
;PCODE: $00000508 VOL: 0
;PCODE: $00000509 VOL: 0
;PCODE: $0000050A VOL: 0
;PCODE: $0000050B VOL: 0
;PCODE: $0000050C VOL: 0
;PCODE: $0000050D VOL: 0
;PCODE: $0000050E VOL: 0
;PCODE: $0000050F VOL: 0
;PCODE: $00000510 VOL: 0
; 0000 01A8          else if(min==9)     motor(0+cmp,-255+cmp,0+cmp,255+cmp);         //motor(-255,-128,255,128);
;PCODE: $00000511 VOL: 0
;PCODE: $00000512 VOL: 0
;PCODE: $00000513 VOL: 0
;PCODE: $00000514 VOL: 0
;PCODE: $00000515 VOL: 0
;PCODE: $00000516 VOL: 0
;PCODE: $00000517 VOL: 0
;PCODE: $00000518 VOL: 0
;PCODE: $00000519 VOL: 0
;PCODE: $0000051A VOL: 0
;PCODE: $0000051B VOL: 0
;PCODE: $0000051C VOL: 0
;PCODE: $0000051D VOL: 0
;PCODE: $0000051E VOL: 0
;PCODE: $0000051F VOL: 0
;PCODE: $00000520 VOL: 0
;PCODE: $00000521 VOL: 0
;PCODE: $00000522 VOL: 0
; 0000 01A9          else if(min==10)    motor(-128+cmp,-255+cmp,255+cmp,128+cmp);   //motor(-255,128,255,-128);
;PCODE: $00000523 VOL: 0
;PCODE: $00000524 VOL: 0
;PCODE: $00000525 VOL: 0
;PCODE: $00000526 VOL: 0
;PCODE: $00000527 VOL: 0
;PCODE: $00000528 VOL: 0
;PCODE: $00000529 VOL: 0
;PCODE: $0000052A VOL: 0
;PCODE: $0000052B VOL: 0
;PCODE: $0000052C VOL: 0
;PCODE: $0000052D VOL: 0
;PCODE: $0000052E VOL: 0
;PCODE: $0000052F VOL: 0
;PCODE: $00000530 VOL: 0
;PCODE: $00000531 VOL: 0
;PCODE: $00000532 VOL: 0
;PCODE: $00000533 VOL: 0
;PCODE: $00000534 VOL: 0
; 0000 01AA          else if(min==11)  motor(-255+cmp,-255+cmp,255+cmp,255+cmp);
;PCODE: $00000535 VOL: 0
;PCODE: $00000536 VOL: 0
;PCODE: $00000537 VOL: 0
;PCODE: $00000538 VOL: 0
;PCODE: $00000539 VOL: 0
;PCODE: $0000053A VOL: 0
;PCODE: $0000053B VOL: 0
;PCODE: $0000053C VOL: 0
;PCODE: $0000053D VOL: 0
;PCODE: $0000053E VOL: 0
;PCODE: $0000053F VOL: 0
;PCODE: $00000540 VOL: 0
;PCODE: $00000541 VOL: 0
;PCODE: $00000542 VOL: 0
;PCODE: $00000543 VOL: 0
;PCODE: $00000544 VOL: 0
; 0000 01AB          else if(min==12)    motor(-255+cmp,0+cmp,255+cmp,0+cmp);    //motor(-255,255,255,-255);
;PCODE: $00000545 VOL: 0
;PCODE: $00000546 VOL: 0
;PCODE: $00000547 VOL: 0
;PCODE: $00000548 VOL: 0
;PCODE: $00000549 VOL: 0
;PCODE: $0000054A VOL: 0
;PCODE: $0000054B VOL: 0
;PCODE: $0000054C VOL: 0
;PCODE: $0000054D VOL: 0
;PCODE: $0000054E VOL: 0
;PCODE: $0000054F VOL: 0
;PCODE: $00000550 VOL: 0
;PCODE: $00000551 VOL: 0
;PCODE: $00000552 VOL: 0
;PCODE: $00000553 VOL: 0
;PCODE: $00000554 VOL: 0
;PCODE: $00000555 VOL: 0
;PCODE: $00000556 VOL: 0
; 0000 01AC          else if(min==13)    motor(-255+cmp,128+cmp,255+cmp,-128+cmp);         //motor(-128,255,128,-255);
;PCODE: $00000557 VOL: 0
;PCODE: $00000558 VOL: 0
;PCODE: $00000559 VOL: 0
;PCODE: $0000055A VOL: 0
;PCODE: $0000055B VOL: 0
;PCODE: $0000055C VOL: 0
;PCODE: $0000055D VOL: 0
;PCODE: $0000055E VOL: 0
;PCODE: $0000055F VOL: 0
;PCODE: $00000560 VOL: 0
;PCODE: $00000561 VOL: 0
;PCODE: $00000562 VOL: 0
;PCODE: $00000563 VOL: 0
;PCODE: $00000564 VOL: 0
;PCODE: $00000565 VOL: 0
;PCODE: $00000566 VOL: 0
;PCODE: $00000567 VOL: 0
;PCODE: $00000568 VOL: 0
; 0000 01AD          else if(min==14)    motor(-255+cmp,128+cmp,255+cmp,-128+cmp);    //motor(0,255,0,-255);
;PCODE: $00000569 VOL: 0
;PCODE: $0000056A VOL: 0
;PCODE: $0000056B VOL: 0
;PCODE: $0000056C VOL: 0
;PCODE: $0000056D VOL: 0
;PCODE: $0000056E VOL: 0
;PCODE: $0000056F VOL: 0
;PCODE: $00000570 VOL: 0
;PCODE: $00000571 VOL: 0
;PCODE: $00000572 VOL: 0
;PCODE: $00000573 VOL: 0
;PCODE: $00000574 VOL: 0
;PCODE: $00000575 VOL: 0
;PCODE: $00000576 VOL: 0
;PCODE: $00000577 VOL: 0
;PCODE: $00000578 VOL: 0
;PCODE: $00000579 VOL: 0
;PCODE: $0000057A VOL: 0
; 0000 01AE          else if(min==15)
;PCODE: $0000057B VOL: 0
;PCODE: $0000057C VOL: 0
;PCODE: $0000057D VOL: 0
;PCODE: $0000057E VOL: 0
;PCODE: $0000057F VOL: 0
; 0000 01AF          {
; 0000 01B0          motor(-255+cmp,255+cmp,255+cmp,-255+cmp); //motor(128,255,-128,-255);
;PCODE: $00000580 VOL: 0
;PCODE: $00000581 VOL: 0
;PCODE: $00000582 VOL: 0
;PCODE: $00000583 VOL: 0
;PCODE: $00000584 VOL: 0
;PCODE: $00000585 VOL: 0
;PCODE: $00000586 VOL: 0
;PCODE: $00000587 VOL: 0
;PCODE: $00000588 VOL: 0
;PCODE: $00000589 VOL: 0
;PCODE: $0000058A VOL: 0
;PCODE: $0000058B VOL: 0
;PCODE: $0000058C VOL: 0
; 0000 01B1          }
; 0000 01B2     }
;PCODE: $0000058D VOL: 0
;PCODE: $0000058E VOL: 0
;PCODE: $0000058F VOL: 0
;PCODE: $00000590 VOL: 0
;PCODE: $00000591 VOL: 0
;PCODE: $00000592 VOL: 0
;PCODE: $00000593 VOL: 0
;PCODE: $00000594 VOL: 0
;PCODE: $00000595 VOL: 0
;PCODE: $00000596 VOL: 0
;PCODE: $00000597 VOL: 0
;PCODE: $00000598 VOL: 0
;PCODE: $00000599 VOL: 0
;PCODE: $0000059A VOL: 0
;PCODE: $0000059B VOL: 0
;PCODE: $0000059C VOL: 0
;PCODE: $0000059D VOL: 0
;PCODE: $0000059E VOL: 0
;
;void sahmi()
; 0000 01B5 {
;PCODE: $0000059F VOL: 0
;PCODE: $000005A0 VOL: 0
; 0000 01B6     if(SB<150 )  motor(-255-RL+cmp,-255+RL+cmp,255+RL-cmp,255-RL+cmp);
;PCODE: $000005A1 VOL: 0
;PCODE: $000005A2 VOL: 0
;PCODE: $000005A3 VOL: 0
;PCODE: $000005A4 VOL: 0
;PCODE: $000005A5 VOL: 0
;PCODE: $000005A6 VOL: 0
;PCODE: $000005A7 VOL: 0
;PCODE: $000005A8 VOL: 0
;PCODE: $000005A9 VOL: 0
;PCODE: $000005AA VOL: 0
;PCODE: $000005AB VOL: 0
;PCODE: $000005AC VOL: 0
;PCODE: $000005AD VOL: 0
;PCODE: $000005AE VOL: 0
;PCODE: $000005AF VOL: 0
;PCODE: $000005B0 VOL: 0
;PCODE: $000005B1 VOL: 0
;PCODE: $000005B2 VOL: 0
;PCODE: $000005B3 VOL: 0
;PCODE: $000005B4 VOL: 0
;PCODE: $000005B5 VOL: 0
;PCODE: $000005B6 VOL: 0
; 0000 01B7     ///////////////////////////////////////////////////////////////
; 0000 01B8     else if(SB>300  && RL>-80 && RL<40)  motor(255/4+RL+cmp,255/4-RL+cmp,-255/4-RL+cmp,-255/4+RL+cmp);
;PCODE: $000005B7 VOL: 0
;PCODE: $000005B8 VOL: 0
;PCODE: $000005B9 VOL: 0
;PCODE: $000005BA VOL: 0
;PCODE: $000005BB VOL: 0
;PCODE: $000005BC VOL: 0
;PCODE: $000005BD VOL: 0
;PCODE: $000005BE VOL: 0
;PCODE: $000005BF VOL: 0
;PCODE: $000005C0 VOL: 0
;PCODE: $000005C1 VOL: 0
;PCODE: $000005C2 VOL: 0
;PCODE: $000005C3 VOL: 0
;PCODE: $000005C4 VOL: 0
;PCODE: $000005C5 VOL: 0
;PCODE: $000005C6 VOL: 0
;PCODE: $000005C7 VOL: 0
;PCODE: $000005C8 VOL: 0
;PCODE: $000005C9 VOL: 0
;PCODE: $000005CA VOL: 0
;PCODE: $000005CB VOL: 0
;PCODE: $000005CC VOL: 0
;PCODE: $000005CD VOL: 0
;PCODE: $000005CE VOL: 0
;PCODE: $000005CF VOL: 0
;PCODE: $000005D0 VOL: 0
;PCODE: $000005D1 VOL: 0
;PCODE: $000005D2 VOL: 0
;PCODE: $000005D3 VOL: 0
;PCODE: $000005D4 VOL: 0
;PCODE: $000005D5 VOL: 0
;PCODE: $000005D6 VOL: 0
;PCODE: $000005D7 VOL: 0
;PCODE: $000005D8 VOL: 0
;PCODE: $000005D9 VOL: 0
; 0000 01B9 
; 0000 01BA            //////////////////////////////////////////////////////////////
; 0000 01BB     else if(SB>300 && (RL<-60|| RL>40 )  )
;PCODE: $000005DA VOL: 0
;PCODE: $000005DB VOL: 0
;PCODE: $000005DC VOL: 0
;PCODE: $000005DD VOL: 0
;PCODE: $000005DE VOL: 0
;PCODE: $000005DF VOL: 0
;PCODE: $000005E0 VOL: 0
;PCODE: $000005E1 VOL: 0
;PCODE: $000005E2 VOL: 0
;PCODE: $000005E3 VOL: 0
;PCODE: $000005E4 VOL: 0
;PCODE: $000005E5 VOL: 0
;PCODE: $000005E6 VOL: 0
;PCODE: $000005E7 VOL: 0
;PCODE: $000005E8 VOL: 0
;PCODE: $000005E9 VOL: 0
;PCODE: $000005EA VOL: 0
; 0000 01BC     {
; 0000 01BD             RL=(float)RL*1.2;
;PCODE: $000005EB VOL: 0
;PCODE: $000005EC VOL: 0
;PCODE: $000005ED VOL: 0
;PCODE: $000005EE VOL: 0
;PCODE: $000005EF VOL: 0
;PCODE: $000005F0 VOL: 0
;PCODE: $000005F1 VOL: 0
; 0000 01BE             motor(-RL+cmp,RL+cmp,RL+cmp,-RL+cmp);
;PCODE: $000005F2 VOL: 0
;PCODE: $000005F3 VOL: 0
;PCODE: $000005F4 VOL: 0
;PCODE: $000005F5 VOL: 0
;PCODE: $000005F6 VOL: 0
;PCODE: $000005F7 VOL: 0
;PCODE: $000005F8 VOL: 0
;PCODE: $000005F9 VOL: 0
;PCODE: $000005FA VOL: 0
;PCODE: $000005FB VOL: 0
;PCODE: $000005FC VOL: 0
;PCODE: $000005FD VOL: 0
;PCODE: $000005FE VOL: 0
;PCODE: $000005FF VOL: 0
;PCODE: $00000600 VOL: 0
; 0000 01BF     }
; 0000 01C0     else{
;PCODE: $00000601 VOL: 0
;PCODE: $00000602 VOL: 0
; 0000 01C1      motor(0+cmp/2,0+cmp/2,0+cmp/2,0+cmp/2);
;PCODE: $00000603 VOL: 0
;PCODE: $00000604 VOL: 0
;PCODE: $00000605 VOL: 0
;PCODE: $00000606 VOL: 0
;PCODE: $00000607 VOL: 0
;PCODE: $00000608 VOL: 0
;PCODE: $00000609 VOL: 0
;PCODE: $0000060A VOL: 0
;PCODE: $0000060B VOL: 0
; 0000 01C2      if ((m>t || t==9 ) && SB>200 )
;PCODE: $0000060C VOL: 0
;PCODE: $0000060D VOL: 0
;PCODE: $0000060E VOL: 0
;PCODE: $0000060F VOL: 0
;PCODE: $00000610 VOL: 0
;PCODE: $00000611 VOL: 0
;PCODE: $00000612 VOL: 0
;PCODE: $00000613 VOL: 0
;PCODE: $00000614 VOL: 0
;PCODE: $00000615 VOL: 0
;PCODE: $00000616 VOL: 0
;PCODE: $00000617 VOL: 0
;PCODE: $00000618 VOL: 0
;PCODE: $00000619 VOL: 0
;PCODE: $0000061A VOL: 0
; 0000 01C3      {
; 0000 01C4      follow();
;PCODE: $0000061B VOL: 0
; 0000 01C5      }
; 0000 01C6      }
;PCODE: $0000061C VOL: 0
;PCODE: $0000061D VOL: 0
;PCODE: $0000061E VOL: 0
;PCODE: $0000061F VOL: 0
; 0000 01C7 
; 0000 01C8     #asm ("wdr");
;PCODE: $00000620 VOL: 0
	wdr
;PCODE: $00000621 VOL: 0
; 0000 01C9 
; 0000 01CA     }
;PCODE: $00000622 VOL: 0
;PCODE: $00000623 VOL: 0
;
;
;
;
;
;
;void bt ()
; 0000 01D2  {
;PCODE: $00000624 VOL: 0
;PCODE: $00000625 VOL: 0
; 0000 01D3       if(r!=1 && l!=1 && f!=1 && b!=1 && adc[min]<900 )
;PCODE: $00000626 VOL: 0
;PCODE: $00000627 VOL: 0
;PCODE: $00000628 VOL: 0
;PCODE: $00000629 VOL: 0
;PCODE: $0000062A VOL: 0
;PCODE: $0000062B VOL: 0
;PCODE: $0000062C VOL: 0
;PCODE: $0000062D VOL: 0
;PCODE: $0000062E VOL: 0
;PCODE: $0000062F VOL: 0
;PCODE: $00000630 VOL: 0
;PCODE: $00000631 VOL: 0
;PCODE: $00000632 VOL: 0
;PCODE: $00000633 VOL: 0
;PCODE: $00000634 VOL: 0
;PCODE: $00000635 VOL: 0
;PCODE: $00000636 VOL: 0
;PCODE: $00000637 VOL: 0
;PCODE: $00000638 VOL: 0
;PCODE: $00000639 VOL: 0
;PCODE: $0000063A VOL: 0
;PCODE: $0000063B VOL: 0
;PCODE: $0000063C VOL: 0
; 0000 01D4       {
; 0000 01D5             if (m==1) putchar1('1');
;PCODE: $0000063D VOL: 0
;PCODE: $0000063E VOL: 0
;PCODE: $0000063F VOL: 0
;PCODE: $00000640 VOL: 0
;PCODE: $00000641 VOL: 0
;PCODE: $00000642 VOL: 0
; 0000 01D6        else if (m==2) putchar1('2');
;PCODE: $00000643 VOL: 0
;PCODE: $00000644 VOL: 0
;PCODE: $00000645 VOL: 0
;PCODE: $00000646 VOL: 0
;PCODE: $00000647 VOL: 0
;PCODE: $00000648 VOL: 0
;PCODE: $00000649 VOL: 0
;PCODE: $0000064A VOL: 0
; 0000 01D7        else if (m==3) putchar1('3');
;PCODE: $0000064B VOL: 0
;PCODE: $0000064C VOL: 0
;PCODE: $0000064D VOL: 0
;PCODE: $0000064E VOL: 0
;PCODE: $0000064F VOL: 0
;PCODE: $00000650 VOL: 0
;PCODE: $00000651 VOL: 0
;PCODE: $00000652 VOL: 0
; 0000 01D8        else if (m==4) putchar1('4');
;PCODE: $00000653 VOL: 0
;PCODE: $00000654 VOL: 0
;PCODE: $00000655 VOL: 0
;PCODE: $00000656 VOL: 0
;PCODE: $00000657 VOL: 0
;PCODE: $00000658 VOL: 0
;PCODE: $00000659 VOL: 0
;PCODE: $0000065A VOL: 0
; 0000 01D9        else if (m==5) putchar1('5');
;PCODE: $0000065B VOL: 0
;PCODE: $0000065C VOL: 0
;PCODE: $0000065D VOL: 0
;PCODE: $0000065E VOL: 0
;PCODE: $0000065F VOL: 0
;PCODE: $00000660 VOL: 0
;PCODE: $00000661 VOL: 0
;PCODE: $00000662 VOL: 0
; 0000 01DA        else if (m==6) putchar1('6');
;PCODE: $00000663 VOL: 0
;PCODE: $00000664 VOL: 0
;PCODE: $00000665 VOL: 0
;PCODE: $00000666 VOL: 0
;PCODE: $00000667 VOL: 0
;PCODE: $00000668 VOL: 0
;PCODE: $00000669 VOL: 0
;PCODE: $0000066A VOL: 0
; 0000 01DB        else if (m==7) putchar1('7');
;PCODE: $0000066B VOL: 0
;PCODE: $0000066C VOL: 0
;PCODE: $0000066D VOL: 0
;PCODE: $0000066E VOL: 0
;PCODE: $0000066F VOL: 0
;PCODE: $00000670 VOL: 0
;PCODE: $00000671 VOL: 0
;PCODE: $00000672 VOL: 0
; 0000 01DC        else if (m==8) putchar1('8');
;PCODE: $00000673 VOL: 0
;PCODE: $00000674 VOL: 0
;PCODE: $00000675 VOL: 0
;PCODE: $00000676 VOL: 0
;PCODE: $00000677 VOL: 0
;PCODE: $00000678 VOL: 0
;PCODE: $00000679 VOL: 0
;PCODE: $0000067A VOL: 0
; 0000 01DD        else if (m==9) putchar1('9');
;PCODE: $0000067B VOL: 0
;PCODE: $0000067C VOL: 0
;PCODE: $0000067D VOL: 0
;PCODE: $0000067E VOL: 0
;PCODE: $0000067F VOL: 0
;PCODE: $00000680 VOL: 0
;PCODE: $00000681 VOL: 0
;PCODE: $00000682 VOL: 0
; 0000 01DE        }
;PCODE: $00000683 VOL: 0
;PCODE: $00000684 VOL: 0
;PCODE: $00000685 VOL: 0
;PCODE: $00000686 VOL: 0
;PCODE: $00000687 VOL: 0
;PCODE: $00000688 VOL: 0
;PCODE: $00000689 VOL: 0
;PCODE: $0000068A VOL: 0
;PCODE: $0000068B VOL: 0
; 0000 01DF       else if (t!=10 )
;PCODE: $0000068C VOL: 0
;PCODE: $0000068D VOL: 0
;PCODE: $0000068E VOL: 0
;PCODE: $0000068F VOL: 0
;PCODE: $00000690 VOL: 0
; 0000 01E0       {
; 0000 01E1          putchar1('o');
;PCODE: $00000691 VOL: 0
;PCODE: $00000692 VOL: 0
;PCODE: $00000693 VOL: 0
; 0000 01E2        #asm ("wdr") ;
;PCODE: $00000694 VOL: 0
	wdr
;PCODE: $00000695 VOL: 0
; 0000 01E3        }
; 0000 01E4        #asm ("wdr") ;
;PCODE: $00000696 VOL: 0
;PCODE: $00000697 VOL: 0
;PCODE: $00000698 VOL: 0
	wdr
;PCODE: $00000699 VOL: 0
; 0000 01E5  }
;PCODE: $0000069A VOL: 0
;PCODE: $0000069B VOL: 0
;
;
;
;void main(void)
; 0000 01EA {
;PCODE: $0000069C VOL: 0
; 0000 01EB #asm("wdr");
;PCODE: $0000069D VOL: 0
	wdr
;PCODE: $0000069E VOL: 0
; 0000 01EC // Declare your local variables here
; 0000 01ED 
; 0000 01EE // Input/Output Ports initialization
; 0000 01EF // Port A initialization
; 0000 01F0 // Func7=In Func6=Out Func5=Out Func4=In Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 01F1 // State7=T State6=0 State5=0 State4=T State3=0 State2=0 State1=0 State0=0
; 0000 01F2 PORTA=0x00;
;PCODE: $0000069F VOL: 0
;PCODE: $000006A0 VOL: 0
; 0000 01F3 DDRA=0x6F;
;PCODE: $000006A1 VOL: 0
;PCODE: $000006A2 VOL: 0
; 0000 01F4 
; 0000 01F5 // Port B initialization
; 0000 01F6 // Func7=Out Func6=Out Func5=Out Func4=Out Func3=In Func2=In Func1=In Func0=In
; 0000 01F7 // State7=0 State6=0 State5=0 State4=0 State3=T State2=T State1=T State0=T
; 0000 01F8 PORTB=0x00;
;PCODE: $000006A3 VOL: 0
;PCODE: $000006A4 VOL: 0
; 0000 01F9 DDRB=0xF0;
;PCODE: $000006A5 VOL: 0
;PCODE: $000006A6 VOL: 0
; 0000 01FA 
; 0000 01FB // Port C initialization
; 0000 01FC // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 01FD // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 01FE PORTC=0x00;
;PCODE: $000006A7 VOL: 0
;PCODE: $000006A8 VOL: 0
; 0000 01FF DDRC=0x00;
;PCODE: $000006A9 VOL: 0
;PCODE: $000006AA VOL: 0
; 0000 0200 
; 0000 0201 // Port D initialization
; 0000 0202 // Func7=Out Func6=Out Func5=Out Func4=Out Func3=In Func2=In Func1=In Func0=In
; 0000 0203 // State7=0 State6=0 State5=0 State4=0 State3=T State2=T State1=T State0=T
; 0000 0204 PORTD=0x00;
;PCODE: $000006AB VOL: 0
;PCODE: $000006AC VOL: 0
; 0000 0205 DDRD=0xF0;
;PCODE: $000006AD VOL: 0
;PCODE: $000006AE VOL: 0
; 0000 0206 
; 0000 0207 // Port E initialization
; 0000 0208 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0209 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 020A PORTE=0x00;
;PCODE: $000006AF VOL: 0
;PCODE: $000006B0 VOL: 0
; 0000 020B DDRE=0x00;
;PCODE: $000006B1 VOL: 0
;PCODE: $000006B2 VOL: 0
; 0000 020C 
; 0000 020D // Port F initialization
; 0000 020E // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 020F // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0210 PORTF=0x00;
;PCODE: $000006B3 VOL: 0
;PCODE: $000006B4 VOL: 0
; 0000 0211 DDRF=0x00;
;PCODE: $000006B5 VOL: 0
;PCODE: $000006B6 VOL: 0
; 0000 0212 
; 0000 0213 // Port G initialization
; 0000 0214 // Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0215 // State4=T State3=T State2=T State1=T State0=T
; 0000 0216 PORTG=0x00;
;PCODE: $000006B7 VOL: 0
;PCODE: $000006B8 VOL: 0
; 0000 0217 DDRG=0x00;
;PCODE: $000006B9 VOL: 0
;PCODE: $000006BA VOL: 0
; 0000 0218 
; 0000 0219 // Timer/Counter 0 initialization
; 0000 021A // Clock source: System Clock
; 0000 021B // Clock value: 172.800 kHz
; 0000 021C // Mode: Fast PWM top=FFh
; 0000 021D // OC0 output: Non-Inverted PWM
; 0000 021E ASSR=0x00;
;PCODE: $000006BB VOL: 0
;PCODE: $000006BC VOL: 0
; 0000 021F TCCR0=0x6C;
;PCODE: $000006BD VOL: 0
;PCODE: $000006BE VOL: 0
; 0000 0220 TCNT0=0x00;
;PCODE: $000006BF VOL: 0
;PCODE: $000006C0 VOL: 0
; 0000 0221 OCR0=0x00;
;PCODE: $000006C1 VOL: 0
;PCODE: $000006C2 VOL: 0
; 0000 0222 
; 0000 0223 // Timer/Counter 1 initialization
; 0000 0224 // Clock source: System Clock
; 0000 0225 // Clock value: 172.800 kHz
; 0000 0226 // Mode: Fast PWM top=00FFh
; 0000 0227 // OC1A output: Non-Inv.
; 0000 0228 // OC1B output: Non-Inv.
; 0000 0229 // OC1C output: Discon.
; 0000 022A // Noise Canceler: Off
; 0000 022B // Input Capture on Falling Edge
; 0000 022C // Timer 1 Overflow Interrupt: Off
; 0000 022D // Input Capture Interrupt: Off
; 0000 022E // Compare A Match Interrupt: Off
; 0000 022F // Compare B Match Interrupt: Off
; 0000 0230 // Compare C Match Interrupt: Off
; 0000 0231 TCCR1A=0xA1;
;PCODE: $000006C3 VOL: 0
;PCODE: $000006C4 VOL: 0
; 0000 0232 TCCR1B=0x0B;
;PCODE: $000006C5 VOL: 0
;PCODE: $000006C6 VOL: 0
; 0000 0233 TCNT1H=0x00;
;PCODE: $000006C7 VOL: 0
;PCODE: $000006C8 VOL: 0
; 0000 0234 TCNT1L=0x00;
;PCODE: $000006C9 VOL: 0
;PCODE: $000006CA VOL: 0
; 0000 0235 ICR1H=0x00;
;PCODE: $000006CB VOL: 0
;PCODE: $000006CC VOL: 0
; 0000 0236 ICR1L=0x00;
;PCODE: $000006CD VOL: 0
;PCODE: $000006CE VOL: 0
; 0000 0237 OCR1AH=0x00;
;PCODE: $000006CF VOL: 0
;PCODE: $000006D0 VOL: 0
; 0000 0238 OCR1AL=0x00;
;PCODE: $000006D1 VOL: 0
;PCODE: $000006D2 VOL: 0
; 0000 0239 OCR1BH=0x00;
;PCODE: $000006D3 VOL: 0
;PCODE: $000006D4 VOL: 0
; 0000 023A OCR1BL=0x00;
;PCODE: $000006D5 VOL: 0
;PCODE: $000006D6 VOL: 0
; 0000 023B OCR1CH=0x00;
;PCODE: $000006D7 VOL: 0
;PCODE: $000006D8 VOL: 0
; 0000 023C OCR1CL=0x00;
;PCODE: $000006D9 VOL: 0
;PCODE: $000006DA VOL: 0
; 0000 023D 
; 0000 023E // Timer/Counter 2 initialization
; 0000 023F // Clock source: System Clock
; 0000 0240 // Clock value: 172.800 kHz
; 0000 0241 // Mode: Fast PWM top=FFh
; 0000 0242 // OC2 output: Non-Inverted PWM
; 0000 0243 TCCR2=0x6B;
;PCODE: $000006DB VOL: 0
;PCODE: $000006DC VOL: 0
; 0000 0244 TCNT2=0x00;
;PCODE: $000006DD VOL: 0
;PCODE: $000006DE VOL: 0
; 0000 0245 OCR2=0x00;
;PCODE: $000006DF VOL: 0
;PCODE: $000006E0 VOL: 0
; 0000 0246 
; 0000 0247 // Timer/Counter 3 initialization
; 0000 0248 // Clock source: System Clock
; 0000 0249 // Clock value: Timer 3 Stopped
; 0000 024A // Mode: Normal top=FFFFh
; 0000 024B // Noise Canceler: Off
; 0000 024C // Input Capture on Falling Edge
; 0000 024D // OC3A output: Discon.
; 0000 024E // OC3B output: Discon.
; 0000 024F // OC3C output: Discon.
; 0000 0250 // Timer 3 Overflow Interrupt: Off
; 0000 0251 // Input Capture Interrupt: Off
; 0000 0252 // Compare A Match Interrupt: Off
; 0000 0253 // Compare B Match Interrupt: Off
; 0000 0254 // Compare C Match Interrupt: Off
; 0000 0255 TCCR3A=0x00;
;PCODE: $000006E1 VOL: 0
;PCODE: $000006E2 VOL: 0
; 0000 0256 TCCR3B=0x00;
;PCODE: $000006E3 VOL: 0
;PCODE: $000006E4 VOL: 0
; 0000 0257 TCNT3H=0x00;
;PCODE: $000006E5 VOL: 0
;PCODE: $000006E6 VOL: 0
; 0000 0258 TCNT3L=0x00;
;PCODE: $000006E7 VOL: 0
;PCODE: $000006E8 VOL: 0
; 0000 0259 ICR3H=0x00;
;PCODE: $000006E9 VOL: 0
;PCODE: $000006EA VOL: 0
; 0000 025A ICR3L=0x00;
;PCODE: $000006EB VOL: 0
;PCODE: $000006EC VOL: 0
; 0000 025B OCR3AH=0x00;
;PCODE: $000006ED VOL: 0
;PCODE: $000006EE VOL: 0
; 0000 025C OCR3AL=0x00;
;PCODE: $000006EF VOL: 0
;PCODE: $000006F0 VOL: 0
; 0000 025D OCR3BH=0x00;
;PCODE: $000006F1 VOL: 0
;PCODE: $000006F2 VOL: 0
; 0000 025E OCR3BL=0x00;
;PCODE: $000006F3 VOL: 0
;PCODE: $000006F4 VOL: 0
; 0000 025F OCR3CH=0x00;
;PCODE: $000006F5 VOL: 0
;PCODE: $000006F6 VOL: 0
; 0000 0260 OCR3CL=0x00;
;PCODE: $000006F7 VOL: 0
;PCODE: $000006F8 VOL: 0
; 0000 0261 
; 0000 0262 // External Interrupt(s) initialization
; 0000 0263 // INT0: Off
; 0000 0264 // INT1: Off
; 0000 0265 // INT2: Off
; 0000 0266 // INT3: Off
; 0000 0267 // INT4: Off
; 0000 0268 // INT5: Off
; 0000 0269 // INT6: Off
; 0000 026A // INT7: Off
; 0000 026B EICRA=0x00;
;PCODE: $000006F9 VOL: 0
;PCODE: $000006FA VOL: 0
; 0000 026C EICRB=0x00;
;PCODE: $000006FB VOL: 0
;PCODE: $000006FC VOL: 0
; 0000 026D EIMSK=0x00;
;PCODE: $000006FD VOL: 0
;PCODE: $000006FE VOL: 0
; 0000 026E 
; 0000 026F // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0270 TIMSK=0x00;
;PCODE: $000006FF VOL: 0
;PCODE: $00000700 VOL: 0
; 0000 0271 ETIMSK=0x00;
;PCODE: $00000701 VOL: 0
;PCODE: $00000702 VOL: 0
; 0000 0272 
; 0000 0273 // USART1 initialization
; 0000 0274 // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 0275 // USART1 Receiver: On
; 0000 0276 // USART1 Transmitter: On
; 0000 0277 // USART1 Mode: Asynchronous
; 0000 0278 // USART1 Baud Rate: 9600
; 0000 0279 UCSR1A=0x00;
;PCODE: $00000703 VOL: 0
;PCODE: $00000704 VOL: 0
; 0000 027A UCSR1B=0x98;
;PCODE: $00000705 VOL: 0
;PCODE: $00000706 VOL: 0
; 0000 027B UCSR1C=0x06;
;PCODE: $00000707 VOL: 0
;PCODE: $00000708 VOL: 0
; 0000 027C UBRR1H=0x00;
;PCODE: $00000709 VOL: 0
;PCODE: $0000070A VOL: 0
; 0000 027D UBRR1L=0x47;
;PCODE: $0000070B VOL: 0
;PCODE: $0000070C VOL: 0
; 0000 027E 
; 0000 027F // Analog Comparator initialization
; 0000 0280 // Analog Comparator: Off
; 0000 0281 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 0282 ACSR=0x80;
;PCODE: $0000070D VOL: 0
;PCODE: $0000070E VOL: 0
; 0000 0283 SFIOR=0x00;
;PCODE: $0000070F VOL: 0
;PCODE: $00000710 VOL: 0
; 0000 0284 
; 0000 0285 // ADC initialization
; 0000 0286 // ADC Clock frequency: 691.200 kHz
; 0000 0287 // ADC Voltage Reference: AVCC pin
; 0000 0288 ADMUX=ADC_VREF_TYPE & 0xff;
;PCODE: $00000711 VOL: 0
;PCODE: $00000712 VOL: 0
; 0000 0289 ADCSRA=0x84;
;PCODE: $00000713 VOL: 0
;PCODE: $00000714 VOL: 0
; 0000 028A 
; 0000 028B // I2C Bus initialization
; 0000 028C i2c_init();
;PCODE: $00000715 VOL: 0
; 0000 028D 
; 0000 028E // LCD module initialization
; 0000 028F lcd_init(16);
;PCODE: $00000716 VOL: 0
;PCODE: $00000717 VOL: 0
;PCODE: $00000718 VOL: 0
; 0000 0290 
; 0000 0291 // Watchdog Timer initialization
; 0000 0292 // Watchdog Timer Prescaler: OSC/16k
; 0000 0293 #pragma optsize-
; 0000 0294 WDTCR=0x18;
;PCODE: $00000719 VOL: 0
;PCODE: $0000071A VOL: 0
; 0000 0295 WDTCR=0x08;
;PCODE: $0000071B VOL: 0
;PCODE: $0000071C VOL: 0
; 0000 0296 #ifdef _OPTIMIZE_SIZE_
; 0000 0297 #pragma optsize+
; 0000 0298 #endif
; 0000 0299 
; 0000 029A // Global enable interrupts
; 0000 029B #asm("sei")
;PCODE: $0000071D VOL: 0
	sei
;PCODE: $0000071E VOL: 0
; 0000 029C if (PINA.4==1){
;PCODE: $0000071F VOL: 0
;PCODE: $00000720 VOL: 0
;PCODE: $00000721 VOL: 0
;PCODE: $00000722 VOL: 0
; 0000 029D c=compass_read(1);
;PCODE: $00000723 VOL: 0
;PCODE: $00000724 VOL: 0
;PCODE: $00000725 VOL: 0
;PCODE: $00000726 VOL: 0
;PCODE: $00000727 VOL: 0
;PCODE: $00000728 VOL: 0
; 0000 029E delay_ms(1000);
;PCODE: $00000729 VOL: 0
;PCODE: $0000072A VOL: 0
;PCODE: $0000072B VOL: 0
; 0000 029F }
; 0000 02A0 while (1)
;PCODE: $0000072C VOL: 0
;PCODE: $0000072D VOL: 0
; 0000 02A1       {
; 0000 02A2 
; 0000 02A3        cmp=compass_read(1)-c;
;PCODE: $0000072E VOL: 0
;PCODE: $0000072F VOL: 0
;PCODE: $00000730 VOL: 0
;PCODE: $00000731 VOL: 0
;PCODE: $00000732 VOL: 0
;PCODE: $00000733 VOL: 0
;PCODE: $00000734 VOL: 0
;PCODE: $00000735 VOL: 0
;PCODE: $00000736 VOL: 0
;PCODE: $00000737 VOL: 0
; 0000 02A4         lcd_gotoxy(12,0);
;PCODE: $00000738 VOL: 0
;PCODE: $00000739 VOL: 0
;PCODE: $0000073A VOL: 0
;PCODE: $0000073B VOL: 0
;PCODE: $0000073C VOL: 0
; 0000 02A5       if(cmp<0) cmp=cmp;
;PCODE: $0000073D VOL: 0
;PCODE: $0000073E VOL: 0
;PCODE: $0000073F VOL: 0
;PCODE: $00000740 VOL: 0
; 0000 02A6       if(cmp>128) cmp=cmp-255;
;PCODE: $00000741 VOL: 0
;PCODE: $00000742 VOL: 0
;PCODE: $00000743 VOL: 0
;PCODE: $00000744 VOL: 0
;PCODE: $00000745 VOL: 0
;PCODE: $00000746 VOL: 0
;PCODE: $00000747 VOL: 0
; 0000 02A7       if(cmp<-128) cmp=cmp+255;
;PCODE: $00000748 VOL: 0
;PCODE: $00000749 VOL: 0
;PCODE: $0000074A VOL: 0
;PCODE: $0000074B VOL: 0
;PCODE: $0000074C VOL: 0
;PCODE: $0000074D VOL: 0
;PCODE: $0000074E VOL: 0
; 0000 02A8 
; 0000 02A9       if(cmp>=0)
;PCODE: $0000074F VOL: 0
;PCODE: $00000750 VOL: 0
;PCODE: $00000751 VOL: 0
; 0000 02AA       {
; 0000 02AB       #asm("wdr");
;PCODE: $00000752 VOL: 0
	wdr
;PCODE: $00000753 VOL: 0
; 0000 02AC        lcd_gotoxy(11,0);
;PCODE: $00000754 VOL: 0
;PCODE: $00000755 VOL: 0
;PCODE: $00000756 VOL: 0
;PCODE: $00000757 VOL: 0
;PCODE: $00000758 VOL: 0
; 0000 02AD       lcd_putchar('+');
;PCODE: $00000759 VOL: 0
;PCODE: $0000075A VOL: 0
;PCODE: $0000075B VOL: 0
; 0000 02AE       lcd_putchar((cmp/100)%10+'0');
;PCODE: $0000075C VOL: 0
;PCODE: $0000075D VOL: 0
;PCODE: $0000075E VOL: 0
;PCODE: $0000075F VOL: 0
;PCODE: $00000760 VOL: 0
;PCODE: $00000761 VOL: 0
;PCODE: $00000762 VOL: 0
;PCODE: $00000763 VOL: 0
;PCODE: $00000764 VOL: 0
; 0000 02AF       lcd_putchar((cmp/10)%10+'0');
;PCODE: $00000765 VOL: 0
;PCODE: $00000766 VOL: 0
;PCODE: $00000767 VOL: 0
;PCODE: $00000768 VOL: 0
;PCODE: $00000769 VOL: 0
;PCODE: $0000076A VOL: 0
;PCODE: $0000076B VOL: 0
;PCODE: $0000076C VOL: 0
;PCODE: $0000076D VOL: 0
; 0000 02B0       lcd_putchar((cmp/1)%10+'0');
;PCODE: $0000076E VOL: 0
;PCODE: $0000076F VOL: 0
;PCODE: $00000770 VOL: 0
;PCODE: $00000771 VOL: 0
;PCODE: $00000772 VOL: 0
;PCODE: $00000773 VOL: 0
; 0000 02B1       }
; 0000 02B2       else if(cmp<0)
;PCODE: $00000774 VOL: 0
;PCODE: $00000775 VOL: 0
;PCODE: $00000776 VOL: 0
;PCODE: $00000777 VOL: 0
; 0000 02B3       {
; 0000 02B4       #asm("wdr");
;PCODE: $00000778 VOL: 0
	wdr
;PCODE: $00000779 VOL: 0
; 0000 02B5        lcd_gotoxy(11,0);
;PCODE: $0000077A VOL: 0
;PCODE: $0000077B VOL: 0
;PCODE: $0000077C VOL: 0
;PCODE: $0000077D VOL: 0
;PCODE: $0000077E VOL: 0
; 0000 02B6       lcd_putchar('-');
;PCODE: $0000077F VOL: 0
;PCODE: $00000780 VOL: 0
;PCODE: $00000781 VOL: 0
; 0000 02B7       lcd_putchar((-cmp/100)%10+'0');
;PCODE: $00000782 VOL: 0
;PCODE: $00000783 VOL: 0
;PCODE: $00000784 VOL: 0
;PCODE: $00000785 VOL: 0
;PCODE: $00000786 VOL: 0
;PCODE: $00000787 VOL: 0
;PCODE: $00000788 VOL: 0
;PCODE: $00000789 VOL: 0
;PCODE: $0000078A VOL: 0
;PCODE: $0000078B VOL: 0
;PCODE: $0000078C VOL: 0
; 0000 02B8       lcd_putchar((-cmp/10)%10+'0');
;PCODE: $0000078D VOL: 0
;PCODE: $0000078E VOL: 0
;PCODE: $0000078F VOL: 0
;PCODE: $00000790 VOL: 0
;PCODE: $00000791 VOL: 0
;PCODE: $00000792 VOL: 0
;PCODE: $00000793 VOL: 0
;PCODE: $00000794 VOL: 0
;PCODE: $00000795 VOL: 0
;PCODE: $00000796 VOL: 0
;PCODE: $00000797 VOL: 0
; 0000 02B9       lcd_putchar((-cmp/1)%10+'0');
;PCODE: $00000798 VOL: 0
;PCODE: $00000799 VOL: 0
;PCODE: $0000079A VOL: 0
;PCODE: $0000079B VOL: 0
;PCODE: $0000079C VOL: 0
;PCODE: $0000079D VOL: 0
;PCODE: $0000079E VOL: 0
;PCODE: $0000079F VOL: 0
; 0000 02BA       }
; 0000 02BB         if(cmp>-50  && cmp<50) cmp=(float)-cmp*2.25;
;PCODE: $000007A0 VOL: 0
;PCODE: $000007A1 VOL: 0
;PCODE: $000007A2 VOL: 0
;PCODE: $000007A3 VOL: 0
;PCODE: $000007A4 VOL: 0
;PCODE: $000007A5 VOL: 0
;PCODE: $000007A6 VOL: 0
;PCODE: $000007A7 VOL: 0
;PCODE: $000007A8 VOL: 0
;PCODE: $000007A9 VOL: 0
;PCODE: $000007AA VOL: 0
;PCODE: $000007AB VOL: 0
;PCODE: $000007AC VOL: 0
;PCODE: $000007AD VOL: 0
;PCODE: $000007AE VOL: 0
;PCODE: $000007AF VOL: 0
;PCODE: $000007B0 VOL: 0
;PCODE: $000007B1 VOL: 0
;PCODE: $000007B2 VOL: 0
; 0000 02BC         else cmp=(float)-cmp*1.75;
;PCODE: $000007B3 VOL: 0
;PCODE: $000007B4 VOL: 0
;PCODE: $000007B5 VOL: 0
;PCODE: $000007B6 VOL: 0
;PCODE: $000007B7 VOL: 0
;PCODE: $000007B8 VOL: 0
;PCODE: $000007B9 VOL: 0
;PCODE: $000007BA VOL: 0
;PCODE: $000007BB VOL: 0
; 0000 02BD       sensor();
;PCODE: $000007BC VOL: 0
;PCODE: $000007BD VOL: 0
; 0000 02BE       sharp();
;PCODE: $000007BE VOL: 0
; 0000 02BF       bt();
;PCODE: $000007BF VOL: 0
; 0000 02C0       #asm("wdr") ;
;PCODE: $000007C0 VOL: 0
	wdr
;PCODE: $000007C1 VOL: 0
; 0000 02C1       if(adc[min]<900  && (t==0 || (m<t && t!=10)|| (m<t && t!=9)))
;PCODE: $000007C2 VOL: 0
;PCODE: $000007C3 VOL: 0
;PCODE: $000007C4 VOL: 0
;PCODE: $000007C5 VOL: 0
;PCODE: $000007C6 VOL: 0
;PCODE: $000007C7 VOL: 0
;PCODE: $000007C8 VOL: 0
;PCODE: $000007C9 VOL: 0
;PCODE: $000007CA VOL: 0
;PCODE: $000007CB VOL: 0
;PCODE: $000007CC VOL: 0
;PCODE: $000007CD VOL: 0
;PCODE: $000007CE VOL: 0
;PCODE: $000007CF VOL: 0
;PCODE: $000007D0 VOL: 0
;PCODE: $000007D1 VOL: 0
;PCODE: $000007D2 VOL: 0
;PCODE: $000007D3 VOL: 0
;PCODE: $000007D4 VOL: 0
;PCODE: $000007D5 VOL: 0
;PCODE: $000007D6 VOL: 0
;PCODE: $000007D7 VOL: 0
;PCODE: $000007D8 VOL: 0
;PCODE: $000007D9 VOL: 0
;PCODE: $000007DA VOL: 0
;PCODE: $000007DB VOL: 0
;PCODE: $000007DC VOL: 0
;PCODE: $000007DD VOL: 0
;PCODE: $000007DE VOL: 0
;PCODE: $000007DF VOL: 0
;PCODE: $000007E0 VOL: 0
; 0000 02C2       {
; 0000 02C3       follow();
;PCODE: $000007E1 VOL: 0
; 0000 02C4       #asm("wdr");
;PCODE: $000007E2 VOL: 0
	wdr
;PCODE: $000007E3 VOL: 0
; 0000 02C5       }
; 0000 02C6       else if (t==10 || adc[min]>900)
;PCODE: $000007E4 VOL: 0
;PCODE: $000007E5 VOL: 0
;PCODE: $000007E6 VOL: 0
;PCODE: $000007E7 VOL: 0
;PCODE: $000007E8 VOL: 0
;PCODE: $000007E9 VOL: 0
;PCODE: $000007EA VOL: 0
;PCODE: $000007EB VOL: 0
;PCODE: $000007EC VOL: 0
;PCODE: $000007ED VOL: 0
;PCODE: $000007EE VOL: 0
;PCODE: $000007EF VOL: 0
;PCODE: $000007F0 VOL: 0
;PCODE: $000007F1 VOL: 0
; 0000 02C7        {
; 0000 02C8         sahmi();
;PCODE: $000007F2 VOL: 0
; 0000 02C9         #asm("wdr");
;PCODE: $000007F3 VOL: 0
	wdr
;PCODE: $000007F4 VOL: 0
; 0000 02CA        }
; 0000 02CB        else if (m>t || t==9 )
;PCODE: $000007F5 VOL: 0
;PCODE: $000007F6 VOL: 0
;PCODE: $000007F7 VOL: 0
;PCODE: $000007F8 VOL: 0
;PCODE: $000007F9 VOL: 0
;PCODE: $000007FA VOL: 0
;PCODE: $000007FB VOL: 0
;PCODE: $000007FC VOL: 0
;PCODE: $000007FD VOL: 0
;PCODE: $000007FE VOL: 0
; 0000 02CC        {
; 0000 02CD         if (SB>200 ) follow() ;
;PCODE: $000007FF VOL: 0
;PCODE: $00000800 VOL: 0
;PCODE: $00000801 VOL: 0
;PCODE: $00000802 VOL: 0
; 0000 02CE         else sahmi();
;PCODE: $00000803 VOL: 0
;PCODE: $00000804 VOL: 0
;PCODE: $00000805 VOL: 0
; 0000 02CF         }
;PCODE: $00000806 VOL: 0
; 0000 02D0 //        while(l==1 ){
; 0000 02D1 //          sensor();
; 0000 02D2 //            cmp=compass_read(1)-c;
; 0000 02D3 //          if(cmp>-50  && cmp<50) cmp=(float)-cmp*2.25;
; 0000 02D4 //else cmp=(float)-cmp*1.75;
; 0000 02D5 //          sharp();
; 0000 02D6 //          #asm("wdr");
; 0000 02D7 //          if(kaf[15]<KAF || kaf[13]<KAF )
; 0000 02D8 //          {
; 0000 02D9 //               p=0;
; 0000 02DA //              motor(255+cmp,-255+cmp,-255+cmp,255+cmp);
; 0000 02DB //
; 0000 02DC //          }
; 0000 02DD //          else if(kaf[0]<KAF || kaf[1]<KAF || kaf[2]<KAF || kaf[3]<KAF || kaf[12]<KAF)
; 0000 02DE //          {
; 0000 02DF //              p=1;
; 0000 02E0 //              motor(255+cmp,-255+cmp,-255+cmp,255+cmp);
; 0000 02E1 //
; 0000 02E2 //          }
; 0000 02E3 //          else if(p==0 &&((min>=8 && min<16 ) || min==0) )
; 0000 02E4 //          {
; 0000 02E5 //              motor(0+cmp/2,0+cmp/2,0+cmp/2,0+cmp/2);
; 0000 02E6 //          }
; 0000 02E7 //          else if(p==0 && min>0 && min<8)
; 0000 02E8 //          {
; 0000 02E9 //              l=0;
; 0000 02EA //              p=0;
; 0000 02EB //              break;
; 0000 02EC //
; 0000 02ED //          }
; 0000 02EE //      }
; 0000 02EF //        while(r==1)
; 0000 02F0 //        {
; 0000 02F1 //          sensor();
; 0000 02F2 //            cmp=compass_read(1)-c;
; 0000 02F3 //          if(cmp>-50  && cmp<50) cmp=(float)-cmp*2.25;
; 0000 02F4 //else cmp=(float)-cmp*1.75;
; 0000 02F5 //          sharp();
; 0000 02F6 //          #asm("wdr")
; 0000 02F7 //          if(kaf[3]<KAF || kaf[2]<KAF || kaf[1]<KAF)
; 0000 02F8 //          {
; 0000 02F9 //               p=0;
; 0000 02FA //              motor(-255+cmp,255+cmp,255+cmp,-255+cmp );
; 0000 02FB //          }
; 0000 02FC //          else if(kaf[0]<KAF || kaf[15]<KAF || kaf[12]<KAF || kaf[13]<KAF )
; 0000 02FD //          {
; 0000 02FE //              p=1;
; 0000 02FF //              motor(-255+cmp,255+cmp,255+cmp,-255+cmp);
; 0000 0300 //          }
; 0000 0301 //          else if(p==0 && min>=0 && min<8 )
; 0000 0302 //          {
; 0000 0303 //              motor(0+cmp/2,0+cmp/2,0+cmp/2,0+cmp/2);
; 0000 0304 //          }
; 0000 0305 //          else if(p==0 &&(( min>=8 && min<16) ))
; 0000 0306 //          {
; 0000 0307 //             r=0;
; 0000 0308 //              p=0;
; 0000 0309 //              break;
; 0000 030A //          }
; 0000 030B //      }
; 0000 030C //      while(f==1)
; 0000 030D //      {
; 0000 030E //          sensor();
; 0000 030F //            cmp=compass_read(1)-c;
; 0000 0310 //          if(cmp>-50  && cmp<50) cmp=(float)-cmp*2.25;
; 0000 0311 //else cmp=(float)-cmp*1.75;
; 0000 0312 //          sharp();
; 0000 0313 //          #asm("wdr")
; 0000 0314 //          if( kaf[9]<KAF || kaf[10]<KAF)
; 0000 0315 //          {
; 0000 0316 //               p=0;
; 0000 0317 //              motor(-255+cmp,-255+cmp,255+cmp,255+cmp);
; 0000 0318 //
; 0000 0319 //          }
; 0000 031A //          else if(kaf[4]<KAF || kaf[5]<KAF || kaf[6]<KAF ||kaf[8]<KAF)
; 0000 031B //          {
; 0000 031C //              p=1;
; 0000 031D //              motor(-255+cmp,-255+cmp,255+cmp,255+cmp);
; 0000 031E //          }
; 0000 031F //          else if(p==0 && ((min>=0 && min<5 )|| (min>11 && min<16)))
; 0000 0320 //          {
; 0000 0321 //              motor(0+cmp,0+cmp,0+cmp,0+cmp);
; 0000 0322 //          }
; 0000 0323 //          else if(p==0 && min>4 && min<12)
; 0000 0324 //          {
; 0000 0325 //              f=0;
; 0000 0326 //              p=0;
; 0000 0327 //              break;
; 0000 0328 //          }
; 0000 0329 //      }
; 0000 032A //        while(b==1)
; 0000 032B //        {
; 0000 032C //          sensor();
; 0000 032D //          cmp=compass_read(1)-c;
; 0000 032E //          if(cmp>-50  && cmp<50) cmp=(float)-cmp*2.25;
; 0000 032F //else cmp=(float)-cmp*1.75;
; 0000 0330 //
; 0000 0331 //          sharp();
; 0000 0332 //          #asm("wdr")
; 0000 0333 //          if( kaf[6]<KAF || kaf[5]<KAF  )
; 0000 0334 //          {
; 0000 0335 //               p=0;
; 0000 0336 //              motor(255+cmp,255+cmp,-255+cmp,-255+cmp);
; 0000 0337 //
; 0000 0338 //          }
; 0000 0339           ////////////////////////&& beshe ba do taraf
; 0000 033A //         else if(kaf[9]<KAF || kaf[10]<KAF  || kaf[8]<KAF || kaf[4]<KAF)
; 0000 033B //         {
; 0000 033C //            p=1;
; 0000 033D //              motor(255+cmp,255+cmp,-255+cmp,-255+cmp);
; 0000 033E //          }
; 0000 033F //          else if(p==0 && min>4 && min<12 )
; 0000 0340 //          {
; 0000 0341 //              motor(0+cmp,0+cmp,0+cmp,0+cmp);
; 0000 0342 //          }
; 0000 0343 //          else if(p==0 && ((min>=0 && min<5 )|| (min>11 && min<16)))
; 0000 0344 //          {
; 0000 0345 //              b=0;
; 0000 0346 //              p=0;
; 0000 0347 //              break;
; 0000 0348 //          }
; 0000 0349 //
; 0000 034A //          }
; 0000 034B 
; 0000 034C       };
;PCODE: $00000807 VOL: 0
;PCODE: $00000808 VOL: 0
;PCODE: $00000809 VOL: 0
;PCODE: $0000080A VOL: 0
;PCODE: $0000080B VOL: 0
; 0000 034D  }
;PCODE: $0000080C VOL: 0
;PCODE: $0000080D VOL: 0
;PCODE: $0000080E VOL: 0
