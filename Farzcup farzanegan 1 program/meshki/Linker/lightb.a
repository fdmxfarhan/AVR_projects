;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.03.4 Standard
;Automatic Program Generator
;© Copyright 1998-2008 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 10/31/2015
;Author  :
;Company :
;Comments:
;
;
;Chip type           : ATmega64
;Program type        : Application
;Clock frequency     : 11.059200 MHz
;Memory model        : Small
;External RAM size   : 0
;Data Stack size     : 1024
;*****************************************************/
;
;#include <mega64.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <stdio.h>
;
;// I2C Bus functions
;#asm
;PCODE: $0000000D VOL: 0
   .equ __i2c_port=0x12 ;PORTD
;PCODE: $0000000E VOL: 0
   .equ __sda_bit=1
;PCODE: $0000000F VOL: 0
   .equ __scl_bit=0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0021 #endasm
;#include <i2c.h>
;eeprom int c;
;//////////////////////////////////////////cmp
; #define EEPROM_BUS_ADDRESS 0xc0
;int cmp;
;/* read a byte from the EEPROM */
;unsigned char compass_read(unsigned char address) {
; 0000 0028 unsigned char compass_read(unsigned char address) {

	.CSEG
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0029 unsigned char data;
; 0000 002A i2c_start();
;PCODE: $00000014 VOL: 0
;	address -> Y+1
;	data -> R17
;PCODE: $00000015 VOL: 0
; 0000 002B i2c_write(EEPROM_BUS_ADDRESS);
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 002C i2c_write(address);
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 002D i2c_start();
;PCODE: $0000001C VOL: 0
; 0000 002E i2c_write(EEPROM_BUS_ADDRESS | 1);
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 002F data=i2c_read(0);
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0030 i2c_stop();
;PCODE: $00000024 VOL: 0
; 0000 0031 return data;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0032 }
;PCODE: $0000002A VOL: 0
;
;// Alphanumeric LCD Module functions
;#asm
;PCODE: $0000002B VOL: 0
   .equ __lcd_port=0x15 ;PORTC
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0037 #endasm
;#include <lcd.h>
;
;#define RXB8 1
;#define TXB8 0
;#define UPE 2
;#define OVR 3
;#define FE 4
;#define UDRE 5
;#define RXC 7
;
;#define FRAMING_ERROR (1<<FE)
;#define PARITY_ERROR (1<<UPE)
;#define DATA_OVERRUN (1<<OVR)
;#define DATA_REGISTER_EMPTY (1<<UDRE)
;#define RX_COMPLETE (1<<RXC)
;
;// USART1 Receiver buffer
;#define RX_BUFFER_SIZE1 8
;char rx_buffer1[RX_BUFFER_SIZE1];
;
;#if RX_BUFFER_SIZE1<256
;unsigned char rx_wr_index1,rx_rd_index1,rx_counter1;
;#else
;unsigned int rx_wr_index1,rx_rd_index1,rx_counter1;
;#endif
;
;// This flag is set on USART1 Receiver buffer overflow
;bit rx_buffer_overflow1;
;   int t=0;
;// USART1 Receiver interrupt service routine
;interrupt [USART1_RXC] void usart1_rx_isr(void)
; 0000 0057 {
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0058 char status,data;
; 0000 0059 status=UCSR1A;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;	status -> R17
;	data -> R16
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 005A data=UDR1;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 005B if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 005C    {
; 0000 005D    rx_buffer1[rx_wr_index1]=data;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 005E    if (++rx_wr_index1 == RX_BUFFER_SIZE1) rx_wr_index1=0;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 005F    if (++rx_counter1 == RX_BUFFER_SIZE1)
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0060       {
; 0000 0061       rx_counter1=0;
;PCODE: $0000004A VOL: 0
; 0000 0062       rx_buffer_overflow1=1;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0063       };
;PCODE: $0000004E VOL: 0
; 0000 0064    };
;PCODE: $0000004F VOL: 0
; 0000 0065     if (data=='2'){
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0066    lcd_gotoxy(12,1);
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0067    lcd_putchar('2');
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0068    t=2;
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0069    }
; 0000 006A    else    if (data=='1'){
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 006B    lcd_gotoxy(12,1);
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 006C    lcd_putchar('1');
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 006D    t=1;
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 006E    }
; 0000 006F      else    if (data=='3'){
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0070    lcd_gotoxy(12,1);
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 0071    lcd_putchar('3');
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 0072    t=3;
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 0073    }
; 0000 0074     else {
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 0075    lcd_gotoxy(12,1);
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 0076    lcd_putchar('n');
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 0077    t=0;}
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 0078 
; 0000 0079 }
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;
;// Get a character from the USART1 Receiver buffer
;#pragma used+
;char getchar1(void)
; 0000 007E {
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 007F char data;
; 0000 0080 while (rx_counter1==0);
;PCODE: $0000008F VOL: 0
;	data -> R17
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 0081 data=rx_buffer1[rx_rd_index1];
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 0082 if (++rx_rd_index1 == RX_BUFFER_SIZE1) rx_rd_index1=0;
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 0083 #asm("cli")
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
	cli
;PCODE: $000000A0 VOL: 0
; 0000 0084 --rx_counter1;
;PCODE: $000000A1 VOL: 0
; 0000 0085 #asm("sei")
;PCODE: $000000A2 VOL: 0
	sei
;PCODE: $000000A3 VOL: 0
; 0000 0086 return data;
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 0087 }
;PCODE: $000000A7 VOL: 0
;#pragma used-
;// Write a character to the USART1 Transmitter
;#pragma used+
;void putchar1(char c)
; 0000 008C {
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 008D while ((UCSR1A & DATA_REGISTER_EMPTY)==0);
;	c -> Y+0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 008E UDR1=c;
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 008F }
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;#pragma used-
;
;#include <delay.h>
;
;#define ADC_VREF_TYPE 0x40
;
;// Read the AD conversion result
;unsigned int read_adc(unsigned char adc_input)
; 0000 0098 {
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 0099 ADMUX=adc_input | (ADC_VREF_TYPE & 0xff);
;	adc_input -> Y+0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 009A // Delay needed for the stabilization of the ADC input voltage
; 0000 009B delay_us(10);
;PCODE: $000000BC VOL: 0
; 0000 009C // Start the AD conversion
; 0000 009D ADCSRA|=0x40;
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 009E // Wait for the AD conversion to complete
; 0000 009F while ((ADCSRA & 0x10)==0);
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 00A0 ADCSRA|=0x10;
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 00A1 return ADCW;
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 00A2 }
;PCODE: $000000CF VOL: 0
;
;// Declare your global variables here
;void motor(int ML1,int ML2,int MR2,int MR1){
; 0000 00A5 void motor(int ML1,int ML2,int MR2,int MR1){
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 00A6 #asm("cli")
;	ML1 -> Y+6
;	ML2 -> Y+4
;	MR2 -> Y+2
;	MR1 -> Y+0
;PCODE: $000000D2 VOL: 0
	cli
;PCODE: $000000D3 VOL: 0
; 0000 00A7 #asm("wdr") ;
;PCODE: $000000D4 VOL: 0
	wdr
;PCODE: $000000D5 VOL: 0
; 0000 00A8 
; 0000 00A9 if(ML1<-255) ML1=-255;
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 00AA if(ML2<-255) ML2=-255;
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 00AB if(MR1<-255) MR1=-255;
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0000 00AC if(MR2<-255) MR2=-255;
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
; 0000 00AD 
; 0000 00AE if(ML1>255) ML1=255;
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0000 00AF if(ML2>255) ML2=255;
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0000 00B0 if(MR1>255) MR1=255;
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0000 00B1 if(MR2>255) MR2=255;
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
; 0000 00B2 /////////////////////////////////
; 0000 00B3 if(ML1>=0){
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0000 00B4 PORTD.7=0;
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
; 0000 00B5 OCR2=ML1;}
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
; 0000 00B6 else if(ML1<0){
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
; 0000 00B7 PORTD.7=1;
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0000 00B8 OCR2=ML1;}
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
; 0000 00B9 
; 0000 00BA 
; 0000 00BB 
; 0000 00BC      /////////////////////////
; 0000 00BD if(ML2>=0){
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
; 0000 00BE PORTD.6=0;
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0000 00BF OCR1B=ML2;
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
; 0000 00C0 }
; 0000 00C1 else if(ML2<0){
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
; 0000 00C2 PORTD.6=1;
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
; 0000 00C3 OCR1B=ML2;}
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
; 0000 00C4 
; 0000 00C5    /////////////////////////
; 0000 00C6 if(MR1>=0){
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
; 0000 00C7 PORTD.4=0;
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
; 0000 00C8 OCR0=MR1;}
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
; 0000 00C9 else if(MR1<0){
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
; 0000 00CA PORTD.4=1;
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0000 00CB OCR0=MR1;}
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0000 00CC 
; 0000 00CD  ////////////////////////
; 0000 00CE  if(MR2>=0){
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
; 0000 00CF PORTD.5=0;
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
; 0000 00D0 OCR1A=MR2;}
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
; 0000 00D1 else if(MR2<0){
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
; 0000 00D2 PORTD.5=1;
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
; 0000 00D3 OCR1A=MR2;}
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
; 0000 00D4 #asm("wdr") ;
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
	wdr
;PCODE: $0000014F VOL: 0
; 0000 00D5 #asm("sei")
;PCODE: $00000150 VOL: 0
	sei
;PCODE: $00000151 VOL: 0
; 0000 00D6 }
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;
;
;
;
;int SL,SR,SB,RL,sum=0;
;      void sharp(){
; 0000 00DC void sharp(){
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
; 0000 00DD       #asm("cli")
;PCODE: $00000157 VOL: 0
	cli
;PCODE: $00000158 VOL: 0
; 0000 00DE        #asm("wdr") ;
;PCODE: $00000159 VOL: 0
	wdr
;PCODE: $0000015A VOL: 0
; 0000 00DF 
; 0000 00E0       SB=read_adc(5);
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
; 0000 00E1       SR=read_adc(4);
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
; 0000 00E2       SL=read_adc(3);
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
; 0000 00E3 
; 0000 00E4        lcd_gotoxy(13,1);
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
; 0000 00E5       lcd_putchar((SR/100)%10+'0');
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
; 0000 00E6       lcd_putchar((SR/10)%10+'0');
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
; 0000 00E7       lcd_putchar((SR/1)%10+'0');
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
; 0000 00E8         lcd_gotoxy(8,0);
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
; 0000 00E9       lcd_putchar((SB/100)%10+'0');
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
; 0000 00EA       lcd_putchar((SB/10)%10+'0');
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
; 0000 00EB       lcd_putchar((SB/1)%10+'0');
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
; 0000 00EC 
; 0000 00ED        lcd_gotoxy(8,1);
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
; 0000 00EE       lcd_putchar((SL/100)%10+'0');
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
; 0000 00EF       lcd_putchar((SL/10)%10+'0');
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
; 0000 00F0       lcd_putchar((SL/1)%10+'0');
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
; 0000 00F1 
; 0000 00F2        #asm("wdr") ;
;PCODE: $000001BE VOL: 0
	wdr
;PCODE: $000001BF VOL: 0
; 0000 00F3        RL=(SR-SL);
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
; 0000 00F4        sum= SR+SL;
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
; 0000 00F5          RL=(SR-SL)/2;
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
; 0000 00F6 
; 0000 00F7        if(RL>-80 && RL<80) RL=0;
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
; 0000 00F8 //       if (RL<50 && RL>-50) RL=0;
; 0000 00F9          if(RL>0) RL=RL*1.5;
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
; 0000 00FA        else if(RL<0) RL=RL*0.8;
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
; 0000 00FB 
; 0000 00FC 
; 0000 00FD      //  if(RL>-100 && RL<100) RL=0;
; 0000 00FE //       if(RL>0)
; 0000 00FF //       {
; 0000 0100 //       lcd_gotoxy(0,1);
; 0000 0101 //       lcd_putchar('+');
; 0000 0102 //       lcd_putchar((RL/100)%10+'0');
; 0000 0103 //       lcd_putchar((RL/10)%10+'0');
; 0000 0104 //       lcd_putchar((RL/1)%10+'0');
; 0000 0105 //                }
; 0000 0106 //               else  if(RL<0)
; 0000 0107 //               {
; 0000 0108 //       lcd_gotoxy(0,1);
; 0000 0109 //       lcd_putchar('-');
; 0000 010A //       lcd_putchar((-RL/100)%10+'0');
; 0000 010B //       lcd_putchar((-RL/10)%10+'0');
; 0000 010C //       lcd_putchar((-RL/1)%10+'0');
; 0000 010D //                }
; 0000 010E       #asm("sei")
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
	sei
;PCODE: $000001F3 VOL: 0
; 0000 010F      }
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;
;
;   int adc[16],min=0,i,kaf[16],mini=0,r=0,l=0,f=0,b=0,back=0,h=0;
;      void sensor() {
; 0000 0113 void sensor() {
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
; 0000 0114        #asm("cli")
;PCODE: $000001F8 VOL: 0
	cli
;PCODE: $000001F9 VOL: 0
; 0000 0115 
; 0000 0116     for(i=0;i<16;i++)
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
; 0000 0117      {
; 0000 0118      #asm("wdr") ;
;PCODE: $00000205 VOL: 0
	wdr
;PCODE: $00000206 VOL: 0
; 0000 0119  PORTA.3=(i/8)%2;
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
; 0000 011A  PORTA.2=(i/4)%2;
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
; 0000 011B  PORTA.1=(i/2)%2;
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
; 0000 011C  PORTA.0=(i/1)%2;
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
; 0000 011D   adc[i]=read_adc(7);
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
; 0000 011E   kaf[i]=read_adc(6);
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
; 0000 011F ////////////////////////////////////////////////////////////moghayese
; 0000 0120   if (adc[i]<adc[min])
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
; 0000 0121   {  min=i;  }
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
; 0000 0122 
; 0000 0123    if (kaf[i]<kaf[mini])
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
; 0000 0124    {
; 0000 0125 
; 0000 0126    mini=i;  }
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
; 0000 0127 
; 0000 0128  }
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
; 0000 0129 h=(adc[15]+adc[1]+adc[0])/3;
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
; 0000 012A  ///////////////////////////////////////////////////////////chap
; 0000 012B   lcd_gotoxy(0,0);
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
; 0000 012C   lcd_putchar((min/10)%10+'0');
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
; 0000 012D   lcd_putchar((min/1)%10+'0');
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
; 0000 012E   lcd_putchar('=');
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
; 0000 012F   lcd_putchar((adc[min]/1000)%10+'0');
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
; 0000 0130   lcd_putchar((adc[min]/100)%10+'0');
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
; 0000 0131   lcd_putchar((adc[min]/10)%10+'0');
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
; 0000 0132   lcd_putchar((adc[min]/1)%10+'0');
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
; 0000 0133  #asm("wdr") ;
;PCODE: $000002CF VOL: 0
	wdr
;PCODE: $000002D0 VOL: 0
; 0000 0134 
; 0000 0135  lcd_gotoxy(0,1);
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
; 0000 0136   lcd_putchar((mini/10)%10+'0');
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
; 0000 0137   lcd_putchar((mini/1)%10+'0');
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
; 0000 0138   lcd_putchar('=');
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
; 0000 0139   lcd_putchar((kaf[mini]/1000)%10+'0');
;PCODE: $000002E8 VOL: 0
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
;PCODE: $000002F4 VOL: 0
;PCODE: $000002F5 VOL: 0
; 0000 013A   lcd_putchar((kaf[mini]/100)%10+'0');
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
;PCODE: $000002FA VOL: 0
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
; 0000 013B   lcd_putchar((kaf[mini]/10)%10+'0');
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
; 0000 013C   lcd_putchar((kaf[mini]/1)%10+'0');
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
;PCODE: $00000317 VOL: 0
;PCODE: $00000318 VOL: 0
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
;PCODE: $0000031B VOL: 0
;PCODE: $0000031C VOL: 0
; 0000 013D 
; 0000 013E   if((kaf[12]<400 || kaf[13]<400 || kaf[14]<400 || kaf[15]<400) && (kaf[0]<400 || kaf[1]<400 || kaf[2]<400 || kaf[3]<400)  && r==0 && l==0 )
;PCODE: $0000031D VOL: 0
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
;PCODE: $00000324 VOL: 0
;PCODE: $00000325 VOL: 0
;PCODE: $00000326 VOL: 0
;PCODE: $00000327 VOL: 0
;PCODE: $00000328 VOL: 0
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
;PCODE: $0000032B VOL: 0
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 0
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
;PCODE: $00000330 VOL: 0
;PCODE: $00000331 VOL: 0
;PCODE: $00000332 VOL: 0
;PCODE: $00000333 VOL: 0
;PCODE: $00000334 VOL: 0
;PCODE: $00000335 VOL: 0
;PCODE: $00000336 VOL: 0
;PCODE: $00000337 VOL: 0
;PCODE: $00000338 VOL: 0
;PCODE: $00000339 VOL: 0
;PCODE: $0000033A VOL: 0
;PCODE: $0000033B VOL: 0
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
;PCODE: $0000033E VOL: 0
;PCODE: $0000033F VOL: 0
;PCODE: $00000340 VOL: 0
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
;PCODE: $00000345 VOL: 0
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
;PCODE: $00000348 VOL: 0
;PCODE: $00000349 VOL: 0
; 0000 013F    {
; 0000 0140    if (adc[min]<900 && ((min>11 && min<16 )||( min>=0 && min<5 ))&& f==0 && (kaf[8]<400 || kaf[9]<400 || kaf[10]<400 || kaf[11]<400)) {
;PCODE: $0000034A VOL: 0
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
;PCODE: $0000034D VOL: 0
;PCODE: $0000034E VOL: 0
;PCODE: $0000034F VOL: 0
;PCODE: $00000350 VOL: 0
;PCODE: $00000351 VOL: 0
;PCODE: $00000352 VOL: 0
;PCODE: $00000353 VOL: 0
;PCODE: $00000354 VOL: 0
;PCODE: $00000355 VOL: 0
;PCODE: $00000356 VOL: 0
;PCODE: $00000357 VOL: 0
;PCODE: $00000358 VOL: 0
;PCODE: $00000359 VOL: 0
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
;PCODE: $0000035C VOL: 0
;PCODE: $0000035D VOL: 0
;PCODE: $0000035E VOL: 0
;PCODE: $0000035F VOL: 0
;PCODE: $00000360 VOL: 0
;PCODE: $00000361 VOL: 0
;PCODE: $00000362 VOL: 0
;PCODE: $00000363 VOL: 0
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
;PCODE: $00000366 VOL: 0
;PCODE: $00000367 VOL: 0
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
;PCODE: $0000036A VOL: 0
;PCODE: $0000036B VOL: 0
;PCODE: $0000036C VOL: 0
;PCODE: $0000036D VOL: 0
;PCODE: $0000036E VOL: 0
;PCODE: $0000036F VOL: 0
;PCODE: $00000370 VOL: 0
;PCODE: $00000371 VOL: 0
;PCODE: $00000372 VOL: 0
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0
;PCODE: $00000375 VOL: 0
;PCODE: $00000376 VOL: 0
;PCODE: $00000377 VOL: 0
;PCODE: $00000378 VOL: 0
;PCODE: $00000379 VOL: 0
;PCODE: $0000037A VOL: 0
;PCODE: $0000037B VOL: 0
; 0000 0141 
; 0000 0142 
; 0000 0143 
; 0000 0144    f=1;
;PCODE: $0000037C VOL: 0
;PCODE: $0000037D VOL: 0
; 0000 0145 
; 0000 0146    #asm("wdr") ;
;PCODE: $0000037E VOL: 0
	wdr
;PCODE: $0000037F VOL: 0
; 0000 0147    }
; 0000 0148 
; 0000 0149    }
;PCODE: $00000380 VOL: 0
; 0000 014A 
; 0000 014B     if ((kaf[0]<400 || kaf[1]<400 || kaf[2]<400 || kaf[3]<400)  ) r=1;  //  && l==0
;PCODE: $00000381 VOL: 0
;PCODE: $00000382 VOL: 0
;PCODE: $00000383 VOL: 0
;PCODE: $00000384 VOL: 0
;PCODE: $00000385 VOL: 0
;PCODE: $00000386 VOL: 0
;PCODE: $00000387 VOL: 0
;PCODE: $00000388 VOL: 0
;PCODE: $00000389 VOL: 0
;PCODE: $0000038A VOL: 0
;PCODE: $0000038B VOL: 0
;PCODE: $0000038C VOL: 0
;PCODE: $0000038D VOL: 0
;PCODE: $0000038E VOL: 0
;PCODE: $0000038F VOL: 0
;PCODE: $00000390 VOL: 0
;PCODE: $00000391 VOL: 0
;PCODE: $00000392 VOL: 0
;PCODE: $00000393 VOL: 0
;PCODE: $00000394 VOL: 0
; 0000 014C 
; 0000 014D 
; 0000 014E       if ((kaf[12]<400 || kaf[13]<400 || kaf[14]<400 || kaf[15]<400))  l=1;
;PCODE: $00000395 VOL: 0
;PCODE: $00000396 VOL: 0
;PCODE: $00000397 VOL: 0
;PCODE: $00000398 VOL: 0
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
;PCODE: $0000039B VOL: 0
;PCODE: $0000039C VOL: 0
;PCODE: $0000039D VOL: 0
;PCODE: $0000039E VOL: 0
;PCODE: $0000039F VOL: 0
;PCODE: $000003A0 VOL: 0
;PCODE: $000003A1 VOL: 0
;PCODE: $000003A2 VOL: 0
;PCODE: $000003A3 VOL: 0
;PCODE: $000003A4 VOL: 0
;PCODE: $000003A5 VOL: 0
;PCODE: $000003A6 VOL: 0
;PCODE: $000003A7 VOL: 0
;PCODE: $000003A8 VOL: 0
;PCODE: $000003A9 VOL: 0
; 0000 014F //  if (kaf[4]<300 || kaf[5]<300 || kaf[6]<400 || kaf[7]<300 )  b=1;
; 0000 0150 
; 0000 0151       if ((f==1 || b==1) && (r==1|| l==1 ) ){
;PCODE: $000003AA VOL: 0
;PCODE: $000003AB VOL: 0
;PCODE: $000003AC VOL: 0
;PCODE: $000003AD VOL: 0
;PCODE: $000003AE VOL: 0
;PCODE: $000003AF VOL: 0
;PCODE: $000003B0 VOL: 0
;PCODE: $000003B1 VOL: 0
;PCODE: $000003B2 VOL: 0
;PCODE: $000003B3 VOL: 0
;PCODE: $000003B4 VOL: 0
;PCODE: $000003B5 VOL: 0
;PCODE: $000003B6 VOL: 0
;PCODE: $000003B7 VOL: 0
;PCODE: $000003B8 VOL: 0
;PCODE: $000003B9 VOL: 0
;PCODE: $000003BA VOL: 0
;PCODE: $000003BB VOL: 0
;PCODE: $000003BC VOL: 0
;PCODE: $000003BD VOL: 0
;PCODE: $000003BE VOL: 0
; 0000 0152      f=0;
;PCODE: $000003BF VOL: 0
;PCODE: $000003C0 VOL: 0
; 0000 0153      //b=0;
; 0000 0154      }
; 0000 0155      if (r==1 && l==1) {
;PCODE: $000003C1 VOL: 0
;PCODE: $000003C2 VOL: 0
;PCODE: $000003C3 VOL: 0
;PCODE: $000003C4 VOL: 0
;PCODE: $000003C5 VOL: 0
;PCODE: $000003C6 VOL: 0
;PCODE: $000003C7 VOL: 0
;PCODE: $000003C8 VOL: 0
;PCODE: $000003C9 VOL: 0
;PCODE: $000003CA VOL: 0
;PCODE: $000003CB VOL: 0
; 0000 0156      r=0;
;PCODE: $000003CC VOL: 0
;PCODE: $000003CD VOL: 0
; 0000 0157      l=0;
;PCODE: $000003CE VOL: 0
;PCODE: $000003CF VOL: 0
; 0000 0158      if (min>=4 && min<=12) b=1;
;PCODE: $000003D0 VOL: 0
;PCODE: $000003D1 VOL: 0
;PCODE: $000003D2 VOL: 0
;PCODE: $000003D3 VOL: 0
;PCODE: $000003D4 VOL: 0
;PCODE: $000003D5 VOL: 0
;PCODE: $000003D6 VOL: 0
;PCODE: $000003D7 VOL: 0
;PCODE: $000003D8 VOL: 0
;PCODE: $000003D9 VOL: 0
;PCODE: $000003DA VOL: 0
;PCODE: $000003DB VOL: 0
; 0000 0159      else f=1;
;PCODE: $000003DC VOL: 0
;PCODE: $000003DD VOL: 0
;PCODE: $000003DE VOL: 0
;PCODE: $000003DF VOL: 0
; 0000 015A      }
;PCODE: $000003E0 VOL: 0
; 0000 015B 
; 0000 015C 
; 0000 015D    }
;PCODE: $000003E1 VOL: 0
;PCODE: $000003E2 VOL: 0
;PCODE: $000003E3 VOL: 0
;
;
;
;
;
;
;
;//    #asm("sei")
;//    }
;
;   void compass() {
; 0000 0168 void compass() {
;PCODE: $000003E4 VOL: 0
;PCODE: $000003E5 VOL: 0
; 0000 0169  #asm("cli")
;PCODE: $000003E6 VOL: 0
	cli
;PCODE: $000003E7 VOL: 0
; 0000 016A  #asm ("wdr");
;PCODE: $000003E8 VOL: 0
	wdr
;PCODE: $000003E9 VOL: 0
; 0000 016B cmp=compass_read(1)-c;
;PCODE: $000003EA VOL: 0
;PCODE: $000003EB VOL: 0
;PCODE: $000003EC VOL: 0
;PCODE: $000003ED VOL: 0
;PCODE: $000003EE VOL: 0
;PCODE: $000003EF VOL: 0
;PCODE: $000003F0 VOL: 0
;PCODE: $000003F1 VOL: 0
;PCODE: $000003F2 VOL: 0
;PCODE: $000003F3 VOL: 0
; 0000 016C         lcd_gotoxy(12,0);
;PCODE: $000003F4 VOL: 0
;PCODE: $000003F5 VOL: 0
;PCODE: $000003F6 VOL: 0
;PCODE: $000003F7 VOL: 0
;PCODE: $000003F8 VOL: 0
; 0000 016D       if(cmp<0) cmp=cmp;
;PCODE: $000003F9 VOL: 0
;PCODE: $000003FA VOL: 0
;PCODE: $000003FB VOL: 0
;PCODE: $000003FC VOL: 0
; 0000 016E       if(cmp>128) cmp=cmp-255;
;PCODE: $000003FD VOL: 0
;PCODE: $000003FE VOL: 0
;PCODE: $000003FF VOL: 0
;PCODE: $00000400 VOL: 0
;PCODE: $00000401 VOL: 0
;PCODE: $00000402 VOL: 0
;PCODE: $00000403 VOL: 0
; 0000 016F       if(cmp<-128) cmp=cmp+255;
;PCODE: $00000404 VOL: 0
;PCODE: $00000405 VOL: 0
;PCODE: $00000406 VOL: 0
;PCODE: $00000407 VOL: 0
;PCODE: $00000408 VOL: 0
;PCODE: $00000409 VOL: 0
;PCODE: $0000040A VOL: 0
; 0000 0170 
; 0000 0171       if(cmp>=0)
;PCODE: $0000040B VOL: 0
;PCODE: $0000040C VOL: 0
;PCODE: $0000040D VOL: 0
; 0000 0172       {  #asm ("wdr");
;PCODE: $0000040E VOL: 0
	wdr
;PCODE: $0000040F VOL: 0
; 0000 0173        lcd_gotoxy(11,0);
;PCODE: $00000410 VOL: 0
;PCODE: $00000411 VOL: 0
;PCODE: $00000412 VOL: 0
;PCODE: $00000413 VOL: 0
;PCODE: $00000414 VOL: 0
; 0000 0174       lcd_putchar('+');
;PCODE: $00000415 VOL: 0
;PCODE: $00000416 VOL: 0
;PCODE: $00000417 VOL: 0
; 0000 0175       lcd_putchar((cmp/100)%10+'0');
;PCODE: $00000418 VOL: 0
;PCODE: $00000419 VOL: 0
;PCODE: $0000041A VOL: 0
;PCODE: $0000041B VOL: 0
;PCODE: $0000041C VOL: 0
;PCODE: $0000041D VOL: 0
;PCODE: $0000041E VOL: 0
;PCODE: $0000041F VOL: 0
;PCODE: $00000420 VOL: 0
; 0000 0176       lcd_putchar((cmp/10)%10+'0');
;PCODE: $00000421 VOL: 0
;PCODE: $00000422 VOL: 0
;PCODE: $00000423 VOL: 0
;PCODE: $00000424 VOL: 0
;PCODE: $00000425 VOL: 0
;PCODE: $00000426 VOL: 0
;PCODE: $00000427 VOL: 0
;PCODE: $00000428 VOL: 0
;PCODE: $00000429 VOL: 0
; 0000 0177       lcd_putchar((cmp/1)%10+'0');
;PCODE: $0000042A VOL: 0
;PCODE: $0000042B VOL: 0
;PCODE: $0000042C VOL: 0
;PCODE: $0000042D VOL: 0
;PCODE: $0000042E VOL: 0
;PCODE: $0000042F VOL: 0
; 0000 0178       }
; 0000 0179       else if(cmp<0)
;PCODE: $00000430 VOL: 0
;PCODE: $00000431 VOL: 0
;PCODE: $00000432 VOL: 0
;PCODE: $00000433 VOL: 0
; 0000 017A       {  #asm ("wdr");
;PCODE: $00000434 VOL: 0
	wdr
;PCODE: $00000435 VOL: 0
; 0000 017B        lcd_gotoxy(11,0);
;PCODE: $00000436 VOL: 0
;PCODE: $00000437 VOL: 0
;PCODE: $00000438 VOL: 0
;PCODE: $00000439 VOL: 0
;PCODE: $0000043A VOL: 0
; 0000 017C       lcd_putchar('-');
;PCODE: $0000043B VOL: 0
;PCODE: $0000043C VOL: 0
;PCODE: $0000043D VOL: 0
; 0000 017D       lcd_putchar((-cmp/100)%10+'0');
;PCODE: $0000043E VOL: 0
;PCODE: $0000043F VOL: 0
;PCODE: $00000440 VOL: 0
;PCODE: $00000441 VOL: 0
;PCODE: $00000442 VOL: 0
;PCODE: $00000443 VOL: 0
;PCODE: $00000444 VOL: 0
;PCODE: $00000445 VOL: 0
;PCODE: $00000446 VOL: 0
;PCODE: $00000447 VOL: 0
;PCODE: $00000448 VOL: 0
; 0000 017E       lcd_putchar((-cmp/10)%10+'0');
;PCODE: $00000449 VOL: 0
;PCODE: $0000044A VOL: 0
;PCODE: $0000044B VOL: 0
;PCODE: $0000044C VOL: 0
;PCODE: $0000044D VOL: 0
;PCODE: $0000044E VOL: 0
;PCODE: $0000044F VOL: 0
;PCODE: $00000450 VOL: 0
;PCODE: $00000451 VOL: 0
;PCODE: $00000452 VOL: 0
;PCODE: $00000453 VOL: 0
; 0000 017F       lcd_putchar((-cmp/1)%10+'0');
;PCODE: $00000454 VOL: 0
;PCODE: $00000455 VOL: 0
;PCODE: $00000456 VOL: 0
;PCODE: $00000457 VOL: 0
;PCODE: $00000458 VOL: 0
;PCODE: $00000459 VOL: 0
;PCODE: $0000045A VOL: 0
;PCODE: $0000045B VOL: 0
; 0000 0180       }
; 0000 0181 
; 0000 0182 //      if(25>cmp&&-25<cmp)   cmp=-2.5*cmp;
; 0000 0183 //
; 0000 0184 //     else                  cmp=-cmp;
; 0000 0185 
; 0000 0186 
; 0000 0187 
; 0000 0188 
; 0000 0189 
; 0000 018A ////abi
; 0000 018B //if(cmp>-40 && cmp<60) cmp=-cmp*2;
; 0000 018C // else cmp=-cmp*2.5;
; 0000 018D if(cmp>-40 && cmp<10) cmp=-cmp*2;
;PCODE: $0000045C VOL: 0
;PCODE: $0000045D VOL: 0
;PCODE: $0000045E VOL: 0
;PCODE: $0000045F VOL: 0
;PCODE: $00000460 VOL: 0
;PCODE: $00000461 VOL: 0
;PCODE: $00000462 VOL: 0
;PCODE: $00000463 VOL: 0
;PCODE: $00000464 VOL: 0
;PCODE: $00000465 VOL: 0
;PCODE: $00000466 VOL: 0
;PCODE: $00000467 VOL: 0
;PCODE: $00000468 VOL: 0
;PCODE: $00000469 VOL: 0
;PCODE: $0000046A VOL: 0
;PCODE: $0000046B VOL: 0
; 0000 018E else cmp=-cmp;
;PCODE: $0000046C VOL: 0
;PCODE: $0000046D VOL: 0
;PCODE: $0000046E VOL: 0
;PCODE: $0000046F VOL: 0
;PCODE: $00000470 VOL: 0
; 0000 018F 
; 0000 0190 
; 0000 0191       #asm ("wdr");
;PCODE: $00000471 VOL: 0
;PCODE: $00000472 VOL: 0
	wdr
;PCODE: $00000473 VOL: 0
; 0000 0192       #asm("sei") }
;PCODE: $00000474 VOL: 0
	sei
;PCODE: $00000475 VOL: 0
;PCODE: $00000476 VOL: 0
;PCODE: $00000477 VOL: 0
;
;
;  void sahmi()
; 0000 0196           {
;PCODE: $00000478 VOL: 0
;PCODE: $00000479 VOL: 0
; 0000 0197 
; 0000 0198 
; 0000 0199 
; 0000 019A 
; 0000 019B 
; 0000 019C           if(SB<190)
;PCODE: $0000047A VOL: 0
;PCODE: $0000047B VOL: 0
;PCODE: $0000047C VOL: 0
; 0000 019D            {
; 0000 019E           motor(-128-RL+cmp,-255+RL+cmp,128+RL-cmp,255-RL+cmp);
;PCODE: $0000047D VOL: 0
;PCODE: $0000047E VOL: 0
;PCODE: $0000047F VOL: 0
;PCODE: $00000480 VOL: 0
;PCODE: $00000481 VOL: 0
;PCODE: $00000482 VOL: 0
;PCODE: $00000483 VOL: 0
;PCODE: $00000484 VOL: 0
;PCODE: $00000485 VOL: 0
;PCODE: $00000486 VOL: 0
;PCODE: $00000487 VOL: 0
;PCODE: $00000488 VOL: 0
;PCODE: $00000489 VOL: 0
;PCODE: $0000048A VOL: 0
;PCODE: $0000048B VOL: 0
;PCODE: $0000048C VOL: 0
;PCODE: $0000048D VOL: 0
;PCODE: $0000048E VOL: 0
;PCODE: $0000048F VOL: 0
; 0000 019F            }
; 0000 01A0 
; 0000 01A1            ///////////////////////////////////////////////////////////////
; 0000 01A2 //           else if(SB>190 && (RL>60 || RL<-60))
; 0000 01A3 //           {
; 0000 01A4           // RL=RL*3;
; 0000 01A5 //          motor(255-RL+cmp,255+RL+cmp,-255+RL+cmp,-255-RL+cmp);
; 0000 01A6 //          }
; 0000 01A7            //////////////////////////////////////////////////////////////
; 0000 01A8            else if(SB>190 && RL<-70 )
;PCODE: $00000490 VOL: 0
;PCODE: $00000491 VOL: 0
;PCODE: $00000492 VOL: 0
;PCODE: $00000493 VOL: 0
;PCODE: $00000494 VOL: 0
;PCODE: $00000495 VOL: 0
;PCODE: $00000496 VOL: 0
;PCODE: $00000497 VOL: 0
;PCODE: $00000498 VOL: 0
;PCODE: $00000499 VOL: 0
;PCODE: $0000049A VOL: 0
;PCODE: $0000049B VOL: 0
; 0000 01A9            {
; 0000 01AA            motor((255+cmp)*0.5,(-255+cmp)*0.5,(-255+cmp)*0.5,(255+cmp)*0.5);
;PCODE: $0000049C VOL: 0
;PCODE: $0000049D VOL: 0
;PCODE: $0000049E VOL: 0
;PCODE: $0000049F VOL: 0
;PCODE: $000004A0 VOL: 0
;PCODE: $000004A1 VOL: 0
;PCODE: $000004A2 VOL: 0
;PCODE: $000004A3 VOL: 0
;PCODE: $000004A4 VOL: 0
;PCODE: $000004A5 VOL: 0
;PCODE: $000004A6 VOL: 0
;PCODE: $000004A7 VOL: 0
;PCODE: $000004A8 VOL: 0
;PCODE: $000004A9 VOL: 0
;PCODE: $000004AA VOL: 0
;PCODE: $000004AB VOL: 0
;PCODE: $000004AC VOL: 0
;PCODE: $000004AD VOL: 0
;PCODE: $000004AE VOL: 0
;PCODE: $000004AF VOL: 0
;PCODE: $000004B0 VOL: 0
;PCODE: $000004B1 VOL: 0
;PCODE: $000004B2 VOL: 0
;PCODE: $000004B3 VOL: 0
;PCODE: $000004B4 VOL: 0
;PCODE: $000004B5 VOL: 0
;PCODE: $000004B6 VOL: 0
;PCODE: $000004B7 VOL: 0
;PCODE: $000004B8 VOL: 0
; 0000 01AB            }
; 0000 01AC             else if(SB>190 && RL>70 )
;PCODE: $000004B9 VOL: 0
;PCODE: $000004BA VOL: 0
;PCODE: $000004BB VOL: 0
;PCODE: $000004BC VOL: 0
;PCODE: $000004BD VOL: 0
;PCODE: $000004BE VOL: 0
;PCODE: $000004BF VOL: 0
;PCODE: $000004C0 VOL: 0
;PCODE: $000004C1 VOL: 0
;PCODE: $000004C2 VOL: 0
;PCODE: $000004C3 VOL: 0
;PCODE: $000004C4 VOL: 0
; 0000 01AD            {
; 0000 01AE            motor((-255+cmp)*0.5,(255+cmp)*0.5,(255+cmp)*0.5,(-255+cmp)*0.5);
;PCODE: $000004C5 VOL: 0
;PCODE: $000004C6 VOL: 0
;PCODE: $000004C7 VOL: 0
;PCODE: $000004C8 VOL: 0
;PCODE: $000004C9 VOL: 0
;PCODE: $000004CA VOL: 0
;PCODE: $000004CB VOL: 0
;PCODE: $000004CC VOL: 0
;PCODE: $000004CD VOL: 0
;PCODE: $000004CE VOL: 0
;PCODE: $000004CF VOL: 0
;PCODE: $000004D0 VOL: 0
;PCODE: $000004D1 VOL: 0
;PCODE: $000004D2 VOL: 0
;PCODE: $000004D3 VOL: 0
;PCODE: $000004D4 VOL: 0
;PCODE: $000004D5 VOL: 0
;PCODE: $000004D6 VOL: 0
;PCODE: $000004D7 VOL: 0
;PCODE: $000004D8 VOL: 0
;PCODE: $000004D9 VOL: 0
;PCODE: $000004DA VOL: 0
;PCODE: $000004DB VOL: 0
;PCODE: $000004DC VOL: 0
;PCODE: $000004DD VOL: 0
;PCODE: $000004DE VOL: 0
;PCODE: $000004DF VOL: 0
;PCODE: $000004E0 VOL: 0
;PCODE: $000004E1 VOL: 0
; 0000 01AF            if (adc[min]<60  &&( (adc[0]<60) || (adc[15]<60)|| (adc[1]<60)  )  )  t=0;}
;PCODE: $000004E2 VOL: 0
;PCODE: $000004E3 VOL: 0
;PCODE: $000004E4 VOL: 0
;PCODE: $000004E5 VOL: 0
;PCODE: $000004E6 VOL: 0
;PCODE: $000004E7 VOL: 0
;PCODE: $000004E8 VOL: 0
;PCODE: $000004E9 VOL: 0
;PCODE: $000004EA VOL: 0
;PCODE: $000004EB VOL: 0
;PCODE: $000004EC VOL: 0
;PCODE: $000004ED VOL: 0
;PCODE: $000004EE VOL: 0
;PCODE: $000004EF VOL: 0
;PCODE: $000004F0 VOL: 0
;PCODE: $000004F1 VOL: 0
;PCODE: $000004F2 VOL: 0
;PCODE: $000004F3 VOL: 0
;PCODE: $000004F4 VOL: 0
;PCODE: $000004F5 VOL: 0
;PCODE: $000004F6 VOL: 0
;PCODE: $000004F7 VOL: 0
;PCODE: $000004F8 VOL: 0
;PCODE: $000004F9 VOL: 0
;PCODE: $000004FA VOL: 0
;PCODE: $000004FB VOL: 0
; 0000 01B0 
; 0000 01B1           else  {  motor(0+cmp,0+cmp,0+cmp,0+cmp);
;PCODE: $000004FC VOL: 0
;PCODE: $000004FD VOL: 0
;PCODE: $000004FE VOL: 0
;PCODE: $000004FF VOL: 0
;PCODE: $00000500 VOL: 0
;PCODE: $00000501 VOL: 0
;PCODE: $00000502 VOL: 0
;PCODE: $00000503 VOL: 0
;PCODE: $00000504 VOL: 0
;PCODE: $00000505 VOL: 0
;PCODE: $00000506 VOL: 0
;PCODE: $00000507 VOL: 0
;PCODE: $00000508 VOL: 0
;PCODE: $00000509 VOL: 0
;PCODE: $0000050A VOL: 0
; 0000 01B2           //t=0;
; 0000 01B3 //          f=0 ;
; 0000 01B4       b=0;
;PCODE: $0000050B VOL: 0
;PCODE: $0000050C VOL: 0
; 0000 01B5           }
;PCODE: $0000050D VOL: 0
;PCODE: $0000050E VOL: 0
;PCODE: $0000050F VOL: 0
; 0000 01B6           }
;PCODE: $00000510 VOL: 0
;PCODE: $00000511 VOL: 0
;      void follow ()
; 0000 01B8     {
;PCODE: $00000512 VOL: 0
;PCODE: $00000513 VOL: 0
; 0000 01B9 
; 0000 01BA           #asm("wdr") ;
;PCODE: $00000514 VOL: 0
	wdr
;PCODE: $00000515 VOL: 0
; 0000 01BB //         if(RL>0) RL=RL*1.5;
; 0000 01BC //          else if(RL<0) RL=RL*4;
; 0000 01BD 
; 0000 01BE 
; 0000 01BF           /////// 15-->13     2--->4      11--->9  10--->   8-->6
; 0000 01C0 
; 0000 01C1         if(min==0 ) {
;PCODE: $00000516 VOL: 0
;PCODE: $00000517 VOL: 0
;PCODE: $00000518 VOL: 0
; 0000 01C2 //        if(RL>=100 && h<50)  motor(255+cmp,-128+cmp,-255+cmp,128+cmp);
; 0000 01C3 //     else if(RL<=-100 && h<50) motor(255+cmp,-64+cmp,-255+cmp,64+cmp);
; 0000 01C4 
; 0000 01C5 
; 0000 01C6 
; 0000 01C7 
; 0000 01C8 
; 0000 01C9 
; 0000 01CA //        if(RL>=100)  motor(255+cmp,-128+cmp,-255+cmp,128+cmp);
; 0000 01CB //       else if(RL<=-100) motor(255+cmp,0+cmp,-255+cmp,0+cmp);
; 0000 01CC //        else
; 0000 01CD 
; 0000 01CE           if (h<150) {
;PCODE: $00000519 VOL: 0
;PCODE: $0000051A VOL: 0
;PCODE: $0000051B VOL: 0
; 0000 01CF                    if(RL>0 )  motor(-192,255,192,-255);
;PCODE: $0000051C VOL: 0
;PCODE: $0000051D VOL: 0
;PCODE: $0000051E VOL: 0
;PCODE: $0000051F VOL: 0
;PCODE: $00000520 VOL: 0
;PCODE: $00000521 VOL: 0
;PCODE: $00000522 VOL: 0
;PCODE: $00000523 VOL: 0
;PCODE: $00000524 VOL: 0
;PCODE: $00000525 VOL: 0
;PCODE: $00000526 VOL: 0
;PCODE: $00000527 VOL: 0
;PCODE: $00000528 VOL: 0
;PCODE: $00000529 VOL: 0
; 0000 01D0                    else if(RL<=0 ) motor(255,-128,-255,128);
;PCODE: $0000052A VOL: 0
;PCODE: $0000052B VOL: 0
;PCODE: $0000052C VOL: 0
;PCODE: $0000052D VOL: 0
;PCODE: $0000052E VOL: 0
;PCODE: $0000052F VOL: 0
;PCODE: $00000530 VOL: 0
;PCODE: $00000531 VOL: 0
;PCODE: $00000532 VOL: 0
;PCODE: $00000533 VOL: 0
;PCODE: $00000534 VOL: 0
;PCODE: $00000535 VOL: 0
;PCODE: $00000536 VOL: 0
;PCODE: $00000537 VOL: 0
;PCODE: $00000538 VOL: 0
; 0000 01D1 
; 0000 01D2             #asm("wdr") ;}
;PCODE: $00000539 VOL: 0
;PCODE: $0000053A VOL: 0
;PCODE: $0000053B VOL: 0
	wdr
;PCODE: $0000053C VOL: 0
; 0000 01D3 
; 0000 01D4             else
;PCODE: $0000053D VOL: 0
;PCODE: $0000053E VOL: 0
; 0000 01D5         motor(255+cmp,255+cmp,-255+cmp,-255+cmp);
;PCODE: $0000053F VOL: 0
;PCODE: $00000540 VOL: 0
;PCODE: $00000541 VOL: 0
;PCODE: $00000542 VOL: 0
;PCODE: $00000543 VOL: 0
;PCODE: $00000544 VOL: 0
;PCODE: $00000545 VOL: 0
;PCODE: $00000546 VOL: 0
;PCODE: $00000547 VOL: 0
;PCODE: $00000548 VOL: 0
;PCODE: $00000549 VOL: 0
; 0000 01D6 
; 0000 01D7           }
;PCODE: $0000054A VOL: 0
; 0000 01D8 
; 0000 01D9          else if(min==1)
;PCODE: $0000054B VOL: 0
;PCODE: $0000054C VOL: 0
;PCODE: $0000054D VOL: 0
;PCODE: $0000054E VOL: 0
;PCODE: $0000054F VOL: 0
; 0000 01DA          {
; 0000 01DB 
; 0000 01DC 
; 0000 01DD //         if(RL>=100)  motor(-128-RL+cmp,255+RL+cmp,128+RL+cmp,-255-RL+cmp);
; 0000 01DE //        else if(RL<=-100) motor(255-RL+cmp,128+RL+cmp,-255+RL+cmp,-128-RL+cmp);
; 0000 01DF //
; 0000 01E0 
; 0000 01E1 //     if(RL>=100 && h<50)  motor(255+cmp,-128+cmp,-255+cmp,128+cmp);
; 0000 01E2 //     else if(RL<=-100 && h<50) motor(255+cmp,-64+cmp,-255+cmp,64+cmp);
; 0000 01E3 //
; 0000 01E4 //        else
; 0000 01E5 
; 0000 01E6          if (h<150) {
;PCODE: $00000550 VOL: 0
;PCODE: $00000551 VOL: 0
;PCODE: $00000552 VOL: 0
; 0000 01E7                    if(RL>0 )  motor(-192,255,192,-255);
;PCODE: $00000553 VOL: 0
;PCODE: $00000554 VOL: 0
;PCODE: $00000555 VOL: 0
;PCODE: $00000556 VOL: 0
;PCODE: $00000557 VOL: 0
;PCODE: $00000558 VOL: 0
;PCODE: $00000559 VOL: 0
;PCODE: $0000055A VOL: 0
;PCODE: $0000055B VOL: 0
;PCODE: $0000055C VOL: 0
;PCODE: $0000055D VOL: 0
;PCODE: $0000055E VOL: 0
;PCODE: $0000055F VOL: 0
;PCODE: $00000560 VOL: 0
; 0000 01E8                    else if(RL<=0 ) motor(255,-128,-255,128);
;PCODE: $00000561 VOL: 0
;PCODE: $00000562 VOL: 0
;PCODE: $00000563 VOL: 0
;PCODE: $00000564 VOL: 0
;PCODE: $00000565 VOL: 0
;PCODE: $00000566 VOL: 0
;PCODE: $00000567 VOL: 0
;PCODE: $00000568 VOL: 0
;PCODE: $00000569 VOL: 0
;PCODE: $0000056A VOL: 0
;PCODE: $0000056B VOL: 0
;PCODE: $0000056C VOL: 0
;PCODE: $0000056D VOL: 0
;PCODE: $0000056E VOL: 0
;PCODE: $0000056F VOL: 0
; 0000 01E9 
; 0000 01EA             #asm("wdr") ;}
;PCODE: $00000570 VOL: 0
;PCODE: $00000571 VOL: 0
;PCODE: $00000572 VOL: 0
	wdr
;PCODE: $00000573 VOL: 0
; 0000 01EB 
; 0000 01EC             else
;PCODE: $00000574 VOL: 0
;PCODE: $00000575 VOL: 0
; 0000 01ED           motor(255+cmp,0+cmp,-255+cmp,0+cmp);
;PCODE: $00000576 VOL: 0
;PCODE: $00000577 VOL: 0
;PCODE: $00000578 VOL: 0
;PCODE: $00000579 VOL: 0
;PCODE: $0000057A VOL: 0
;PCODE: $0000057B VOL: 0
;PCODE: $0000057C VOL: 0
;PCODE: $0000057D VOL: 0
;PCODE: $0000057E VOL: 0
;PCODE: $0000057F VOL: 0
;PCODE: $00000580 VOL: 0
;PCODE: $00000581 VOL: 0
;PCODE: $00000582 VOL: 0
; 0000 01EE 
; 0000 01EF 
; 0000 01F0           }
;PCODE: $00000583 VOL: 0
; 0000 01F1 
; 0000 01F2 
; 0000 01F3            //motor(255,128,-255,-128);
; 0000 01F4          else if(min==2)     motor(128+cmp,-255+cmp,-128+cmp,255+cmp);     //motor(255,0,-255,0);
;PCODE: $00000584 VOL: 0
;PCODE: $00000585 VOL: 0
;PCODE: $00000586 VOL: 0
;PCODE: $00000587 VOL: 0
;PCODE: $00000588 VOL: 0
;PCODE: $00000589 VOL: 0
;PCODE: $0000058A VOL: 0
;PCODE: $0000058B VOL: 0
;PCODE: $0000058C VOL: 0
;PCODE: $0000058D VOL: 0
;PCODE: $0000058E VOL: 0
;PCODE: $0000058F VOL: 0
;PCODE: $00000590 VOL: 0
;PCODE: $00000591 VOL: 0
;PCODE: $00000592 VOL: 0
;PCODE: $00000593 VOL: 0
;PCODE: $00000594 VOL: 0
;PCODE: $00000595 VOL: 0
; 0000 01F5          else if(min==3)     motor(0+cmp,-255+cmp,0+cmp,255+cmp);    //motor(255,-128,-255,128);
;PCODE: $00000596 VOL: 0
;PCODE: $00000597 VOL: 0
;PCODE: $00000598 VOL: 0
;PCODE: $00000599 VOL: 0
;PCODE: $0000059A VOL: 0
;PCODE: $0000059B VOL: 0
;PCODE: $0000059C VOL: 0
;PCODE: $0000059D VOL: 0
;PCODE: $0000059E VOL: 0
;PCODE: $0000059F VOL: 0
;PCODE: $000005A0 VOL: 0
;PCODE: $000005A1 VOL: 0
;PCODE: $000005A2 VOL: 0
;PCODE: $000005A3 VOL: 0
;PCODE: $000005A4 VOL: 0
;PCODE: $000005A5 VOL: 0
;PCODE: $000005A6 VOL: 0
;PCODE: $000005A7 VOL: 0
; 0000 01F6          else if(min==4)     motor(0+cmp,-255+cmp,0+cmp,255+cmp);         //motor(255,-255,-255,255);
;PCODE: $000005A8 VOL: 0
;PCODE: $000005A9 VOL: 0
;PCODE: $000005AA VOL: 0
;PCODE: $000005AB VOL: 0
;PCODE: $000005AC VOL: 0
;PCODE: $000005AD VOL: 0
;PCODE: $000005AE VOL: 0
;PCODE: $000005AF VOL: 0
;PCODE: $000005B0 VOL: 0
;PCODE: $000005B1 VOL: 0
;PCODE: $000005B2 VOL: 0
;PCODE: $000005B3 VOL: 0
;PCODE: $000005B4 VOL: 0
;PCODE: $000005B5 VOL: 0
;PCODE: $000005B6 VOL: 0
;PCODE: $000005B7 VOL: 0
;PCODE: $000005B8 VOL: 0
;PCODE: $000005B9 VOL: 0
; 0000 01F7          else if(min==5)     motor(-128+cmp,-255+cmp,128+cmp,255+cmp );    //motor(128,-255,-128,255);
;PCODE: $000005BA VOL: 0
;PCODE: $000005BB VOL: 0
;PCODE: $000005BC VOL: 0
;PCODE: $000005BD VOL: 0
;PCODE: $000005BE VOL: 0
;PCODE: $000005BF VOL: 0
;PCODE: $000005C0 VOL: 0
;PCODE: $000005C1 VOL: 0
;PCODE: $000005C2 VOL: 0
;PCODE: $000005C3 VOL: 0
;PCODE: $000005C4 VOL: 0
;PCODE: $000005C5 VOL: 0
;PCODE: $000005C6 VOL: 0
;PCODE: $000005C7 VOL: 0
;PCODE: $000005C8 VOL: 0
;PCODE: $000005C9 VOL: 0
;PCODE: $000005CA VOL: 0
;PCODE: $000005CB VOL: 0
; 0000 01F8          else if(min==6)     motor(-255+cmp,-255+cmp,255+cmp,255+cmp);    //motor(0,-255,0,255);
;PCODE: $000005CC VOL: 0
;PCODE: $000005CD VOL: 0
;PCODE: $000005CE VOL: 0
;PCODE: $000005CF VOL: 0
;PCODE: $000005D0 VOL: 0
;PCODE: $000005D1 VOL: 0
;PCODE: $000005D2 VOL: 0
;PCODE: $000005D3 VOL: 0
;PCODE: $000005D4 VOL: 0
;PCODE: $000005D5 VOL: 0
;PCODE: $000005D6 VOL: 0
;PCODE: $000005D7 VOL: 0
;PCODE: $000005D8 VOL: 0
;PCODE: $000005D9 VOL: 0
;PCODE: $000005DA VOL: 0
;PCODE: $000005DB VOL: 0
; 0000 01F9          else if(min==7)     motor(-255+cmp,-128+cmp,255+cmp,128+cmp);    //motor(-128,-255,128,255);
;PCODE: $000005DC VOL: 0
;PCODE: $000005DD VOL: 0
;PCODE: $000005DE VOL: 0
;PCODE: $000005DF VOL: 0
;PCODE: $000005E0 VOL: 0
;PCODE: $000005E1 VOL: 0
;PCODE: $000005E2 VOL: 0
;PCODE: $000005E3 VOL: 0
;PCODE: $000005E4 VOL: 0
;PCODE: $000005E5 VOL: 0
;PCODE: $000005E6 VOL: 0
;PCODE: $000005E7 VOL: 0
;PCODE: $000005E8 VOL: 0
;PCODE: $000005E9 VOL: 0
;PCODE: $000005EA VOL: 0
;PCODE: $000005EB VOL: 0
;PCODE: $000005EC VOL: 0
;PCODE: $000005ED VOL: 0
; 0000 01FA          else if(min==8)     motor(128+cmp,-255+cmp,-128+cmp,255+cmp);    //motor(-255,-255,255,255);
;PCODE: $000005EE VOL: 0
;PCODE: $000005EF VOL: 0
;PCODE: $000005F0 VOL: 0
;PCODE: $000005F1 VOL: 0
;PCODE: $000005F2 VOL: 0
;PCODE: $000005F3 VOL: 0
;PCODE: $000005F4 VOL: 0
;PCODE: $000005F5 VOL: 0
;PCODE: $000005F6 VOL: 0
;PCODE: $000005F7 VOL: 0
;PCODE: $000005F8 VOL: 0
;PCODE: $000005F9 VOL: 0
;PCODE: $000005FA VOL: 0
;PCODE: $000005FB VOL: 0
;PCODE: $000005FC VOL: 0
;PCODE: $000005FD VOL: 0
;PCODE: $000005FE VOL: 0
;PCODE: $000005FF VOL: 0
; 0000 01FB          else if(min==9)     motor(-128+cmp,-255+cmp,128+cmp,255+cmp);        //motor(-255,-128,255,128);
;PCODE: $00000600 VOL: 0
;PCODE: $00000601 VOL: 0
;PCODE: $00000602 VOL: 0
;PCODE: $00000603 VOL: 0
;PCODE: $00000604 VOL: 0
;PCODE: $00000605 VOL: 0
;PCODE: $00000606 VOL: 0
;PCODE: $00000607 VOL: 0
;PCODE: $00000608 VOL: 0
;PCODE: $00000609 VOL: 0
;PCODE: $0000060A VOL: 0
;PCODE: $0000060B VOL: 0
;PCODE: $0000060C VOL: 0
;PCODE: $0000060D VOL: 0
;PCODE: $0000060E VOL: 0
;PCODE: $0000060F VOL: 0
;PCODE: $00000610 VOL: 0
;PCODE: $00000611 VOL: 0
; 0000 01FC          else if(min==10)    motor(0+cmp,-255+cmp,0+cmp,255+cmp);    //motor(-255,0,255,0);
;PCODE: $00000612 VOL: 0
;PCODE: $00000613 VOL: 0
;PCODE: $00000614 VOL: 0
;PCODE: $00000615 VOL: 0
;PCODE: $00000616 VOL: 0
;PCODE: $00000617 VOL: 0
;PCODE: $00000618 VOL: 0
;PCODE: $00000619 VOL: 0
;PCODE: $0000061A VOL: 0
;PCODE: $0000061B VOL: 0
;PCODE: $0000061C VOL: 0
;PCODE: $0000061D VOL: 0
;PCODE: $0000061E VOL: 0
;PCODE: $0000061F VOL: 0
;PCODE: $00000620 VOL: 0
;PCODE: $00000621 VOL: 0
;PCODE: $00000622 VOL: 0
;PCODE: $00000623 VOL: 0
; 0000 01FD          else if(min==11)    motor(-255+cmp,-128+cmp,255+cmp,128+cmp);    //motor(-255,128,255,-128);
;PCODE: $00000624 VOL: 0
;PCODE: $00000625 VOL: 0
;PCODE: $00000626 VOL: 0
;PCODE: $00000627 VOL: 0
;PCODE: $00000628 VOL: 0
;PCODE: $00000629 VOL: 0
;PCODE: $0000062A VOL: 0
;PCODE: $0000062B VOL: 0
;PCODE: $0000062C VOL: 0
;PCODE: $0000062D VOL: 0
;PCODE: $0000062E VOL: 0
;PCODE: $0000062F VOL: 0
;PCODE: $00000630 VOL: 0
;PCODE: $00000631 VOL: 0
;PCODE: $00000632 VOL: 0
;PCODE: $00000633 VOL: 0
;PCODE: $00000634 VOL: 0
;PCODE: $00000635 VOL: 0
; 0000 01FE          else if(min==12)    motor(-255+cmp,0+cmp,255+cmp,0+cmp);    //motor(-255,255,255,-255);
;PCODE: $00000636 VOL: 0
;PCODE: $00000637 VOL: 0
;PCODE: $00000638 VOL: 0
;PCODE: $00000639 VOL: 0
;PCODE: $0000063A VOL: 0
;PCODE: $0000063B VOL: 0
;PCODE: $0000063C VOL: 0
;PCODE: $0000063D VOL: 0
;PCODE: $0000063E VOL: 0
;PCODE: $0000063F VOL: 0
;PCODE: $00000640 VOL: 0
;PCODE: $00000641 VOL: 0
;PCODE: $00000642 VOL: 0
;PCODE: $00000643 VOL: 0
;PCODE: $00000644 VOL: 0
;PCODE: $00000645 VOL: 0
;PCODE: $00000646 VOL: 0
;PCODE: $00000647 VOL: 0
; 0000 01FF          else if(min==13)    motor(-128+cmp,255+cmp,128+cmp,-255+cmp);         //motor(-128,255,128,-255);
;PCODE: $00000648 VOL: 0
;PCODE: $00000649 VOL: 0
;PCODE: $0000064A VOL: 0
;PCODE: $0000064B VOL: 0
;PCODE: $0000064C VOL: 0
;PCODE: $0000064D VOL: 0
;PCODE: $0000064E VOL: 0
;PCODE: $0000064F VOL: 0
;PCODE: $00000650 VOL: 0
;PCODE: $00000651 VOL: 0
;PCODE: $00000652 VOL: 0
;PCODE: $00000653 VOL: 0
;PCODE: $00000654 VOL: 0
;PCODE: $00000655 VOL: 0
;PCODE: $00000656 VOL: 0
;PCODE: $00000657 VOL: 0
;PCODE: $00000658 VOL: 0
;PCODE: $00000659 VOL: 0
; 0000 0200          else if(min==14)    motor(-255+cmp,255+cmp,255+cmp,-255+cmp);    //motor(0,255,0,-255);
;PCODE: $0000065A VOL: 0
;PCODE: $0000065B VOL: 0
;PCODE: $0000065C VOL: 0
;PCODE: $0000065D VOL: 0
;PCODE: $0000065E VOL: 0
;PCODE: $0000065F VOL: 0
;PCODE: $00000660 VOL: 0
;PCODE: $00000661 VOL: 0
;PCODE: $00000662 VOL: 0
;PCODE: $00000663 VOL: 0
;PCODE: $00000664 VOL: 0
;PCODE: $00000665 VOL: 0
;PCODE: $00000666 VOL: 0
;PCODE: $00000667 VOL: 0
;PCODE: $00000668 VOL: 0
;PCODE: $00000669 VOL: 0
;PCODE: $0000066A VOL: 0
;PCODE: $0000066B VOL: 0
; 0000 0201 
; 0000 0202 
; 0000 0203          else if(min==15)
;PCODE: $0000066C VOL: 0
;PCODE: $0000066D VOL: 0
;PCODE: $0000066E VOL: 0
;PCODE: $0000066F VOL: 0
;PCODE: $00000670 VOL: 0
; 0000 0204          {
; 0000 0205 
; 0000 0206 //
; 0000 0207 //        if(RL>=100 && h<60)  motor(-128+cmp,255+cmp,128+cmp,-255+cmp);
; 0000 0208 //     else if(RL<=-100 && h<60) motor(255+cmp,-128+cmp,-255+cmp,128+cmp);
; 0000 0209 //
; 0000 020A //
; 0000 020B //
; 0000 020C //
; 0000 020D //        else
; 0000 020E                  if (h<150) {
;PCODE: $00000671 VOL: 0
;PCODE: $00000672 VOL: 0
;PCODE: $00000673 VOL: 0
; 0000 020F                    if(RL>0 )  motor(-192,255,192,-255);
;PCODE: $00000674 VOL: 0
;PCODE: $00000675 VOL: 0
;PCODE: $00000676 VOL: 0
;PCODE: $00000677 VOL: 0
;PCODE: $00000678 VOL: 0
;PCODE: $00000679 VOL: 0
;PCODE: $0000067A VOL: 0
;PCODE: $0000067B VOL: 0
;PCODE: $0000067C VOL: 0
;PCODE: $0000067D VOL: 0
;PCODE: $0000067E VOL: 0
;PCODE: $0000067F VOL: 0
;PCODE: $00000680 VOL: 0
;PCODE: $00000681 VOL: 0
; 0000 0210                    else if(RL<=0 ) motor(255,-128,-255,128);
;PCODE: $00000682 VOL: 0
;PCODE: $00000683 VOL: 0
;PCODE: $00000684 VOL: 0
;PCODE: $00000685 VOL: 0
;PCODE: $00000686 VOL: 0
;PCODE: $00000687 VOL: 0
;PCODE: $00000688 VOL: 0
;PCODE: $00000689 VOL: 0
;PCODE: $0000068A VOL: 0
;PCODE: $0000068B VOL: 0
;PCODE: $0000068C VOL: 0
;PCODE: $0000068D VOL: 0
;PCODE: $0000068E VOL: 0
;PCODE: $0000068F VOL: 0
;PCODE: $00000690 VOL: 0
; 0000 0211 
; 0000 0212             #asm("wdr") ;}
;PCODE: $00000691 VOL: 0
;PCODE: $00000692 VOL: 0
;PCODE: $00000693 VOL: 0
	wdr
;PCODE: $00000694 VOL: 0
; 0000 0213          motor(-128+cmp,255+cmp,128+cmp,-255+cmp); //motor(128,255,-128,-255);
;PCODE: $00000695 VOL: 0
;PCODE: $00000696 VOL: 0
;PCODE: $00000697 VOL: 0
;PCODE: $00000698 VOL: 0
;PCODE: $00000699 VOL: 0
;PCODE: $0000069A VOL: 0
;PCODE: $0000069B VOL: 0
;PCODE: $0000069C VOL: 0
;PCODE: $0000069D VOL: 0
;PCODE: $0000069E VOL: 0
;PCODE: $0000069F VOL: 0
;PCODE: $000006A0 VOL: 0
;PCODE: $000006A1 VOL: 0
;PCODE: $000006A2 VOL: 0
; 0000 0214 
; 0000 0215 
; 0000 0216 
; 0000 0217          #asm("wdr") ;
;PCODE: $000006A3 VOL: 0
	wdr
;PCODE: $000006A4 VOL: 0
; 0000 0218           }
; 0000 0219           }
;PCODE: $000006A5 VOL: 0
;PCODE: $000006A6 VOL: 0
;PCODE: $000006A7 VOL: 0
;PCODE: $000006A8 VOL: 0
;PCODE: $000006A9 VOL: 0
;PCODE: $000006AA VOL: 0
;PCODE: $000006AB VOL: 0
;PCODE: $000006AC VOL: 0
;PCODE: $000006AD VOL: 0
;PCODE: $000006AE VOL: 0
;PCODE: $000006AF VOL: 0
;PCODE: $000006B0 VOL: 0
;PCODE: $000006B1 VOL: 0
;PCODE: $000006B2 VOL: 0
;PCODE: $000006B3 VOL: 0
;PCODE: $000006B4 VOL: 0
;PCODE: $000006B5 VOL: 0
;PCODE: $000006B6 VOL: 0
;
;
;       void taghib(){
; 0000 021C void taghib(){
;PCODE: $000006B7 VOL: 0
;PCODE: $000006B8 VOL: 0
; 0000 021D 
; 0000 021E         #asm("wdr") ;
;PCODE: $000006B9 VOL: 0
	wdr
;PCODE: $000006BA VOL: 0
; 0000 021F           if(min==0)       motor(255,255,-255,-255);
;PCODE: $000006BB VOL: 0
;PCODE: $000006BC VOL: 0
;PCODE: $000006BD VOL: 0
;PCODE: $000006BE VOL: 0
;PCODE: $000006BF VOL: 0
;PCODE: $000006C0 VOL: 0
;PCODE: $000006C1 VOL: 0
;PCODE: $000006C2 VOL: 0
;PCODE: $000006C3 VOL: 0
;PCODE: $000006C4 VOL: 0
;PCODE: $000006C5 VOL: 0
;PCODE: $000006C6 VOL: 0
;PCODE: $000006C7 VOL: 0
;PCODE: $000006C8 VOL: 0
; 0000 0220          else if(min==1)   motor(255,128,-255,-128);
;PCODE: $000006C9 VOL: 0
;PCODE: $000006CA VOL: 0
;PCODE: $000006CB VOL: 0
;PCODE: $000006CC VOL: 0
;PCODE: $000006CD VOL: 0
;PCODE: $000006CE VOL: 0
;PCODE: $000006CF VOL: 0
;PCODE: $000006D0 VOL: 0
;PCODE: $000006D1 VOL: 0
;PCODE: $000006D2 VOL: 0
;PCODE: $000006D3 VOL: 0
;PCODE: $000006D4 VOL: 0
;PCODE: $000006D5 VOL: 0
;PCODE: $000006D6 VOL: 0
;PCODE: $000006D7 VOL: 0
; 0000 0221          else if(min==2)     motor(255,0,-255,0);
;PCODE: $000006D8 VOL: 0
;PCODE: $000006D9 VOL: 0
;PCODE: $000006DA VOL: 0
;PCODE: $000006DB VOL: 0
;PCODE: $000006DC VOL: 0
;PCODE: $000006DD VOL: 0
;PCODE: $000006DE VOL: 0
;PCODE: $000006DF VOL: 0
;PCODE: $000006E0 VOL: 0
;PCODE: $000006E1 VOL: 0
;PCODE: $000006E2 VOL: 0
;PCODE: $000006E3 VOL: 0
;PCODE: $000006E4 VOL: 0
;PCODE: $000006E5 VOL: 0
;PCODE: $000006E6 VOL: 0
; 0000 0222          else if(min==3)     motor(255,-128,-255,128);
;PCODE: $000006E7 VOL: 0
;PCODE: $000006E8 VOL: 0
;PCODE: $000006E9 VOL: 0
;PCODE: $000006EA VOL: 0
;PCODE: $000006EB VOL: 0
;PCODE: $000006EC VOL: 0
;PCODE: $000006ED VOL: 0
;PCODE: $000006EE VOL: 0
;PCODE: $000006EF VOL: 0
;PCODE: $000006F0 VOL: 0
;PCODE: $000006F1 VOL: 0
;PCODE: $000006F2 VOL: 0
;PCODE: $000006F3 VOL: 0
;PCODE: $000006F4 VOL: 0
;PCODE: $000006F5 VOL: 0
; 0000 0223          else if(min==4)    motor(255,-255,-255,255);
;PCODE: $000006F6 VOL: 0
;PCODE: $000006F7 VOL: 0
;PCODE: $000006F8 VOL: 0
;PCODE: $000006F9 VOL: 0
;PCODE: $000006FA VOL: 0
;PCODE: $000006FB VOL: 0
;PCODE: $000006FC VOL: 0
;PCODE: $000006FD VOL: 0
;PCODE: $000006FE VOL: 0
;PCODE: $000006FF VOL: 0
;PCODE: $00000700 VOL: 0
;PCODE: $00000701 VOL: 0
;PCODE: $00000702 VOL: 0
;PCODE: $00000703 VOL: 0
;PCODE: $00000704 VOL: 0
;PCODE: $00000705 VOL: 0
; 0000 0224          else if(min==5)    motor(128,-255,-128,255);
;PCODE: $00000706 VOL: 0
;PCODE: $00000707 VOL: 0
;PCODE: $00000708 VOL: 0
;PCODE: $00000709 VOL: 0
;PCODE: $0000070A VOL: 0
;PCODE: $0000070B VOL: 0
;PCODE: $0000070C VOL: 0
;PCODE: $0000070D VOL: 0
;PCODE: $0000070E VOL: 0
;PCODE: $0000070F VOL: 0
;PCODE: $00000710 VOL: 0
;PCODE: $00000711 VOL: 0
;PCODE: $00000712 VOL: 0
;PCODE: $00000713 VOL: 0
;PCODE: $00000714 VOL: 0
; 0000 0225          else if(min==6)     motor(0,-255,0,255);
;PCODE: $00000715 VOL: 0
;PCODE: $00000716 VOL: 0
;PCODE: $00000717 VOL: 0
;PCODE: $00000718 VOL: 0
;PCODE: $00000719 VOL: 0
;PCODE: $0000071A VOL: 0
;PCODE: $0000071B VOL: 0
;PCODE: $0000071C VOL: 0
;PCODE: $0000071D VOL: 0
;PCODE: $0000071E VOL: 0
;PCODE: $0000071F VOL: 0
;PCODE: $00000720 VOL: 0
;PCODE: $00000721 VOL: 0
;PCODE: $00000722 VOL: 0
;PCODE: $00000723 VOL: 0
; 0000 0226          else if(min==7)     motor(-128,-255,128,255);
;PCODE: $00000724 VOL: 0
;PCODE: $00000725 VOL: 0
;PCODE: $00000726 VOL: 0
;PCODE: $00000727 VOL: 0
;PCODE: $00000728 VOL: 0
;PCODE: $00000729 VOL: 0
;PCODE: $0000072A VOL: 0
;PCODE: $0000072B VOL: 0
;PCODE: $0000072C VOL: 0
;PCODE: $0000072D VOL: 0
;PCODE: $0000072E VOL: 0
;PCODE: $0000072F VOL: 0
;PCODE: $00000730 VOL: 0
;PCODE: $00000731 VOL: 0
;PCODE: $00000732 VOL: 0
; 0000 0227          else if(min==8)    motor(-255,-255,255,255);
;PCODE: $00000733 VOL: 0
;PCODE: $00000734 VOL: 0
;PCODE: $00000735 VOL: 0
;PCODE: $00000736 VOL: 0
;PCODE: $00000737 VOL: 0
;PCODE: $00000738 VOL: 0
;PCODE: $00000739 VOL: 0
;PCODE: $0000073A VOL: 0
;PCODE: $0000073B VOL: 0
;PCODE: $0000073C VOL: 0
;PCODE: $0000073D VOL: 0
;PCODE: $0000073E VOL: 0
;PCODE: $0000073F VOL: 0
;PCODE: $00000740 VOL: 0
;PCODE: $00000741 VOL: 0
;PCODE: $00000742 VOL: 0
; 0000 0228          else if(min==9)     motor(-255,-128,255,128);
;PCODE: $00000743 VOL: 0
;PCODE: $00000744 VOL: 0
;PCODE: $00000745 VOL: 0
;PCODE: $00000746 VOL: 0
;PCODE: $00000747 VOL: 0
;PCODE: $00000748 VOL: 0
;PCODE: $00000749 VOL: 0
;PCODE: $0000074A VOL: 0
;PCODE: $0000074B VOL: 0
;PCODE: $0000074C VOL: 0
;PCODE: $0000074D VOL: 0
;PCODE: $0000074E VOL: 0
;PCODE: $0000074F VOL: 0
;PCODE: $00000750 VOL: 0
;PCODE: $00000751 VOL: 0
; 0000 0229          else if(min==10)   motor(-255,0,255,0);
;PCODE: $00000752 VOL: 0
;PCODE: $00000753 VOL: 0
;PCODE: $00000754 VOL: 0
;PCODE: $00000755 VOL: 0
;PCODE: $00000756 VOL: 0
;PCODE: $00000757 VOL: 0
;PCODE: $00000758 VOL: 0
;PCODE: $00000759 VOL: 0
;PCODE: $0000075A VOL: 0
;PCODE: $0000075B VOL: 0
;PCODE: $0000075C VOL: 0
;PCODE: $0000075D VOL: 0
;PCODE: $0000075E VOL: 0
;PCODE: $0000075F VOL: 0
;PCODE: $00000760 VOL: 0
; 0000 022A          else if(min==11)    motor(-255,128,255,-128);
;PCODE: $00000761 VOL: 0
;PCODE: $00000762 VOL: 0
;PCODE: $00000763 VOL: 0
;PCODE: $00000764 VOL: 0
;PCODE: $00000765 VOL: 0
;PCODE: $00000766 VOL: 0
;PCODE: $00000767 VOL: 0
;PCODE: $00000768 VOL: 0
;PCODE: $00000769 VOL: 0
;PCODE: $0000076A VOL: 0
;PCODE: $0000076B VOL: 0
;PCODE: $0000076C VOL: 0
;PCODE: $0000076D VOL: 0
;PCODE: $0000076E VOL: 0
;PCODE: $0000076F VOL: 0
; 0000 022B          else if(min==12)   motor(-255,255,255,-255);
;PCODE: $00000770 VOL: 0
;PCODE: $00000771 VOL: 0
;PCODE: $00000772 VOL: 0
;PCODE: $00000773 VOL: 0
;PCODE: $00000774 VOL: 0
;PCODE: $00000775 VOL: 0
;PCODE: $00000776 VOL: 0
;PCODE: $00000777 VOL: 0
;PCODE: $00000778 VOL: 0
;PCODE: $00000779 VOL: 0
;PCODE: $0000077A VOL: 0
;PCODE: $0000077B VOL: 0
;PCODE: $0000077C VOL: 0
;PCODE: $0000077D VOL: 0
;PCODE: $0000077E VOL: 0
;PCODE: $0000077F VOL: 0
; 0000 022C          else if(min==13)   motor(-128,255,128,-255);
;PCODE: $00000780 VOL: 0
;PCODE: $00000781 VOL: 0
;PCODE: $00000782 VOL: 0
;PCODE: $00000783 VOL: 0
;PCODE: $00000784 VOL: 0
;PCODE: $00000785 VOL: 0
;PCODE: $00000786 VOL: 0
;PCODE: $00000787 VOL: 0
;PCODE: $00000788 VOL: 0
;PCODE: $00000789 VOL: 0
;PCODE: $0000078A VOL: 0
;PCODE: $0000078B VOL: 0
;PCODE: $0000078C VOL: 0
;PCODE: $0000078D VOL: 0
;PCODE: $0000078E VOL: 0
; 0000 022D          else if(min==14)   motor(0,255,0,-255);
;PCODE: $0000078F VOL: 0
;PCODE: $00000790 VOL: 0
;PCODE: $00000791 VOL: 0
;PCODE: $00000792 VOL: 0
;PCODE: $00000793 VOL: 0
;PCODE: $00000794 VOL: 0
;PCODE: $00000795 VOL: 0
;PCODE: $00000796 VOL: 0
;PCODE: $00000797 VOL: 0
;PCODE: $00000798 VOL: 0
;PCODE: $00000799 VOL: 0
;PCODE: $0000079A VOL: 0
;PCODE: $0000079B VOL: 0
;PCODE: $0000079C VOL: 0
;PCODE: $0000079D VOL: 0
; 0000 022E          else if(min==15)  motor(128,255,-128,-255);
;PCODE: $0000079E VOL: 0
;PCODE: $0000079F VOL: 0
;PCODE: $000007A0 VOL: 0
;PCODE: $000007A1 VOL: 0
;PCODE: $000007A2 VOL: 0
;PCODE: $000007A3 VOL: 0
;PCODE: $000007A4 VOL: 0
;PCODE: $000007A5 VOL: 0
;PCODE: $000007A6 VOL: 0
;PCODE: $000007A7 VOL: 0
;PCODE: $000007A8 VOL: 0
;PCODE: $000007A9 VOL: 0
;PCODE: $000007AA VOL: 0
;PCODE: $000007AB VOL: 0
;PCODE: $000007AC VOL: 0
; 0000 022F 
; 0000 0230          #asm("wdr") ;
;PCODE: $000007AD VOL: 0
;PCODE: $000007AE VOL: 0
;PCODE: $000007AF VOL: 0
;PCODE: $000007B0 VOL: 0
;PCODE: $000007B1 VOL: 0
;PCODE: $000007B2 VOL: 0
;PCODE: $000007B3 VOL: 0
;PCODE: $000007B4 VOL: 0
;PCODE: $000007B5 VOL: 0
;PCODE: $000007B6 VOL: 0
;PCODE: $000007B7 VOL: 0
;PCODE: $000007B8 VOL: 0
;PCODE: $000007B9 VOL: 0
;PCODE: $000007BA VOL: 0
;PCODE: $000007BB VOL: 0
;PCODE: $000007BC VOL: 0
;PCODE: $000007BD VOL: 0
	wdr
;PCODE: $000007BE VOL: 0
; 0000 0231 
; 0000 0232        }
;PCODE: $000007BF VOL: 0
;PCODE: $000007C0 VOL: 0
;        int outr=0,outl=0;
;        void out () {
; 0000 0234 void out () {
;PCODE: $000007C1 VOL: 0
;PCODE: $000007C2 VOL: 0
; 0000 0235 //               sensor();
; 0000 0236 //
; 0000 0237 //                if(adc[mini]<350 &&(mini==3 || mini==2 || mini==1 || mini==0)){
; 0000 0238 //          motor(0+cmp,0+cmp,0+cmp,0+cmp);
; 0000 0239 //
; 0000 023A //          if(adc[mini-1]<300  || adc[){
; 0000 023B //          motor(-255+cmp,255+cmp,255+cmp,-255+cmp);
; 0000 023C //          delay_ms(20);
; 0000 023D //          }
; 0000 023E //          }
; 0000 023F //          if(adc[mini]<350 &&(mini==12 || mini==13 || mini==14 || mini==15)){
; 0000 0240 //          motor(0+cmp,0+cmp,0+cmp,0+cmp);
; 0000 0241 //
; 0000 0242 //          if(adc[mini-1]<300 ){
; 0000 0243 //          motor(255+cmp,-255+cmp,-255+cmp,255+cmp);
; 0000 0244 //          delay_ms(20);
; 0000 0245 //          }
; 0000 0246 //          }
; 0000 0247 // if (sum>550 && SR>310 && SL>310 )
; 0000 0248 //t=2;
; 0000 0249 //multi
; 0000 024A //else if (sum>550 && (SR>310 || SL>310) && SB>250){
; 0000 024B //putchar1(3);
; 0000 024C //if (min>=0 && min<9 && t==3) motor (255+cmp,0+cmp,-255+cmp,0+cmp);  ////harekate 2
; 0000 024D //else if (min>8 && min<16 && t==3)    motor(0+cmp,255+cmp,0+cmp,-255+cmp);  /////harekate 14
; 0000 024E //}
; 0000 024F 
; 0000 0250 //
; 0000 0251 //     else  if (sum>550 && (SR>310||SL>310) && SB<250 ) {
; 0000 0252 //
; 0000 0253 //      putchar1(2);
; 0000 0254 //
; 0000 0255 //     }
; 0000 0256       if ((/*sum<550&&*/  SR>250 && SL<100) && ((min>0 && min<8 ) || min==0)  ) {
;PCODE: $000007C3 VOL: 0
;PCODE: $000007C4 VOL: 0
;PCODE: $000007C5 VOL: 0
;PCODE: $000007C6 VOL: 0
;PCODE: $000007C7 VOL: 0
;PCODE: $000007C8 VOL: 0
;PCODE: $000007C9 VOL: 0
;PCODE: $000007CA VOL: 0
;PCODE: $000007CB VOL: 0
;PCODE: $000007CC VOL: 0
;PCODE: $000007CD VOL: 0
;PCODE: $000007CE VOL: 0
;PCODE: $000007CF VOL: 0
;PCODE: $000007D0 VOL: 0
;PCODE: $000007D1 VOL: 0
;PCODE: $000007D2 VOL: 0
;PCODE: $000007D3 VOL: 0
;PCODE: $000007D4 VOL: 0
;PCODE: $000007D5 VOL: 0
;PCODE: $000007D6 VOL: 0
;PCODE: $000007D7 VOL: 0
;PCODE: $000007D8 VOL: 0
;PCODE: $000007D9 VOL: 0
;PCODE: $000007DA VOL: 0
;PCODE: $000007DB VOL: 0
;PCODE: $000007DC VOL: 0
;PCODE: $000007DD VOL: 0
; 0000 0257    #asm ("wdr");
;PCODE: $000007DE VOL: 0
	wdr
;PCODE: $000007DF VOL: 0
; 0000 0258 //  motor(-255+cmp,255+cmp,255+cmp,-255+cmp);
; 0000 0259 //  delay_ms(30);
; 0000 025A //  sr=1;
; 0000 025B //  while (min>=0 && min<9){ motor(0+cmp,0+cmp,0+cmp,0+cmp);
; 0000 025C //  sensor();
; 0000 025D //   compass();
; 0000 025E //  #asm ("wdr");
; 0000 025F //   }
; 0000 0260    outr=1;
;PCODE: $000007E0 VOL: 0
;PCODE: $000007E1 VOL: 0
; 0000 0261    }
; 0000 0262    ///////////
; 0000 0263      else if ((/*sum<550 &&*/ SL>300 && SR<110 )&& ((min>7 && min<16 ) || min==0) ) {
;PCODE: $000007E2 VOL: 0
;PCODE: $000007E3 VOL: 0
;PCODE: $000007E4 VOL: 0
;PCODE: $000007E5 VOL: 0
;PCODE: $000007E6 VOL: 0
;PCODE: $000007E7 VOL: 0
;PCODE: $000007E8 VOL: 0
;PCODE: $000007E9 VOL: 0
;PCODE: $000007EA VOL: 0
;PCODE: $000007EB VOL: 0
;PCODE: $000007EC VOL: 0
;PCODE: $000007ED VOL: 0
;PCODE: $000007EE VOL: 0
;PCODE: $000007EF VOL: 0
;PCODE: $000007F0 VOL: 0
;PCODE: $000007F1 VOL: 0
;PCODE: $000007F2 VOL: 0
;PCODE: $000007F3 VOL: 0
;PCODE: $000007F4 VOL: 0
;PCODE: $000007F5 VOL: 0
;PCODE: $000007F6 VOL: 0
;PCODE: $000007F7 VOL: 0
;PCODE: $000007F8 VOL: 0
;PCODE: $000007F9 VOL: 0
;PCODE: $000007FA VOL: 0
;PCODE: $000007FB VOL: 0
;PCODE: $000007FC VOL: 0
;PCODE: $000007FD VOL: 0
;PCODE: $000007FE VOL: 0
; 0000 0264    #asm ("wdr");
;PCODE: $000007FF VOL: 0
	wdr
;PCODE: $00000800 VOL: 0
; 0000 0265 //  motor(255+cmp,-255+cmp,-255+cmp,255+cmp);
; 0000 0266 //  delay_ms(30);
; 0000 0267 //  sr=1;
; 0000 0268 //  while (min>7 && min<16){ motor(0+cmp,0+cmp,0+cmp,0+cmp);
; 0000 0269 //  sensor();
; 0000 026A //   compass();
; 0000 026B //  #asm ("wdr");
; 0000 026C outl=1;
;PCODE: $00000801 VOL: 0
;PCODE: $00000802 VOL: 0
; 0000 026D    }
; 0000 026E //   else {
; 0000 026F // outl=0;
; 0000 0270 // outr=0;
; 0000 0271 //   }
; 0000 0272    }
;PCODE: $00000803 VOL: 0
;PCODE: $00000804 VOL: 0
;PCODE: $00000805 VOL: 0
;PCODE: $00000806 VOL: 0
;
;
;void bt () {
; 0000 0275 void bt () {
;PCODE: $00000807 VOL: 0
;PCODE: $00000808 VOL: 0
; 0000 0276        if (outr==1 || outl==1 ||  (adc[min]<60  && h<60  )|| r==1 || l==1   ) {
;PCODE: $00000809 VOL: 0
;PCODE: $0000080A VOL: 0
;PCODE: $0000080B VOL: 0
;PCODE: $0000080C VOL: 0
;PCODE: $0000080D VOL: 0
;PCODE: $0000080E VOL: 0
;PCODE: $0000080F VOL: 0
;PCODE: $00000810 VOL: 0
;PCODE: $00000811 VOL: 0
;PCODE: $00000812 VOL: 0
;PCODE: $00000813 VOL: 0
;PCODE: $00000814 VOL: 0
;PCODE: $00000815 VOL: 0
;PCODE: $00000816 VOL: 0
;PCODE: $00000817 VOL: 0
;PCODE: $00000818 VOL: 0
;PCODE: $00000819 VOL: 0
;PCODE: $0000081A VOL: 0
;PCODE: $0000081B VOL: 0
;PCODE: $0000081C VOL: 0
;PCODE: $0000081D VOL: 0
;PCODE: $0000081E VOL: 0
;PCODE: $0000081F VOL: 0
;PCODE: $00000820 VOL: 0
;PCODE: $00000821 VOL: 0
;PCODE: $00000822 VOL: 0
; 0000 0277        putchar1('2');
;PCODE: $00000823 VOL: 0
;PCODE: $00000824 VOL: 0
;PCODE: $00000825 VOL: 0
; 0000 0278         #asm("wdr") ;
;PCODE: $00000826 VOL: 0
	wdr
;PCODE: $00000827 VOL: 0
; 0000 0279        }
; 0000 027A        else {
;PCODE: $00000828 VOL: 0
;PCODE: $00000829 VOL: 0
; 0000 027B         putchar1('1');
;PCODE: $0000082A VOL: 0
;PCODE: $0000082B VOL: 0
;PCODE: $0000082C VOL: 0
; 0000 027C          #asm("wdr") ;
;PCODE: $0000082D VOL: 0
	wdr
;PCODE: $0000082E VOL: 0
; 0000 027D        }
;PCODE: $0000082F VOL: 0
; 0000 027E        }
;PCODE: $00000830 VOL: 0
;PCODE: $00000831 VOL: 0
;
;void main(void)
; 0000 0281 {
;PCODE: $00000832 VOL: 0
; 0000 0282 // Declare your local variables here
; 0000 0283 
; 0000 0284 // Input/Output Ports initialization
; 0000 0285 // Port A initialization
; 0000 0286 // Func7=In Func6=Out Func5=Out Func4=In Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 0287 // State7=T State6=0 State5=0 State4=T State3=0 State2=0 State1=0 State0=0
; 0000 0288 PORTA=0x00;
;PCODE: $00000833 VOL: 0
;PCODE: $00000834 VOL: 0
; 0000 0289 DDRA=0x6F;
;PCODE: $00000835 VOL: 0
;PCODE: $00000836 VOL: 0
; 0000 028A 
; 0000 028B // Port B initialization
; 0000 028C // Func7=Out Func6=Out Func5=Out Func4=Out Func3=In Func2=In Func1=In Func0=In
; 0000 028D // State7=0 State6=0 State5=0 State4=0 State3=T State2=T State1=T State0=T
; 0000 028E PORTB=0x00;
;PCODE: $00000837 VOL: 0
;PCODE: $00000838 VOL: 0
; 0000 028F DDRB=0xF0;
;PCODE: $00000839 VOL: 0
;PCODE: $0000083A VOL: 0
; 0000 0290 
; 0000 0291 // Port C initialization
; 0000 0292 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0293 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0294 PORTC=0x00;
;PCODE: $0000083B VOL: 0
;PCODE: $0000083C VOL: 0
; 0000 0295 DDRC=0x00;
;PCODE: $0000083D VOL: 0
;PCODE: $0000083E VOL: 0
; 0000 0296 
; 0000 0297 // Port D initialization
; 0000 0298 // Func7=Out Func6=Out Func5=Out Func4=Out Func3=In Func2=In Func1=In Func0=In
; 0000 0299 // State7=0 State6=0 State5=0 State4=0 State3=T State2=T State1=T State0=T
; 0000 029A PORTD=0x00;
;PCODE: $0000083F VOL: 0
;PCODE: $00000840 VOL: 0
; 0000 029B DDRD=0xF0;
;PCODE: $00000841 VOL: 0
;PCODE: $00000842 VOL: 0
; 0000 029C 
; 0000 029D // Port E initialization
; 0000 029E // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 029F // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 02A0 PORTE=0x00;
;PCODE: $00000843 VOL: 0
;PCODE: $00000844 VOL: 0
; 0000 02A1 DDRE=0x00;
;PCODE: $00000845 VOL: 0
;PCODE: $00000846 VOL: 0
; 0000 02A2 
; 0000 02A3 // Port F initialization
; 0000 02A4 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 02A5 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 02A6 PORTF=0x00;
;PCODE: $00000847 VOL: 0
;PCODE: $00000848 VOL: 0
; 0000 02A7 DDRF=0x00;
;PCODE: $00000849 VOL: 0
;PCODE: $0000084A VOL: 0
; 0000 02A8 
; 0000 02A9 // Port G initialization
; 0000 02AA // Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 02AB // State4=T State3=T State2=T State1=T State0=T
; 0000 02AC PORTG=0x00;
;PCODE: $0000084B VOL: 0
;PCODE: $0000084C VOL: 0
; 0000 02AD DDRG=0x00;
;PCODE: $0000084D VOL: 0
;PCODE: $0000084E VOL: 0
; 0000 02AE 
; 0000 02AF // Timer/Counter 0 initialization
; 0000 02B0 // Clock source: System Clock
; 0000 02B1 // Clock value: 172.800 kHz
; 0000 02B2 // Mode: Fast PWM top=FFh
; 0000 02B3 // OC0 output: Non-Inverted PWM
; 0000 02B4 ASSR=0x00;
;PCODE: $0000084F VOL: 0
;PCODE: $00000850 VOL: 0
; 0000 02B5 TCCR0=0x6C;
;PCODE: $00000851 VOL: 0
;PCODE: $00000852 VOL: 0
; 0000 02B6 TCNT0=0x00;
;PCODE: $00000853 VOL: 0
;PCODE: $00000854 VOL: 0
; 0000 02B7 OCR0=0x00;
;PCODE: $00000855 VOL: 0
;PCODE: $00000856 VOL: 0
; 0000 02B8 
; 0000 02B9 // Timer/Counter 1 initialization
; 0000 02BA // Clock source: System Clock
; 0000 02BB // Clock value: 172.800 kHz
; 0000 02BC // Mode: Fast PWM top=00FFh
; 0000 02BD // OC1A output: Non-Inv.
; 0000 02BE // OC1B output: Non-Inv.
; 0000 02BF // OC1C output: Discon.
; 0000 02C0 // Noise Canceler: Off
; 0000 02C1 // Input Capture on Falling Edge
; 0000 02C2 // Timer 1 Overflow Interrupt: Off
; 0000 02C3 // Input Capture Interrupt: Off
; 0000 02C4 // Compare A Match Interrupt: Off
; 0000 02C5 // Compare B Match Interrupt: Off
; 0000 02C6 // Compare C Match Interrupt: Off
; 0000 02C7 TCCR1A=0xA1;
;PCODE: $00000857 VOL: 0
;PCODE: $00000858 VOL: 0
; 0000 02C8 TCCR1B=0x0B;
;PCODE: $00000859 VOL: 0
;PCODE: $0000085A VOL: 0
; 0000 02C9 TCNT1H=0x00;
;PCODE: $0000085B VOL: 0
;PCODE: $0000085C VOL: 0
; 0000 02CA TCNT1L=0x00;
;PCODE: $0000085D VOL: 0
;PCODE: $0000085E VOL: 0
; 0000 02CB ICR1H=0x00;
;PCODE: $0000085F VOL: 0
;PCODE: $00000860 VOL: 0
; 0000 02CC ICR1L=0x00;
;PCODE: $00000861 VOL: 0
;PCODE: $00000862 VOL: 0
; 0000 02CD OCR1AH=0x00;
;PCODE: $00000863 VOL: 0
;PCODE: $00000864 VOL: 0
; 0000 02CE OCR1AL=0x00;
;PCODE: $00000865 VOL: 0
;PCODE: $00000866 VOL: 0
; 0000 02CF OCR1BH=0x00;
;PCODE: $00000867 VOL: 0
;PCODE: $00000868 VOL: 0
; 0000 02D0 OCR1BL=0x00;
;PCODE: $00000869 VOL: 0
;PCODE: $0000086A VOL: 0
; 0000 02D1 OCR1CH=0x00;
;PCODE: $0000086B VOL: 0
;PCODE: $0000086C VOL: 0
; 0000 02D2 OCR1CL=0x00;
;PCODE: $0000086D VOL: 0
;PCODE: $0000086E VOL: 0
; 0000 02D3 
; 0000 02D4 // Timer/Counter 2 initialization
; 0000 02D5 // Clock source: System Clock
; 0000 02D6 // Clock value: 172.800 kHz
; 0000 02D7 // Mode: Fast PWM top=FFh
; 0000 02D8 // OC2 output: Non-Inverted PWM
; 0000 02D9 TCCR2=0x6B;
;PCODE: $0000086F VOL: 0
;PCODE: $00000870 VOL: 0
; 0000 02DA TCNT2=0x00;
;PCODE: $00000871 VOL: 0
;PCODE: $00000872 VOL: 0
; 0000 02DB OCR2=0x00;
;PCODE: $00000873 VOL: 0
;PCODE: $00000874 VOL: 0
; 0000 02DC 
; 0000 02DD // Timer/Counter 3 initialization
; 0000 02DE // Clock source: System Clock
; 0000 02DF // Clock value: Timer 3 Stopped
; 0000 02E0 // Mode: Normal top=FFFFh
; 0000 02E1 // Noise Canceler: Off
; 0000 02E2 // Input Capture on Falling Edge
; 0000 02E3 // OC3A output: Discon.
; 0000 02E4 // OC3B output: Discon.
; 0000 02E5 // OC3C output: Discon.
; 0000 02E6 // Timer 3 Overflow Interrupt: Off
; 0000 02E7 // Input Capture Interrupt: Off
; 0000 02E8 // Compare A Match Interrupt: Off
; 0000 02E9 // Compare B Match Interrupt: Off
; 0000 02EA // Compare C Match Interrupt: Off
; 0000 02EB TCCR3A=0x00;
;PCODE: $00000875 VOL: 0
;PCODE: $00000876 VOL: 0
; 0000 02EC TCCR3B=0x00;
;PCODE: $00000877 VOL: 0
;PCODE: $00000878 VOL: 0
; 0000 02ED TCNT3H=0x00;
;PCODE: $00000879 VOL: 0
;PCODE: $0000087A VOL: 0
; 0000 02EE TCNT3L=0x00;
;PCODE: $0000087B VOL: 0
;PCODE: $0000087C VOL: 0
; 0000 02EF ICR3H=0x00;
;PCODE: $0000087D VOL: 0
;PCODE: $0000087E VOL: 0
; 0000 02F0 ICR3L=0x00;
;PCODE: $0000087F VOL: 0
;PCODE: $00000880 VOL: 0
; 0000 02F1 OCR3AH=0x00;
;PCODE: $00000881 VOL: 0
;PCODE: $00000882 VOL: 0
; 0000 02F2 OCR3AL=0x00;
;PCODE: $00000883 VOL: 0
;PCODE: $00000884 VOL: 0
; 0000 02F3 OCR3BH=0x00;
;PCODE: $00000885 VOL: 0
;PCODE: $00000886 VOL: 0
; 0000 02F4 OCR3BL=0x00;
;PCODE: $00000887 VOL: 0
;PCODE: $00000888 VOL: 0
; 0000 02F5 OCR3CH=0x00;
;PCODE: $00000889 VOL: 0
;PCODE: $0000088A VOL: 0
; 0000 02F6 OCR3CL=0x00;
;PCODE: $0000088B VOL: 0
;PCODE: $0000088C VOL: 0
; 0000 02F7 
; 0000 02F8 // External Interrupt(s) initialization
; 0000 02F9 // INT0: Off
; 0000 02FA // INT1: Off
; 0000 02FB // INT2: Off
; 0000 02FC // INT3: Off
; 0000 02FD // INT4: Off
; 0000 02FE // INT5: Off
; 0000 02FF // INT6: Off
; 0000 0300 // INT7: Off
; 0000 0301 EICRA=0x00;
;PCODE: $0000088D VOL: 0
;PCODE: $0000088E VOL: 0
; 0000 0302 EICRB=0x00;
;PCODE: $0000088F VOL: 0
;PCODE: $00000890 VOL: 0
; 0000 0303 EIMSK=0x00;
;PCODE: $00000891 VOL: 0
;PCODE: $00000892 VOL: 0
; 0000 0304 
; 0000 0305 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0306 TIMSK=0x00;
;PCODE: $00000893 VOL: 0
;PCODE: $00000894 VOL: 0
; 0000 0307 ETIMSK=0x00;
;PCODE: $00000895 VOL: 0
;PCODE: $00000896 VOL: 0
; 0000 0308 
; 0000 0309 // USART1 initialization
; 0000 030A // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 030B // USART1 Receiver: On
; 0000 030C // USART1 Transmitter: On
; 0000 030D // USART1 Mode: Asynchronous
; 0000 030E // USART1 Baud Rate: 9600
; 0000 030F UCSR1A=0x00;
;PCODE: $00000897 VOL: 0
;PCODE: $00000898 VOL: 0
; 0000 0310 UCSR1B=0x98;
;PCODE: $00000899 VOL: 0
;PCODE: $0000089A VOL: 0
; 0000 0311 UCSR1C=0x06;
;PCODE: $0000089B VOL: 0
;PCODE: $0000089C VOL: 0
; 0000 0312 UBRR1H=0x00;
;PCODE: $0000089D VOL: 0
;PCODE: $0000089E VOL: 0
; 0000 0313 UBRR1L=0x47;
;PCODE: $0000089F VOL: 0
;PCODE: $000008A0 VOL: 0
; 0000 0314 
; 0000 0315 // Analog Comparator initialization
; 0000 0316 // Analog Comparator: Off
; 0000 0317 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 0318 ACSR=0x80;
;PCODE: $000008A1 VOL: 0
;PCODE: $000008A2 VOL: 0
; 0000 0319 SFIOR=0x00;
;PCODE: $000008A3 VOL: 0
;PCODE: $000008A4 VOL: 0
; 0000 031A 
; 0000 031B // ADC initialization
; 0000 031C // ADC Clock frequency: 691.200 kHz
; 0000 031D // ADC Voltage Reference: AVCC pin
; 0000 031E ADMUX=ADC_VREF_TYPE & 0xff;
;PCODE: $000008A5 VOL: 0
;PCODE: $000008A6 VOL: 0
; 0000 031F ADCSRA=0x84;
;PCODE: $000008A7 VOL: 0
;PCODE: $000008A8 VOL: 0
; 0000 0320 
; 0000 0321 // I2C Bus initialization
; 0000 0322 i2c_init();
;PCODE: $000008A9 VOL: 0
; 0000 0323 
; 0000 0324 // LCD module initialization
; 0000 0325 lcd_init(16);
;PCODE: $000008AA VOL: 0
;PCODE: $000008AB VOL: 0
;PCODE: $000008AC VOL: 0
; 0000 0326 
; 0000 0327 // Watchdog Timer initialization
; 0000 0328 // Watchdog Timer Prescaler: OSC/16k
; 0000 0329 #pragma optsize-
; 0000 032A WDTCR=0x18;
;PCODE: $000008AD VOL: 0
;PCODE: $000008AE VOL: 0
; 0000 032B WDTCR=0x08;
;PCODE: $000008AF VOL: 0
;PCODE: $000008B0 VOL: 0
; 0000 032C #ifdef _OPTIMIZE_SIZE_
; 0000 032D #pragma optsize+
; 0000 032E #endif
; 0000 032F 
; 0000 0330 // Global enable interrupts
; 0000 0331 #asm("sei")
;PCODE: $000008B1 VOL: 0
	sei
;PCODE: $000008B2 VOL: 0
; 0000 0332 if (PINA.4==1){
;PCODE: $000008B3 VOL: 0
;PCODE: $000008B4 VOL: 0
;PCODE: $000008B5 VOL: 0
;PCODE: $000008B6 VOL: 0
; 0000 0333 c=compass_read(1);
;PCODE: $000008B7 VOL: 0
;PCODE: $000008B8 VOL: 0
;PCODE: $000008B9 VOL: 0
;PCODE: $000008BA VOL: 0
;PCODE: $000008BB VOL: 0
;PCODE: $000008BC VOL: 0
; 0000 0334 delay_ms(1000);
;PCODE: $000008BD VOL: 0
;PCODE: $000008BE VOL: 0
;PCODE: $000008BF VOL: 0
; 0000 0335 }
; 0000 0336 #asm("wdr") ;
;PCODE: $000008C0 VOL: 0
;PCODE: $000008C1 VOL: 0
	wdr
;PCODE: $000008C2 VOL: 0
; 0000 0337 
; 0000 0338 while (1)
;PCODE: $000008C3 VOL: 0
; 0000 0339       {
; 0000 033A 
; 0000 033B       compass();
;PCODE: $000008C4 VOL: 0
; 0000 033C       sensor();
;PCODE: $000008C5 VOL: 0
; 0000 033D       sharp();
;PCODE: $000008C6 VOL: 0
; 0000 033E       out();
;PCODE: $000008C7 VOL: 0
; 0000 033F       bt();
;PCODE: $000008C8 VOL: 0
; 0000 0340 
; 0000 0341 
; 0000 0342 
; 0000 0343 
; 0000 0344        if(adc[min]<900 && (t==1 || t==0)  ){
;PCODE: $000008C9 VOL: 0
;PCODE: $000008CA VOL: 0
;PCODE: $000008CB VOL: 0
;PCODE: $000008CC VOL: 0
;PCODE: $000008CD VOL: 0
;PCODE: $000008CE VOL: 0
;PCODE: $000008CF VOL: 0
;PCODE: $000008D0 VOL: 0
;PCODE: $000008D1 VOL: 0
;PCODE: $000008D2 VOL: 0
;PCODE: $000008D3 VOL: 0
;PCODE: $000008D4 VOL: 0
;PCODE: $000008D5 VOL: 0
;PCODE: $000008D6 VOL: 0
;PCODE: $000008D7 VOL: 0
;PCODE: $000008D8 VOL: 0
;PCODE: $000008D9 VOL: 0
;PCODE: $000008DA VOL: 0
; 0000 0345        follow();
;PCODE: $000008DB VOL: 0
; 0000 0346        #asm("wdr") ;}
;PCODE: $000008DC VOL: 0
	wdr
;PCODE: $000008DD VOL: 0
; 0000 0347       else if (adc[min]>900  || t==2 ){
;PCODE: $000008DE VOL: 0
;PCODE: $000008DF VOL: 0
;PCODE: $000008E0 VOL: 0
;PCODE: $000008E1 VOL: 0
;PCODE: $000008E2 VOL: 0
;PCODE: $000008E3 VOL: 0
;PCODE: $000008E4 VOL: 0
;PCODE: $000008E5 VOL: 0
;PCODE: $000008E6 VOL: 0
;PCODE: $000008E7 VOL: 0
;PCODE: $000008E8 VOL: 0
;PCODE: $000008E9 VOL: 0
;PCODE: $000008EA VOL: 0
;PCODE: $000008EB VOL: 0
; 0000 0348 
; 0000 0349        sahmi();
;PCODE: $000008EC VOL: 0
; 0000 034A 
; 0000 034B 
; 0000 034C 
; 0000 034D       }
; 0000 034E 
; 0000 034F 
; 0000 0350  //////////////////////////// //chap
; 0000 0351  while (l==1  || outl==1) {
;PCODE: $000008ED VOL: 0
;PCODE: $000008EE VOL: 0
;PCODE: $000008EF VOL: 0
;PCODE: $000008F0 VOL: 0
;PCODE: $000008F1 VOL: 0
;PCODE: $000008F2 VOL: 0
;PCODE: $000008F3 VOL: 0
;PCODE: $000008F4 VOL: 0
;PCODE: $000008F5 VOL: 0
;PCODE: $000008F6 VOL: 0
;PCODE: $000008F7 VOL: 0
; 0000 0352  //////////////////////////putchar1('2');
; 0000 0353  if(kaf[15]<400 ) {
;PCODE: $000008F8 VOL: 0
;PCODE: $000008F9 VOL: 0
;PCODE: $000008FA VOL: 0
;PCODE: $000008FB VOL: 0
; 0000 0354 motor(0+cmp/2,0+cmp/2,0+cmp/2,0+cmp/2);
;PCODE: $000008FC VOL: 0
;PCODE: $000008FD VOL: 0
;PCODE: $000008FE VOL: 0
;PCODE: $000008FF VOL: 0
;PCODE: $00000900 VOL: 0
;PCODE: $00000901 VOL: 0
;PCODE: $00000902 VOL: 0
;PCODE: $00000903 VOL: 0
;PCODE: $00000904 VOL: 0
; 0000 0355  #asm("wdr") ;
;PCODE: $00000905 VOL: 0
	wdr
;PCODE: $00000906 VOL: 0
; 0000 0356 }
; 0000 0357 
; 0000 0358  if(kaf[14]<400 ) {
;PCODE: $00000907 VOL: 0
;PCODE: $00000908 VOL: 0
;PCODE: $00000909 VOL: 0
;PCODE: $0000090A VOL: 0
;PCODE: $0000090B VOL: 0
; 0000 0359 
; 0000 035A     motor(0+cmp/2,0+cmp/2,0+cmp/2,0+cmp/2);
;PCODE: $0000090C VOL: 0
;PCODE: $0000090D VOL: 0
;PCODE: $0000090E VOL: 0
;PCODE: $0000090F VOL: 0
;PCODE: $00000910 VOL: 0
;PCODE: $00000911 VOL: 0
;PCODE: $00000912 VOL: 0
;PCODE: $00000913 VOL: 0
;PCODE: $00000914 VOL: 0
; 0000 035B  #asm("wdr") ;
;PCODE: $00000915 VOL: 0
	wdr
;PCODE: $00000916 VOL: 0
; 0000 035C }
; 0000 035D 
; 0000 035E 
; 0000 035F  if(( kaf[12]<400  || kaf[13]<400) &&( (min>=8 && min<16) || min==0) ){
;PCODE: $00000917 VOL: 0
;PCODE: $00000918 VOL: 0
;PCODE: $00000919 VOL: 0
;PCODE: $0000091A VOL: 0
;PCODE: $0000091B VOL: 0
;PCODE: $0000091C VOL: 0
;PCODE: $0000091D VOL: 0
;PCODE: $0000091E VOL: 0
;PCODE: $0000091F VOL: 0
;PCODE: $00000920 VOL: 0
;PCODE: $00000921 VOL: 0
;PCODE: $00000922 VOL: 0
;PCODE: $00000923 VOL: 0
;PCODE: $00000924 VOL: 0
;PCODE: $00000925 VOL: 0
;PCODE: $00000926 VOL: 0
;PCODE: $00000927 VOL: 0
;PCODE: $00000928 VOL: 0
;PCODE: $00000929 VOL: 0
;PCODE: $0000092A VOL: 0
;PCODE: $0000092B VOL: 0
;PCODE: $0000092C VOL: 0
;PCODE: $0000092D VOL: 0
;PCODE: $0000092E VOL: 0
;PCODE: $0000092F VOL: 0
;PCODE: $00000930 VOL: 0
;PCODE: $00000931 VOL: 0
;PCODE: $00000932 VOL: 0
; 0000 0360 motor((255+cmp)/4,(-255+cmp)/4,(-255+cmp)/4,(255+cmp)/4);
;PCODE: $00000933 VOL: 0
;PCODE: $00000934 VOL: 0
;PCODE: $00000935 VOL: 0
;PCODE: $00000936 VOL: 0
;PCODE: $00000937 VOL: 0
;PCODE: $00000938 VOL: 0
;PCODE: $00000939 VOL: 0
;PCODE: $0000093A VOL: 0
;PCODE: $0000093B VOL: 0
;PCODE: $0000093C VOL: 0
;PCODE: $0000093D VOL: 0
;PCODE: $0000093E VOL: 0
;PCODE: $0000093F VOL: 0
;PCODE: $00000940 VOL: 0
;PCODE: $00000941 VOL: 0
;PCODE: $00000942 VOL: 0
;PCODE: $00000943 VOL: 0
;PCODE: $00000944 VOL: 0
;PCODE: $00000945 VOL: 0
;PCODE: $00000946 VOL: 0
;PCODE: $00000947 VOL: 0
; 0000 0361 
; 0000 0362  #asm("wdr") ;
;PCODE: $00000948 VOL: 0
	wdr
;PCODE: $00000949 VOL: 0
; 0000 0363 
; 0000 0364  }
; 0000 0365 
; 0000 0366 
; 0000 0367  else if (min>0 && min<8   ) {
;PCODE: $0000094A VOL: 0
;PCODE: $0000094B VOL: 0
;PCODE: $0000094C VOL: 0
;PCODE: $0000094D VOL: 0
;PCODE: $0000094E VOL: 0
;PCODE: $0000094F VOL: 0
;PCODE: $00000950 VOL: 0
;PCODE: $00000951 VOL: 0
;PCODE: $00000952 VOL: 0
;PCODE: $00000953 VOL: 0
;PCODE: $00000954 VOL: 0
;PCODE: $00000955 VOL: 0
; 0000 0368    l=0;
;PCODE: $00000956 VOL: 0
;PCODE: $00000957 VOL: 0
; 0000 0369    outl=0;
;PCODE: $00000958 VOL: 0
;PCODE: $00000959 VOL: 0
; 0000 036A     sensor();
;PCODE: $0000095A VOL: 0
; 0000 036B  follow();
;PCODE: $0000095B VOL: 0
; 0000 036C  #asm("wdr") ;
;PCODE: $0000095C VOL: 0
	wdr
;PCODE: $0000095D VOL: 0
; 0000 036D  }
; 0000 036E 
; 0000 036F 
; 0000 0370 
; 0000 0371  #asm("wdr") ;
;PCODE: $0000095E VOL: 0
;PCODE: $0000095F VOL: 0
;PCODE: $00000960 VOL: 0
	wdr
;PCODE: $00000961 VOL: 0
; 0000 0372  compass();
;PCODE: $00000962 VOL: 0
; 0000 0373  sensor();
;PCODE: $00000963 VOL: 0
; 0000 0374  sharp();
;PCODE: $00000964 VOL: 0
; 0000 0375  }
;PCODE: $00000965 VOL: 0
;PCODE: $00000966 VOL: 0
; 0000 0376 
; 0000 0377 
; 0000 0378 
; 0000 0379 
; 0000 037A  /////////////////////////// rast
; 0000 037B  while (r==1 || outr==1) {
;PCODE: $00000967 VOL: 0
;PCODE: $00000968 VOL: 0
;PCODE: $00000969 VOL: 0
;PCODE: $0000096A VOL: 0
;PCODE: $0000096B VOL: 0
;PCODE: $0000096C VOL: 0
;PCODE: $0000096D VOL: 0
;PCODE: $0000096E VOL: 0
;PCODE: $0000096F VOL: 0
; 0000 037C 
; 0000 037D  if(kaf[3]<400 ) {
;PCODE: $00000970 VOL: 0
;PCODE: $00000971 VOL: 0
;PCODE: $00000972 VOL: 0
;PCODE: $00000973 VOL: 0
; 0000 037E motor(0+cmp/2,0+cmp/2,0+cmp/2,0+cmp/2);
;PCODE: $00000974 VOL: 0
;PCODE: $00000975 VOL: 0
;PCODE: $00000976 VOL: 0
;PCODE: $00000977 VOL: 0
;PCODE: $00000978 VOL: 0
;PCODE: $00000979 VOL: 0
;PCODE: $0000097A VOL: 0
;PCODE: $0000097B VOL: 0
;PCODE: $0000097C VOL: 0
; 0000 037F  #asm("wdr") ;
;PCODE: $0000097D VOL: 0
	wdr
;PCODE: $0000097E VOL: 0
; 0000 0380 }
; 0000 0381 
; 0000 0382  if(kaf[2]<400 ) {
;PCODE: $0000097F VOL: 0
;PCODE: $00000980 VOL: 0
;PCODE: $00000981 VOL: 0
;PCODE: $00000982 VOL: 0
;PCODE: $00000983 VOL: 0
; 0000 0383 
; 0000 0384     motor(0+cmp/2,0+cmp/2,0+cmp/2,0+cmp/2);
;PCODE: $00000984 VOL: 0
;PCODE: $00000985 VOL: 0
;PCODE: $00000986 VOL: 0
;PCODE: $00000987 VOL: 0
;PCODE: $00000988 VOL: 0
;PCODE: $00000989 VOL: 0
;PCODE: $0000098A VOL: 0
;PCODE: $0000098B VOL: 0
;PCODE: $0000098C VOL: 0
; 0000 0385  #asm("wdr") ;
;PCODE: $0000098D VOL: 0
	wdr
;PCODE: $0000098E VOL: 0
; 0000 0386 }
; 0000 0387 
; 0000 0388 
; 0000 0389  if(( kaf[0]<400  || kaf[1]<400) &&( min>=0 && min<=8) ){
;PCODE: $0000098F VOL: 0
;PCODE: $00000990 VOL: 0
;PCODE: $00000991 VOL: 0
;PCODE: $00000992 VOL: 0
;PCODE: $00000993 VOL: 0
;PCODE: $00000994 VOL: 0
;PCODE: $00000995 VOL: 0
;PCODE: $00000996 VOL: 0
;PCODE: $00000997 VOL: 0
;PCODE: $00000998 VOL: 0
;PCODE: $00000999 VOL: 0
;PCODE: $0000099A VOL: 0
;PCODE: $0000099B VOL: 0
;PCODE: $0000099C VOL: 0
;PCODE: $0000099D VOL: 0
;PCODE: $0000099E VOL: 0
;PCODE: $0000099F VOL: 0
;PCODE: $000009A0 VOL: 0
;PCODE: $000009A1 VOL: 0
;PCODE: $000009A2 VOL: 0
;PCODE: $000009A3 VOL: 0
;PCODE: $000009A4 VOL: 0
;PCODE: $000009A5 VOL: 0
;PCODE: $000009A6 VOL: 0
; 0000 038A motor((-255+cmp)/4,(255+cmp)/4,(255+cmp)/4,(-255+cmp)/4);
;PCODE: $000009A7 VOL: 0
;PCODE: $000009A8 VOL: 0
;PCODE: $000009A9 VOL: 0
;PCODE: $000009AA VOL: 0
;PCODE: $000009AB VOL: 0
;PCODE: $000009AC VOL: 0
;PCODE: $000009AD VOL: 0
;PCODE: $000009AE VOL: 0
;PCODE: $000009AF VOL: 0
;PCODE: $000009B0 VOL: 0
;PCODE: $000009B1 VOL: 0
;PCODE: $000009B2 VOL: 0
;PCODE: $000009B3 VOL: 0
;PCODE: $000009B4 VOL: 0
;PCODE: $000009B5 VOL: 0
;PCODE: $000009B6 VOL: 0
;PCODE: $000009B7 VOL: 0
;PCODE: $000009B8 VOL: 0
;PCODE: $000009B9 VOL: 0
;PCODE: $000009BA VOL: 0
;PCODE: $000009BB VOL: 0
; 0000 038B 
; 0000 038C  #asm("wdr") ;
;PCODE: $000009BC VOL: 0
	wdr
;PCODE: $000009BD VOL: 0
; 0000 038D 
; 0000 038E  }
; 0000 038F 
; 0000 0390 
; 0000 0391  else if (min>8 && min<16   ) {
;PCODE: $000009BE VOL: 0
;PCODE: $000009BF VOL: 0
;PCODE: $000009C0 VOL: 0
;PCODE: $000009C1 VOL: 0
;PCODE: $000009C2 VOL: 0
;PCODE: $000009C3 VOL: 0
;PCODE: $000009C4 VOL: 0
;PCODE: $000009C5 VOL: 0
;PCODE: $000009C6 VOL: 0
;PCODE: $000009C7 VOL: 0
;PCODE: $000009C8 VOL: 0
;PCODE: $000009C9 VOL: 0
; 0000 0392    r=0;
;PCODE: $000009CA VOL: 0
;PCODE: $000009CB VOL: 0
; 0000 0393    outr=0;
;PCODE: $000009CC VOL: 0
;PCODE: $000009CD VOL: 0
; 0000 0394     sensor();
;PCODE: $000009CE VOL: 0
; 0000 0395  follow();
;PCODE: $000009CF VOL: 0
; 0000 0396  #asm("wdr") ;
;PCODE: $000009D0 VOL: 0
	wdr
;PCODE: $000009D1 VOL: 0
; 0000 0397  }
; 0000 0398 
; 0000 0399 
; 0000 039A 
; 0000 039B  #asm("wdr") ;
;PCODE: $000009D2 VOL: 0
;PCODE: $000009D3 VOL: 0
;PCODE: $000009D4 VOL: 0
	wdr
;PCODE: $000009D5 VOL: 0
; 0000 039C  compass();
;PCODE: $000009D6 VOL: 0
; 0000 039D  sensor();
;PCODE: $000009D7 VOL: 0
; 0000 039E  sharp();
;PCODE: $000009D8 VOL: 0
; 0000 039F  }
;PCODE: $000009D9 VOL: 0
;PCODE: $000009DA VOL: 0
; 0000 03A0 
; 0000 03A1  while(f==1) {
;PCODE: $000009DB VOL: 0
;PCODE: $000009DC VOL: 0
;PCODE: $000009DD VOL: 0
;PCODE: $000009DE VOL: 0
; 0000 03A2            if(SB<190)
;PCODE: $000009DF VOL: 0
;PCODE: $000009E0 VOL: 0
;PCODE: $000009E1 VOL: 0
; 0000 03A3            {
; 0000 03A4           motor(-128-RL+cmp,-255+RL+cmp,128+RL-cmp,255-RL+cmp);
;PCODE: $000009E2 VOL: 0
;PCODE: $000009E3 VOL: 0
;PCODE: $000009E4 VOL: 0
;PCODE: $000009E5 VOL: 0
;PCODE: $000009E6 VOL: 0
;PCODE: $000009E7 VOL: 0
;PCODE: $000009E8 VOL: 0
;PCODE: $000009E9 VOL: 0
;PCODE: $000009EA VOL: 0
;PCODE: $000009EB VOL: 0
;PCODE: $000009EC VOL: 0
;PCODE: $000009ED VOL: 0
;PCODE: $000009EE VOL: 0
;PCODE: $000009EF VOL: 0
;PCODE: $000009F0 VOL: 0
;PCODE: $000009F1 VOL: 0
;PCODE: $000009F2 VOL: 0
;PCODE: $000009F3 VOL: 0
;PCODE: $000009F4 VOL: 0
; 0000 03A5            #asm("wdr") ;
;PCODE: $000009F5 VOL: 0
	wdr
;PCODE: $000009F6 VOL: 0
; 0000 03A6            }
; 0000 03A7            /////////////////////////////////////////////////////
; 0000 03A8            else if(SB>190 && (RL>60 || RL<-60))
;PCODE: $000009F7 VOL: 0
;PCODE: $000009F8 VOL: 0
;PCODE: $000009F9 VOL: 0
;PCODE: $000009FA VOL: 0
;PCODE: $000009FB VOL: 0
;PCODE: $000009FC VOL: 0
;PCODE: $000009FD VOL: 0
;PCODE: $000009FE VOL: 0
;PCODE: $000009FF VOL: 0
;PCODE: $00000A00 VOL: 0
;PCODE: $00000A01 VOL: 0
;PCODE: $00000A02 VOL: 0
;PCODE: $00000A03 VOL: 0
;PCODE: $00000A04 VOL: 0
;PCODE: $00000A05 VOL: 0
;PCODE: $00000A06 VOL: 0
;PCODE: $00000A07 VOL: 0
; 0000 03A9            {
; 0000 03AA            RL=RL*3;
;PCODE: $00000A08 VOL: 0
;PCODE: $00000A09 VOL: 0
;PCODE: $00000A0A VOL: 0
;PCODE: $00000A0B VOL: 0
; 0000 03AB           motor(255-RL+cmp,255+RL+cmp,-255+RL+cmp,-255-RL+cmp);
;PCODE: $00000A0C VOL: 0
;PCODE: $00000A0D VOL: 0
;PCODE: $00000A0E VOL: 0
;PCODE: $00000A0F VOL: 0
;PCODE: $00000A10 VOL: 0
;PCODE: $00000A11 VOL: 0
;PCODE: $00000A12 VOL: 0
;PCODE: $00000A13 VOL: 0
;PCODE: $00000A14 VOL: 0
;PCODE: $00000A15 VOL: 0
;PCODE: $00000A16 VOL: 0
;PCODE: $00000A17 VOL: 0
;PCODE: $00000A18 VOL: 0
;PCODE: $00000A19 VOL: 0
;PCODE: $00000A1A VOL: 0
;PCODE: $00000A1B VOL: 0
;PCODE: $00000A1C VOL: 0
;PCODE: $00000A1D VOL: 0
;PCODE: $00000A1E VOL: 0
; 0000 03AC           }
; 0000 03AD            ////////////////////////////////////////////////////
; 0000 03AE            else if(SB>160 && RL<-70 )
;PCODE: $00000A1F VOL: 0
;PCODE: $00000A20 VOL: 0
;PCODE: $00000A21 VOL: 0
;PCODE: $00000A22 VOL: 0
;PCODE: $00000A23 VOL: 0
;PCODE: $00000A24 VOL: 0
;PCODE: $00000A25 VOL: 0
;PCODE: $00000A26 VOL: 0
;PCODE: $00000A27 VOL: 0
;PCODE: $00000A28 VOL: 0
;PCODE: $00000A29 VOL: 0
;PCODE: $00000A2A VOL: 0
; 0000 03AF            {
; 0000 03B0            motor((255+cmp)*0.5,(-255+cmp)*0.5,(-255+cmp)*0.5,(255+cmp)*0.5);
;PCODE: $00000A2B VOL: 0
;PCODE: $00000A2C VOL: 0
;PCODE: $00000A2D VOL: 0
;PCODE: $00000A2E VOL: 0
;PCODE: $00000A2F VOL: 0
;PCODE: $00000A30 VOL: 0
;PCODE: $00000A31 VOL: 0
;PCODE: $00000A32 VOL: 0
;PCODE: $00000A33 VOL: 0
;PCODE: $00000A34 VOL: 0
;PCODE: $00000A35 VOL: 0
;PCODE: $00000A36 VOL: 0
;PCODE: $00000A37 VOL: 0
;PCODE: $00000A38 VOL: 0
;PCODE: $00000A39 VOL: 0
;PCODE: $00000A3A VOL: 0
;PCODE: $00000A3B VOL: 0
;PCODE: $00000A3C VOL: 0
;PCODE: $00000A3D VOL: 0
;PCODE: $00000A3E VOL: 0
;PCODE: $00000A3F VOL: 0
;PCODE: $00000A40 VOL: 0
;PCODE: $00000A41 VOL: 0
;PCODE: $00000A42 VOL: 0
;PCODE: $00000A43 VOL: 0
;PCODE: $00000A44 VOL: 0
;PCODE: $00000A45 VOL: 0
;PCODE: $00000A46 VOL: 0
;PCODE: $00000A47 VOL: 0
; 0000 03B1            }
; 0000 03B2             else if(SB>160 && RL>70 )
;PCODE: $00000A48 VOL: 0
;PCODE: $00000A49 VOL: 0
;PCODE: $00000A4A VOL: 0
;PCODE: $00000A4B VOL: 0
;PCODE: $00000A4C VOL: 0
;PCODE: $00000A4D VOL: 0
;PCODE: $00000A4E VOL: 0
;PCODE: $00000A4F VOL: 0
;PCODE: $00000A50 VOL: 0
;PCODE: $00000A51 VOL: 0
;PCODE: $00000A52 VOL: 0
;PCODE: $00000A53 VOL: 0
; 0000 03B3            {
; 0000 03B4            motor((-255+cmp)*0.5,(255+cmp)*0.5,(255+cmp)*0.5,(-255+cmp)*0.5);
;PCODE: $00000A54 VOL: 0
;PCODE: $00000A55 VOL: 0
;PCODE: $00000A56 VOL: 0
;PCODE: $00000A57 VOL: 0
;PCODE: $00000A58 VOL: 0
;PCODE: $00000A59 VOL: 0
;PCODE: $00000A5A VOL: 0
;PCODE: $00000A5B VOL: 0
;PCODE: $00000A5C VOL: 0
;PCODE: $00000A5D VOL: 0
;PCODE: $00000A5E VOL: 0
;PCODE: $00000A5F VOL: 0
;PCODE: $00000A60 VOL: 0
;PCODE: $00000A61 VOL: 0
;PCODE: $00000A62 VOL: 0
;PCODE: $00000A63 VOL: 0
;PCODE: $00000A64 VOL: 0
;PCODE: $00000A65 VOL: 0
;PCODE: $00000A66 VOL: 0
;PCODE: $00000A67 VOL: 0
;PCODE: $00000A68 VOL: 0
;PCODE: $00000A69 VOL: 0
;PCODE: $00000A6A VOL: 0
;PCODE: $00000A6B VOL: 0
;PCODE: $00000A6C VOL: 0
;PCODE: $00000A6D VOL: 0
;PCODE: $00000A6E VOL: 0
;PCODE: $00000A6F VOL: 0
;PCODE: $00000A70 VOL: 0
; 0000 03B5            if (adc[min]<60  &&( (adc[0]<60) || (adc[15]<60)|| (adc[1]<60)  )  )  t=0;}
;PCODE: $00000A71 VOL: 0
;PCODE: $00000A72 VOL: 0
;PCODE: $00000A73 VOL: 0
;PCODE: $00000A74 VOL: 0
;PCODE: $00000A75 VOL: 0
;PCODE: $00000A76 VOL: 0
;PCODE: $00000A77 VOL: 0
;PCODE: $00000A78 VOL: 0
;PCODE: $00000A79 VOL: 0
;PCODE: $00000A7A VOL: 0
;PCODE: $00000A7B VOL: 0
;PCODE: $00000A7C VOL: 0
;PCODE: $00000A7D VOL: 0
;PCODE: $00000A7E VOL: 0
;PCODE: $00000A7F VOL: 0
;PCODE: $00000A80 VOL: 0
;PCODE: $00000A81 VOL: 0
;PCODE: $00000A82 VOL: 0
;PCODE: $00000A83 VOL: 0
;PCODE: $00000A84 VOL: 0
;PCODE: $00000A85 VOL: 0
;PCODE: $00000A86 VOL: 0
;PCODE: $00000A87 VOL: 0
;PCODE: $00000A88 VOL: 0
;PCODE: $00000A89 VOL: 0
;PCODE: $00000A8A VOL: 0
; 0000 03B6 
; 0000 03B7           else  {
;PCODE: $00000A8B VOL: 0
;PCODE: $00000A8C VOL: 0
; 0000 03B8              motor(0+cmp,0+cmp,0+cmp,0+cmp);
;PCODE: $00000A8D VOL: 0
;PCODE: $00000A8E VOL: 0
;PCODE: $00000A8F VOL: 0
;PCODE: $00000A90 VOL: 0
;PCODE: $00000A91 VOL: 0
;PCODE: $00000A92 VOL: 0
;PCODE: $00000A93 VOL: 0
;PCODE: $00000A94 VOL: 0
;PCODE: $00000A95 VOL: 0
;PCODE: $00000A96 VOL: 0
;PCODE: $00000A97 VOL: 0
;PCODE: $00000A98 VOL: 0
;PCODE: $00000A99 VOL: 0
; 0000 03B9           t=0;
;PCODE: $00000A9A VOL: 0
; 0000 03BA           f=0 ;
;PCODE: $00000A9B VOL: 0
;PCODE: $00000A9C VOL: 0
; 0000 03BB 
; 0000 03BC           }
;PCODE: $00000A9D VOL: 0
;PCODE: $00000A9E VOL: 0
;PCODE: $00000A9F VOL: 0
;PCODE: $00000AA0 VOL: 0
; 0000 03BD          sharp();
;PCODE: $00000AA1 VOL: 0
; 0000 03BE          compass();
;PCODE: $00000AA2 VOL: 0
; 0000 03BF           #asm("wdr") ;
;PCODE: $00000AA3 VOL: 0
	wdr
;PCODE: $00000AA4 VOL: 0
; 0000 03C0           }
;PCODE: $00000AA5 VOL: 0
;PCODE: $00000AA6 VOL: 0
; 0000 03C1 
; 0000 03C2 
; 0000 03C3 
; 0000 03C4               if(SB>300){
;PCODE: $00000AA7 VOL: 0
;PCODE: $00000AA8 VOL: 0
;PCODE: $00000AA9 VOL: 0
; 0000 03C5             if (kaf[4]<400 || kaf[5]<400 || kaf[6]<400 ||  kaf[7]<400){
;PCODE: $00000AAA VOL: 0
;PCODE: $00000AAB VOL: 0
;PCODE: $00000AAC VOL: 0
;PCODE: $00000AAD VOL: 0
;PCODE: $00000AAE VOL: 0
;PCODE: $00000AAF VOL: 0
;PCODE: $00000AB0 VOL: 0
;PCODE: $00000AB1 VOL: 0
;PCODE: $00000AB2 VOL: 0
;PCODE: $00000AB3 VOL: 0
;PCODE: $00000AB4 VOL: 0
;PCODE: $00000AB5 VOL: 0
;PCODE: $00000AB6 VOL: 0
;PCODE: $00000AB7 VOL: 0
;PCODE: $00000AB8 VOL: 0
;PCODE: $00000AB9 VOL: 0
;PCODE: $00000ABA VOL: 0
;PCODE: $00000ABB VOL: 0
; 0000 03C6             motor(255+cmp,255+cmp,-255+cmp,-255+cmp);
;PCODE: $00000ABC VOL: 0
;PCODE: $00000ABD VOL: 0
;PCODE: $00000ABE VOL: 0
;PCODE: $00000ABF VOL: 0
;PCODE: $00000AC0 VOL: 0
;PCODE: $00000AC1 VOL: 0
;PCODE: $00000AC2 VOL: 0
;PCODE: $00000AC3 VOL: 0
;PCODE: $00000AC4 VOL: 0
;PCODE: $00000AC5 VOL: 0
;PCODE: $00000AC6 VOL: 0
; 0000 03C7               delay_ms(30);
;PCODE: $00000AC7 VOL: 0
;PCODE: $00000AC8 VOL: 0
;PCODE: $00000AC9 VOL: 0
; 0000 03C8             while (min>=4 && min<=12){
;PCODE: $00000ACA VOL: 0
;PCODE: $00000ACB VOL: 0
;PCODE: $00000ACC VOL: 0
;PCODE: $00000ACD VOL: 0
;PCODE: $00000ACE VOL: 0
;PCODE: $00000ACF VOL: 0
;PCODE: $00000AD0 VOL: 0
;PCODE: $00000AD1 VOL: 0
;PCODE: $00000AD2 VOL: 0
;PCODE: $00000AD3 VOL: 0
;PCODE: $00000AD4 VOL: 0
; 0000 03C9             motor(0+cmp,0+cmp,0+cmp,0+cmp);
;PCODE: $00000AD5 VOL: 0
;PCODE: $00000AD6 VOL: 0
;PCODE: $00000AD7 VOL: 0
;PCODE: $00000AD8 VOL: 0
;PCODE: $00000AD9 VOL: 0
;PCODE: $00000ADA VOL: 0
;PCODE: $00000ADB VOL: 0
;PCODE: $00000ADC VOL: 0
;PCODE: $00000ADD VOL: 0
;PCODE: $00000ADE VOL: 0
;PCODE: $00000ADF VOL: 0
;PCODE: $00000AE0 VOL: 0
;PCODE: $00000AE1 VOL: 0
; 0000 03CA 
; 0000 03CB               sensor(); }
;PCODE: $00000AE2 VOL: 0
;PCODE: $00000AE3 VOL: 0
;PCODE: $00000AE4 VOL: 0
; 0000 03CC               }
; 0000 03CD               #asm("wdr") ;
;PCODE: $00000AE5 VOL: 0
;PCODE: $00000AE6 VOL: 0
	wdr
;PCODE: $00000AE7 VOL: 0
; 0000 03CE               }
; 0000 03CF 
; 0000 03D0 
; 0000 03D1 
; 0000 03D2 
; 0000 03D3 
; 0000 03D4 //           while (b==1 ){
; 0000 03D5 //           if( (adc[0] || adc[1] || adc[2] || adc[3]) && (adc[12] || adc[13] || adc[14] || adc[15])){
; 0000 03D6 //           motor(255/2+cmp,255/2+cmp,-255/2+cmp,-255/2+cmp) ;
; 0000 03D7 //
; 0000 03D8 //           }
; 0000 03D9 //           if (kaf[7]<450)
; 0000 03DA //           motor(0+cmp,0+cmp,0+cmp,0+cmp);
; 0000 03DB //           if (kaf[6]<300)
; 0000 03DC //           motor(0+cmp,0+cmp,0+cmp,0+cmp);
; 0000 03DD //           if (( kaf[5]<300 || kaf[4]<300)  && min>=4 && min<=12 )
; 0000 03DE //           motor(255/3+cmp,255/3+cmp,-255/3+cmp,-255/3+cmp) ;
; 0000 03DF //
; 0000 03E0 //
; 0000 03E1 //           else if (min>12 || min<4){
; 0000 03E2 //           sensor();
; 0000 03E3 //           compass();
; 0000 03E4 //           follow();
; 0000 03E5 //           sharp();
; 0000 03E6 //
; 0000 03E7 //           b=0;
; 0000 03E8 //            #asm("wdr") ;
; 0000 03E9 //           }
; 0000 03EA //
; 0000 03EB //           sensor();
; 0000 03EC //           compass();
; 0000 03ED //           sharp();
; 0000 03EE //            #asm("wdr") ;
; 0000 03EF //
; 0000 03F0 //
; 0000 03F1 //          }
; 0000 03F2 
; 0000 03F3 
; 0000 03F4 
; 0000 03F5 
; 0000 03F6         #asm("wdr") ;
;PCODE: $00000AE8 VOL: 0
;PCODE: $00000AE9 VOL: 0
	wdr
;PCODE: $00000AEA VOL: 0
; 0000 03F7 
; 0000 03F8 
; 0000 03F9         //////////////////////////12 13 14 15 left
; 0000 03FA         /////////////////////////////0 1 2 3          right
; 0000 03FB         ///////////////////////////////// 4 5 6 7 back
; 0000 03FC         ///////////////////////////   8 9 10 11 front
; 0000 03FD 
; 0000 03FE 
; 0000 03FF 
; 0000 0400 
; 0000 0401 //                   if( SB>300){
; 0000 0402 //                motor(255-RL+cmp,255+RL+cmp,-255+RL-cmp,-255-RL+cmp);
; 0000 0403 //           }
; 0000 0404 //
; 0000 0405            //////////////////////////////////////////////////////////////
; 0000 0406 //           else if(SB>190 && RL<-70 )
; 0000 0407 //           {
; 0000 0408 //           motor((255+cmp)*0.5,(-255+cmp)*0.5,(-255+cmp)*0.5,(255+cmp)*0.5);
; 0000 0409 //           }
; 0000 040A //            else if(SB>190 && RL>70 )
; 0000 040B //           {
; 0000 040C //           motor((-255+cmp)*0.5,(255+cmp)*0.5,(255+cmp)*0.5,(-255+cmp)*0.5);
; 0000 040D //           if (adc[min]<60  &&( (adc[0]<60) || (adc[15]<60)|| (adc[1]<60)  )  )  t=0;}
; 0000 040E //            else  {  motor(0+cmp,0+cmp,0+cmp,0+cmp);
; 0000 040F //
; 0000 0410 //      b=0;
; 0000 0411 
; 0000 0412 
; 0000 0413       };
;PCODE: $00000AEB VOL: 0
;PCODE: $00000AEC VOL: 0
; 0000 0414  }
;PCODE: $00000AED VOL: 0
;PCODE: $00000AEE VOL: 0
;PCODE: $00000AEF VOL: 0
